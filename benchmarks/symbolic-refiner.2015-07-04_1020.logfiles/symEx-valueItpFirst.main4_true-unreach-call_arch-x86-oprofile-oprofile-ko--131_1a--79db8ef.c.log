scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=VALUES_FIRST -setprop cpa.constraints.lessOrEqualType=SUBSET -setprop cpa.value.refinement.pathSlicing=false -setprop cpa.value.refinement.prefixPreference=NONE -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-commit-tester/ALL.prp ../svcomp15/ldv-commit-tester/main4_true-unreach-call_arch-x86-oprofile-oprofile-ko--131_1a--79db8ef.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-358320401_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 10278: Function pointer *(apic->read) with type u32  (*)(u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10290: Function pointer *(apic->write) with type void (*)(u32 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9388: Function pointer *(timer___0->base->get_time) with type ktime_t  (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 10394-10396: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 14113-14115: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_up (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_resume to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_shutdown to nmi_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_up (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_down (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_switch to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_switch to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_down to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_switch (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_up to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to switch_worker (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to switch_worker (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_down (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_switch (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from switch_worker to nmi_setup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_shutdown to nmi_cpu_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_down to nmi_cpu_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_shutdown to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_shutdown to nmi_cpu_down (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_shutdown to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_shutdown to nmi_cpu_switch (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                      0 (count: 250965, min: 0, max: 0, avg: 0.00)
Number of global variables:                               0 (count: 250965, min: 0, max: 0, avg: 0.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  277058
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.674s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.549s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 369ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.178s
  Time for transition matches:                         0.945s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       458816 (count: 458816, min: 1, max: 1, avg: 1.00) [1 x 458816]

CPA algorithm statistics
------------------------
Number of iterations:            250965
Max size of waitlist:            84
Average size of waitlist:        53
Number of computed successors:   277058
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         26094
Number of times breaked:         0

Total time for CPA algorithm:        16.161s (Max:    16.161s)
  Time for choose from waitlist:      0.396s
  Time for precision adjustment:      2.653s
  Time for transfer relation:         9.455s
  Time for stop operator:             0.613s
  Time for adding to reached set:     1.270s

SymbolicValueAnalysisRefiner statistics
---------------------------------------
Total number of refinements:              0
Total number of targets found:            0
Time for completing refinement:           0.000s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of sliced prefixes:                              0 (count: 0, min: 0, max: 0, avg: 0.00)

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.622
  Visited lines:          6961
  Total lines:            9258
  Line coverage:          0.752
  Visited conditions:     850
  Total conditions:       1508
  Condition coverage:     0.564

CPAchecker general statistics
-----------------------------
Number of program locations:     4496
Number of CFA edges:             6409
Number of relevant variables:    1453
Number of functions:             288
Number of loops:                 76
Size of reached set:             250965
  Number of reached locations:   2628 (58%)
    Avg states per location:     95
    Max states per location:     11376 (at node N7068)
  Number of reached functions:   179 (62%)
  Number of partitions:          250965
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          6.002s
  Time for loading CPAs:          0.536s
  Time for loading parser:        0.675s
  Time for CFA construction:      4.708s
    Time for parsing file(s):     1.169s
    Time for AST to CFA:          1.992s
    Time for CFA sanity check:    0.236s
    Time for post-processing:     1.096s
      Time for var class.:        0.000s
Time for Analysis:               16.161s
CPU time for analysis:           21.500s
Total time for CPAchecker:       22.169s
Total CPU time for CPAchecker:   32.740s

Time for Garbage Collector:       0.858s (in 3 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               1172MB (  1117 MiB) max;    399MB (   381 MiB) avg;   1308MB (  1247 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     20MB (    19 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:         163MB (   155 MiB) max;     30MB (    28 MiB) avg;    163MB (   155 MiB) peak
Allocated heap memory:          2553MB (  2435 MiB) max;   2231MB (  2128 MiB) avg
Allocated non-heap memory:        26MB (    25 MiB) max;     25MB (    24 MiB) avg
Total process virtual memory:  13597MB ( 12967 MiB) max;  13592MB ( 12962 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
