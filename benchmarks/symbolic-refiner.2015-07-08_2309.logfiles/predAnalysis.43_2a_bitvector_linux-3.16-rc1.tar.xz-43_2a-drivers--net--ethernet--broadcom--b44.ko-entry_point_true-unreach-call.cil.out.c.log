scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_bitvector_linux-3.16-rc1.tar.xz-43_2a-drivers--net--ethernet--broadcom--b44.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_782391829_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8028: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8075: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7754-7755: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7846: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7891: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7801: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9103: Function pointer *(dev->ops->write32) with type void (*)(struct ssb_device *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 9103: Ignoring function call through function pointer *(dev->ops->write32): (*(dev->ops->write32))(dev, (int)offset, value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9091: Ignoring function call through function pointer *(dev->ops->read32): tmp = (*(dev->ops->read32))(dev, (int)offset); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from b44_change_mtu to b44_halt (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7801: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7891: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 7754-7755: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)-24189255811072L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7919: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from b44_set_ringparam to b44_halt (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_set_ringparam to b44_init_rings (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_wait_bit to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_chip_reset to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_clear_stats to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __b44_readphy to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __b44_set_flow_ctrl to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __b44_set_rx_mode to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __b44_set_mac_addr to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_init_hw to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_start_xmit to dma_mapping_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_start_xmit to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_set_pauseparam to b44_halt (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_set_pauseparam to b44_init_rings (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_suspend to b44_halt (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_setup_wol to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_setup_wol_pci to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_tx to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_poll to b44_disable_ints (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_rx to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_poll to b44_halt (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_disable_ints to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9091: Return type of function b44_change_mtu is int, but result is used as type u32 : tmp = b44_change_mtu(dev, (int)offset); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from ssb_read32 to b44_change_mtu (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7919: Return type of function b44_start_xmit is netdev_tx_t , but result is used as type int: tmp___0 = b44_start_xmit(dev, dma_addr); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from dma_mapping_error to b44_start_xmit (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8028: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8075: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            79680 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            79680 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       51132 (64%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         22639 (28%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5909 (7%)
  Times result was 'false':        4120 (5%)
Number of strengthen sat checks:   175
  Times result was 'false':        173 (99%)
Number of coverage checks:         471951
  BDD entailment checks:           43705
Number of SMT sat checks:          175
  trivial:                         0
  cached:                          51

Max ABE block size:                       940
Number of predicates discovered:          5
Number of abstraction locations:          2
Max number of predicates per location:    2
Avg number of predicates per location:    2
Total predicates per abstraction:         6044
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 1.02
Number of irrelevant predicates:          134 (2%)
Number of preds handled by boolean abs:   5910 (98%)
  Total number of models for allsat:      3093
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.52

Number of path formula cache hits:   2591047 (66%)

Time for post operator:                189.054s
  Time for path formula creation:      181.443s
    Actual computation:                134.347s
Time for strengthen operator:           15.807s
  Time for satisfiability checks:       11.709s
Time for prec operator:                511.448s
  Time for abstraction:                506.828s (Max:     1.808s, Count: 79680)
    Boolean abstraction:               391.688s
    Solving time:                      388.305s (Max:     1.743s)
    Model enumeration time:              3.328s
    Time for BDD construction:           0.158s (Max:     0.001s)
Time for merge operator:                14.299s
Time for coverage check:                 0.619s
  Time for BDD entailment checks:        0.216s
Total time for SMT solver (w/o itp):   403.342s

Number of BDD nodes:                               203
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                        2992 (count: 118483, min: 0, max: 759, avg: 0.03)
Time for BDD node cleanup:                             0.107s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 18.339s
  Time for transition matches:                         7.828s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      4575817 (count: 4575817, min: 1, max: 1, avg: 1.00) [1 x 4575817]

CPA algorithm statistics
------------------------
Number of iterations:            3471635
Max size of waitlist:            8098
Average size of waitlist:        2874
Number of computed successors:   3741695
Max successors for one state:    2
Number of times merged:          214123
Number of times stopped:         257828
Number of times breaked:         2

Total time for CPA algorithm:       829.933s (Max:   387.652s)
  Time for choose from waitlist:      3.659s
  Time for precision adjustment:    520.680s
  Time for transfer relation:       255.778s
  Time for merge operator:           16.967s
  Time for stop operator:             5.593s
  Time for adding to reached set:     8.724s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  20 (count: 2, min: 10, max: 10, avg: 10.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.433s
  Counterexample analysis:                0.962s (Max:     0.503s, Calls: 2)
    Refinement sat check:                 0.805s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.001s
  Building the counterexample trace:                   0.963s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.002s
  ARG update:                                          0.495s

Length of refined path (in blocks):                       2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of affected states:                                1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 1, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 1, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 2293995
Max. size of reached set after ref.:  132
Avg. size of reached set before ref.: 1269626.50
Avg. size of reached set after ref.:  66.50

Total time for CEGAR algorithm:     837.175s
Time for refinements:                 7.242s
Average time for refinement:          3.621s
Max time for refinement:              6.161s

Code Coverage
-----------------------------
  Function coverage:      0.546
  Visited lines:          8872
  Total lines:            10333
  Line coverage:          0.859
  Visited conditions:     592
  Total conditions:       1044
  Condition coverage:     0.567

CPAchecker general statistics
-----------------------------
Number of program locations:     3457
Number of CFA edges:             5060
Number of relevant variables:    1123
Number of functions:             238
Number of loops:                 22
Size of reached set:             940627
  Number of reached locations:   1864 (54%)
    Avg states per location:     504
    Max states per location:     51697 (at node N882)
  Number of reached functions:   130 (55%)
  Number of partitions:          940627
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        2109

Time for analysis setup:          5.287s
  Time for loading CPAs:          0.562s
  Time for loading parser:        0.624s
  Time for CFA construction:      4.027s
    Time for parsing file(s):     1.385s
    Time for AST to CFA:          1.266s
    Time for CFA sanity check:    0.135s
    Time for post-processing:     0.956s
      Time for var class.:        0.000s
Time for Analysis:              837.176s
CPU time for analysis:          890.440s
Total time for CPAchecker:      842.468s
Total CPU time for CPAchecker:  899.960s

Time for Garbage Collector:      34.622s (in 24 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4486MB (  4279 MiB) max;   2634MB (  2512 MiB) avg;   5116MB (  4879 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     23MB (    22 MiB) avg;     25MB (    24 MiB) peak
Used in PS Old Gen pool:        1618MB (  1543 MiB) max;   1186MB (  1131 MiB) avg;   1618MB (  1543 MiB) peak
Allocated heap memory:          5609MB (  5350 MiB) max;   5210MB (  4968 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  13732MB ( 13096 MiB) max;  13678MB ( 13045 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
