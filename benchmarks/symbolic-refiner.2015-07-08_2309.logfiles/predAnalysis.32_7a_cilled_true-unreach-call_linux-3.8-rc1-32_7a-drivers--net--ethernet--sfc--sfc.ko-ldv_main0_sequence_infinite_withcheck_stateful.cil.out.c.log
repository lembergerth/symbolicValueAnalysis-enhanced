scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--sfc--sfc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1460711203_tempdir
line 60525: Dereferencing of non-pointer type efx_vfdi_op_t  in expression *(vfdi_ops[req->op]) (ASTConverter.convert, WARNING)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 18532: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18580: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31146: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33731: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 31053-31054: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 33638-33639: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31188: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33773: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31100: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33685: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 37300: Function pointer *(efx->mdio.mdio_read) with type int (*)(struct net_device *, int, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 43615-43616: Function pointer *(efx->mdio.mdio_write) with type int (*)(struct net_device *, int, int, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 18580: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16119: Ignoring function call through function pointer *(efx->type->map_reset_reason): method = (*(efx->type->map_reset_reason))(type); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 31188: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 31100: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12691: Ignoring function call through function pointer *(efx->phy_op->fini): (*(efx->phy_op->fini))(efx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 43615-43616: Ignoring function call through function pointer *(efx->mdio.mdio_write): (*(efx->mdio.mdio_write))(efx->net_dev, efx->mdio.prtad, devad, (int)((u16 )addr), (int)((u16 )value)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 37300: Ignoring function call through function pointer *(efx->mdio.mdio_read): tmp = (*(efx->mdio.mdio_read))(efx->net_dev, efx->mdio.prtad, devad, (int)((u16 )addr)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 26743: Ignoring function call through function pointer *(efx->phy_op->remove): (*(efx->phy_op->remove))(efx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from falcon_remove_port to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 18532: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1154 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1154 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1153 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1 (0%)
  Times result was 'false':        1 (0%)
Number of strengthen sat checks:   11
  Times result was 'false':        10 (91%)
Number of coverage checks:         12571
  BDD entailment checks:           621
Number of SMT sat checks:          11
  trivial:                         0
  cached:                          0

Max ABE block size:                       246
Number of predicates discovered:          20
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         20
Max number of predicates per abstraction: 20
Avg number of predicates per abstraction: 20.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   20 (100%)
  Total number of models for allsat:      0
  Max number of models for allsat:        0
  Avg number of models for allsat:        0.00

Number of path formula cache hits:   62 (0%)

Time for post operator:                 29.553s
  Time for path formula creation:       29.341s
    Actual computation:                 27.367s
Time for strengthen operator:          107.961s
  Time for satisfiability checks:      107.879s
Time for prec operator:                  1.913s
  Time for abstraction:                  1.751s (Max:     0.651s, Count: 1154)
    Boolean abstraction:                 0.531s
    Solving time:                        0.526s (Max:     0.526s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                14.299s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):   108.405s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 1800, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.506s
  Time for transition matches:                         0.199s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        90726 (count: 90726, min: 1, max: 1, avg: 1.00) [1 x 90726]

CPA algorithm statistics
------------------------
Number of iterations:            55381
Max size of waitlist:            339
Average size of waitlist:        167
Number of computed successors:   62276
Max successors for one state:    2
Number of times merged:          5975
Number of times stopped:         6596
Number of times breaked:         1

Total time for CPA algorithm:       157.908s (Max:   153.249s)
  Time for choose from waitlist:      0.099s
  Time for precision adjustment:      2.127s
  Time for transfer relation:       139.977s
  Time for merge operator:           14.648s
  Time for stop operator:             0.235s
  Time for adding to reached set:     0.271s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  15 (count: 1, min: 15, max: 15, avg: 15.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.029s
  Counterexample analysis:                3.653s (Max:     3.653s, Calls: 1)
    Refinement sat check:                 3.089s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   3.653s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 55563
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 55563.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     162.025s
Time for refinements:                 4.111s
Average time for refinement:          4.111s
Max time for refinement:              4.111s

Code Coverage
-----------------------------
  Function coverage:      0.005
  Visited lines:          7514
  Total lines:            34906
  Line coverage:          0.215
  Visited conditions:     32
  Total conditions:       14382
  Condition coverage:     0.002

CPAchecker general statistics
-----------------------------
Number of program locations:     32351
Number of CFA edges:             52494
Number of relevant variables:    7400
Number of functions:             1276
Number of loops:                 246
Size of reached set:             118
  Number of reached locations:   91 (0%)
    Avg states per location:     1
    Max states per location:     10 (at node N32891)
  Number of reached functions:   7 (1%)
  Number of partitions:          118
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:         15.992s
  Time for loading CPAs:          0.952s
  Time for loading parser:        0.502s
  Time for CFA construction:     14.465s
    Time for parsing file(s):     3.399s
    Time for AST to CFA:          6.136s
    Time for CFA sanity check:    0.406s
    Time for post-processing:     4.230s
      Time for var class.:        0.000s
Time for Analysis:              162.025s
CPU time for analysis:          174.250s
Total time for CPAchecker:      178.023s
Total CPU time for CPAchecker:  204.590s

Time for Garbage Collector:       1.272s (in 6 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               2247MB (  2143 MiB) max;   1046MB (   998 MiB) avg;   2273MB (  2167 MiB) peak
Used non-heap memory:             28MB (    26 MiB) max;     26MB (    25 MiB) avg;     28MB (    27 MiB) peak
Used in PS Old Gen pool:          53MB (    51 MiB) max;     43MB (    41 MiB) avg;     53MB (    51 MiB) peak
Allocated heap memory:          4779MB (  4558 MiB) max;   4141MB (  3949 MiB) avg
Allocated non-heap memory:        29MB (    28 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:  14373MB ( 13707 MiB) max;  13761MB ( 13123 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
