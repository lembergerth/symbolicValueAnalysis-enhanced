scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--core--pktgen.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-2060999957_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9422: Function pointer *(timer->base->get_time) with type ktime_t  (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 9620: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            508 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            508 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       24 (5%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         122 (24%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      362 (71%)
  Times result was 'false':        82 (16%)
Number of strengthen sat checks:   10
  Times result was 'false':        9 (90%)
Number of coverage checks:         3118
  BDD entailment checks:           276
Number of SMT sat checks:          10
  trivial:                         0
  cached:                          2

Max ABE block size:                       206
Number of predicates discovered:          3
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         362
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   362 (100%)
  Total number of models for allsat:      282
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.78

Number of path formula cache hits:   1245 (9%)

Time for post operator:                  5.741s
  Time for path formula creation:        5.619s
    Actual computation:                  5.370s
Time for strengthen operator:            0.047s
  Time for satisfiability checks:        0.014s
Time for prec operator:                278.584s
  Time for abstraction:                278.543s (Max:    22.005s, Count: 508)
    Boolean abstraction:               253.934s
    Solving time:                      252.556s (Max:    21.594s)
    Model enumeration time:              1.338s
    Time for BDD construction:           0.010s (Max:     0.001s)
Time for merge operator:                 2.580s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):   253.908s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                         120 (count: 1755, min: 0, max: 73, avg: 0.07)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.235s
Automaton transfers with branching:                0
Automaton transfer successors:                        32669 (count: 32669, min: 1, max: 1, avg: 1.00) [1 x 32669]

CPA algorithm statistics
------------------------
Number of iterations:            12121
Max size of waitlist:            200
Average size of waitlist:        97
Number of computed successors:   13923
Max successors for one state:    2
Number of times merged:          1421
Number of times stopped:         1697
Number of times breaked:         1

Total time for CPA algorithm:       288.333s (Max:   287.182s)
  Time for choose from waitlist:      0.055s
  Time for precision adjustment:    278.697s
  Time for transfer relation:         6.434s
  Time for merge operator:            2.682s
  Time for stop operator:             0.114s
  Time for adding to reached set:     0.083s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   7 (count: 1, min: 7, max: 7, avg: 7.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.279s
  Counterexample analysis:                0.249s (Max:     0.249s, Calls: 1)
    Refinement sat check:                 0.223s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.001s
  Building the counterexample trace:                   0.249s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 1018
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 1018.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     288.630s
Time for refinements:                 0.296s
Average time for refinement:          0.296s
Max time for refinement:              0.296s

Code Coverage
-----------------------------
  Function coverage:      0.382
  Visited lines:          10227
  Total lines:            14277
  Line coverage:          0.716
  Visited conditions:     812
  Total conditions:       1468
  Condition coverage:     0.553

CPAchecker general statistics
-----------------------------
Number of program locations:     4457
Number of CFA edges:             6036
Number of relevant variables:    1508
Number of functions:             225
Number of loops:                 46
Size of reached set:             11128
  Number of reached locations:   2218 (50%)
    Avg states per location:     5
    Max states per location:     190 (at node N789)
  Number of reached functions:   86 (38%)
  Number of partitions:          11128
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          7.012s
  Time for loading CPAs:          0.658s
  Time for loading parser:        0.637s
  Time for CFA construction:      5.652s
    Time for parsing file(s):     1.735s
    Time for AST to CFA:          2.356s
    Time for CFA sanity check:    0.174s
    Time for post-processing:     1.163s
      Time for var class.:        0.000s
Time for Analysis:              288.630s
CPU time for analysis:          295.330s
Total time for CPAchecker:      295.647s
Total CPU time for CPAchecker:  308.580s

Time for Garbage Collector:       0.272s (in 2 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                583MB (   556 MiB) max;    396MB (   378 MiB) avg;    583MB (   556 MiB) peak
Used non-heap memory:             24MB (    23 MiB) max;     23MB (    22 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        26MB (    25 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:  13982MB ( 13334 MiB) max;  13817MB ( 13177 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
