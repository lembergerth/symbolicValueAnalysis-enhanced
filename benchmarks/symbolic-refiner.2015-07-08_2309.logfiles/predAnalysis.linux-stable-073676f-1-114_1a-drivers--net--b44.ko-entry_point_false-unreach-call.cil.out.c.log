scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-validator-v0.6/ALL.prp ../svcomp15/ldv-validator-v0.6/linux-stable-073676f-1-114_1a-drivers--net--b44.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_843599495_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 4896-4897: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4988: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5033: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4943: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5815: Function pointer *(dev->ops->write32) with type void (*)(struct ssb_device *, u16 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4181-4183: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 5815: Ignoring function call through function pointer *(dev->ops->write32): (*(dev->ops->write32))(dev, (int)offset, value); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5803: Ignoring function call through function pointer *(dev->ops->read32): tmp = (*(dev->ops->read32))(dev, (int)offset); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from b44_suspend to b44_halt (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4943: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from b44_wait_bit to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_chip_reset to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_clear_stats to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __b44_readphy to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __b44_set_flow_ctrl to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __b44_set_rx_mode to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __b44_set_mac_addr to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_init_hw to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_setup_wol to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_setup_pseudo_magicp to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_setup_wol_pci to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_change_mtu to b44_halt (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5033: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 4896-4897: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)-24189255811072L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5087: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from b44_tx to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_rx to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4988: Ignoring function call through function pointer *(ops->sync_single_for_cpu): (*(ops->sync_single_for_cpu))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from b44_poll to b44_halt (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_disable_ints to br32 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5803: Return type of function b44_change_mtu is int, but result is used as type u32 : tmp = b44_change_mtu(dev, (int)offset); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from ssb_read32 to b44_change_mtu (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5087: Return type of function b44_start_xmit is netdev_tx_t , but result is used as type int: tmp___0 = b44_start_xmit(dev, dma_addr); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from dma_mapping_error to b44_start_xmit (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from b44_start_xmit to ssb_dma_mapping_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5803: Return type of function b44_suspend is int, but result is used as type u32 : tmp = b44_suspend(dev, (int)offset); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Ignoring cast from signed int to struct pm_message. (PredicateCPA:CtoFormulaConverter.makeCast, WARNING)

Skipping recursive function call from ssb_read32 to b44_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            120927 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            120927 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       106196 (88%)
  Times precision was {false}:     3567 (3%)
  Times result was cached:         10026 (8%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1138 (1%)
  Times result was 'false':        2463 (2%)
Number of strengthen sat checks:   28
  Times result was 'false':        25 (89%)
Number of coverage checks:         358896
  BDD entailment checks:           61928
Number of SMT sat checks:          28
  trivial:                         0
  cached:                          0

Max ABE block size:                       758
Number of predicates discovered:          4
Number of abstraction locations:          3
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         4815
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 1.02
Number of irrelevant predicates:          3674 (76%)
Number of preds handled by boolean abs:   1141 (24%)
  Total number of models for allsat:      50
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.04

Number of path formula cache hits:   2295194 (69%)

Time for post operator:                150.805s
  Time for path formula creation:      144.923s
    Actual computation:                121.355s
Time for strengthen operator:            5.194s
  Time for satisfiability checks:        1.456s
Time for prec operator:                557.644s
  Time for abstraction:                552.813s (Max:     2.110s, Count: 120927)
    Boolean abstraction:                 7.379s
    Solving time:                      434.784s (Max:     2.007s)
    Model enumeration time:              0.295s
    Time for BDD construction:           0.010s (Max:     0.001s)
Time for merge operator:                13.270s
Time for coverage check:                 0.634s
  Time for BDD entailment checks:        0.295s
Total time for SMT solver (w/o itp):   436.535s

Number of BDD nodes:                               205
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                          67 (count: 184318, min: 0, max: 49, avg: 0.00)
Time for BDD node cleanup:                             0.175s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 17.582s
  Time for transition matches:                         7.210s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      4194932 (count: 4194932, min: 1, max: 1, avg: 1.00) [1 x 4194932]

CPA algorithm statistics
------------------------
Number of iterations:            2944104
Max size of waitlist:            5416
Average size of waitlist:        2758
Number of computed successors:   3163633
Max successors for one state:    2
Number of times merged:          148484
Number of times stopped:         210412
Number of times breaked:         3

Total time for CPA algorithm:       834.044s (Max:   438.313s)
  Time for choose from waitlist:      2.970s
  Time for precision adjustment:    583.393s
  Time for transfer relation:       202.849s
  Time for merge operator:           15.243s
  Time for stop operator:             5.272s
  Time for adding to reached set:     8.069s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  13 (count: 3, min: 3, max: 5, avg: 4.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.643s
  Counterexample analysis:                0.897s (Max:     0.316s, Calls: 3)
    Refinement sat check:                 0.723s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.897s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.001s
  Precision update:                                    0.003s
  ARG update:                                          0.315s

Length of refined path (in blocks):                       4 (count: 2, min: 2, max: 2, avg: 2.00)
Number of affected states:                                2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 2, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 2378389
Max. size of reached set after ref.:  145
Avg. size of reached set before ref.: 842048.00
Avg. size of reached set after ref.:  97.00

Total time for CEGAR algorithm:     841.523s
Time for refinements:                 7.476s
Average time for refinement:          2.492s
Max time for refinement:              6.493s

Code Coverage
-----------------------------
  Function coverage:      0.623
  Visited lines:          6136
  Total lines:            7551
  Line coverage:          0.813
  Visited conditions:     537
  Total conditions:       1002
  Condition coverage:     0.536

CPAchecker general statistics
-----------------------------
Number of program locations:     3231
Number of CFA edges:             4758
Number of relevant variables:    1058
Number of functions:             212
Number of loops:                 22
Size of reached set:             424906
  Number of reached locations:   1810 (56%)
    Avg states per location:     234
    Max states per location:     20982 (at node N833)
  Number of reached functions:   132 (62%)
  Number of partitions:          424906
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        937

Time for analysis setup:          4.596s
  Time for loading CPAs:          0.593s
  Time for loading parser:        0.503s
  Time for CFA construction:      3.435s
    Time for parsing file(s):     1.084s
    Time for AST to CFA:          1.175s
    Time for CFA sanity check:    0.139s
    Time for post-processing:     0.786s
      Time for var class.:        0.000s
Time for Analysis:              841.524s
CPU time for analysis:          891.860s
Total time for CPAchecker:      846.125s
Total CPU time for CPAchecker:  900.180s

Time for Garbage Collector:      30.253s (in 20 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4224MB (  4029 MiB) max;   2439MB (  2326 MiB) avg;   4680MB (  4463 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     23MB (    22 MiB) avg;     25MB (    24 MiB) peak
Used in PS Old Gen pool:        1301MB (  1240 MiB) max;   1121MB (  1069 MiB) avg;   1301MB (  1240 MiB) peak
Allocated heap memory:          5525MB (  5269 MiB) max;   5084MB (  4848 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  13746MB ( 13109 MiB) max;  13650MB ( 13018 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
