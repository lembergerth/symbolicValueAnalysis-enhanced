scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--md--persistent-data--dm-persistent-data.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_460025883_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11518: Function pointer *(info->value_type.dec) with type void (*)(void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13856: Function pointer *(info->value_type.dec) with type void (*)(void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11158: Function pointer *(vt->inc) with type void (*)(void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12303: Function pointer *(info->value_type.dec) with type void (*)(void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12292: Function pointer *(info->value_type.dec) with type void (*)(void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 7070: Ignoring function call through function pointer *(ll->commit): r = (*(ll->commit))(ll); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from sm_ll_commit to sm_disk_commit (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10078: Ignoring function call through function pointer *(sm->count_is_more_than_one): tmp = (*(sm->count_is_more_than_one))(sm, b, result); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6653: Ignoring function call through function pointer *(ll->load_ie): r = (*(ll->load_ie))(ll, index, &ie_disk); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from sm_ll_lookup_bitmap to sm_disk_count_is_more_than_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_metadata_count_is_more_than_one to sm_ll_lookup_bitmap (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_metadata_get_count to sm_ll_lookup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_lookup_bitmap to sm_disk_get_count (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from bn_shadow to dm_tm_shadow_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_dec to sm_ll_lookup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6887: Ignoring function call through function pointer *(ll->load_ie): r = (*(ll->load_ie))(ll, index, &ie_disk); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from sm_ll_insert to sm_disk_count_is_more_than_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_insert to sm_disk_get_count (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_insert to disk_ll_save_ie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5412: Ignoring function call through function pointer *(v->check): r = (*(v->check))(v, (struct dm_block *)buf, (size_t )tmp); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from dm_bm_validate_buffer to sm_disk_count_is_more_than_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_bm_validate_buffer to sm_disk_get_count (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_bm_validate_buffer to disk_ll_save_ie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_bm_validate_buffer to disk_ll_load_ie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_insert to dm_tm_shadow_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_insert to dm_btree_insert (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from remove_raw to shadow_step (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from bn_read_lock to dm_tm_read_lock (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from init_child to dm_tm_shadow_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from init_child to inc_children (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10114: Ignoring function call through function pointer *(sm->dec_block): tmp = (*(sm->dec_block))(sm, b); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from dm_sm_dec_block to sm_metadata_dec_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6776: Ignoring function call through function pointer *(ll->load_ie): r = (*(ll->load_ie))(ll, i, &ie_disk); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from sm_ll_find_free_block to sm_disk_count_is_more_than_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_find_free_block to sm_disk_get_count (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_find_free_block to disk_ll_save_ie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29303 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            29303 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1 (0%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         23736 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5566 (19%)
  Times result was 'false':        1828 (6%)
Number of strengthen sat checks:   4
  Times result was 'false':        3 (75%)
Number of coverage checks:         76490
  BDD entailment checks:           15494
Number of SMT sat checks:          4
  trivial:                         0
  cached:                          0

Max ABE block size:                       369
Number of predicates discovered:          6
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         33396
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 6.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   33396 (100%)
  Total number of models for allsat:      4363
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.78

Number of path formula cache hits:   358521 (36%)

Time for post operator:                 85.920s
  Time for path formula creation:       84.041s
    Actual computation:                 60.367s
Time for strengthen operator:            1.133s
  Time for satisfiability checks:        0.006s
Time for prec operator:                748.022s
  Time for abstraction:                746.055s (Max:    17.962s, Count: 29303)
    Boolean abstraction:               617.996s
    Solving time:                      613.101s (Max:    17.475s)
    Model enumeration time:              4.212s
    Time for BDD construction:           0.305s (Max:     0.009s)
Time for merge operator:                 7.852s
Time for coverage check:                 0.203s
  Time for BDD entailment checks:        0.128s
Total time for SMT solver (w/o itp):   617.320s

Number of BDD nodes:                               217
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                        4257 (count: 37775, min: 0, max: 440, avg: 0.11)
Time for BDD node cleanup:                             0.044s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.852s
  Time for transition matches:                         2.319s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1407707 (count: 1407707, min: 1, max: 1, avg: 1.00) [1 x 1407707]

CPA algorithm statistics
------------------------
Number of iterations:            924115
Max size of waitlist:            14927
Average size of waitlist:        4265
Number of computed successors:   986849
Max successors for one state:    2
Number of times merged:          30498
Number of times stopped:         45992
Number of times breaked:         1

Total time for CPA algorithm:       872.277s (Max:   872.118s)
  Time for choose from waitlist:      1.046s
  Time for precision adjustment:    750.808s
  Time for transfer relation:       102.219s
  Time for merge operator:            8.559s
  Time for stop operator:             1.709s
  Time for adding to reached set:     2.691s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.082s
  Counterexample analysis:                0.067s (Max:     0.067s, Calls: 1)
    Refinement sat check:                 0.057s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.067s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 20
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 20.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     872.365s
Time for refinements:                 0.088s
Average time for refinement:          0.088s
Max time for refinement:              0.088s

Code Coverage
-----------------------------
  Function coverage:      0.393
  Visited lines:          5399
  Total lines:            8043
  Line coverage:          0.671
  Visited conditions:     646
  Total conditions:       1596
  Condition coverage:     0.405

CPAchecker general statistics
-----------------------------
Number of program locations:     4757
Number of CFA edges:             7357
Number of relevant variables:    1637
Number of functions:             318
Number of loops:                 36
Size of reached set:             939010
  Number of reached locations:   1747 (37%)
    Avg states per location:     537
    Max states per location:     15768 (at node N512)
  Number of reached functions:   125 (39%)
  Number of partitions:          939010
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        14912

Time for analysis setup:          5.760s
  Time for loading CPAs:          0.646s
  Time for loading parser:        0.529s
  Time for CFA construction:      4.520s
    Time for parsing file(s):     1.294s
    Time for AST to CFA:          1.454s
    Time for CFA sanity check:    0.146s
    Time for post-processing:     1.424s
      Time for var class.:        0.000s
Time for Analysis:              872.365s
CPU time for analysis:          889.840s
Total time for CPAchecker:      878.131s
Total CPU time for CPAchecker:  900.450s

Time for Garbage Collector:       5.831s (in 22 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               1719MB (  1639 MiB) max;    761MB (   726 MiB) avg;   1956MB (  1865 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     25MB (    23 MiB) avg;     26MB (    24 MiB) peak
Used in PS Old Gen pool:         836MB (   797 MiB) max;    340MB (   325 MiB) avg;    836MB (   797 MiB) peak
Allocated heap memory:          2545MB (  2427 MiB) max;   2210MB (  2107 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:  13974MB ( 13327 MiB) max;  13721MB ( 13085 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
