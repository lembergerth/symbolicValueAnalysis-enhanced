scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--infiniband--hw--nes--iw_nes.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1691937590_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 15697: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10298: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15592: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15547: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 50605: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 48874-48875: Function pointer *(g_cm_core->api->connect) with type struct nes_cm_node * (*)(struct nes_cm_core *, struct nes_vnic *, u16 , void *, struct nes_cm_info *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

lines 24752-24753: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)-24189255811072L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 32463: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15697: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 24799: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, page, offset, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10298: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 50605: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15547: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15592: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 15500-15501: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)-24189255811072L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Destroying the void * pointer  ldv_main_exported_14::tmp produces garbage! (in the following line(s):
 line 14690:	N2774 -{ldv_main_exported_14();}-> N2776) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

line 49425: Ignoring function call through function pointer *(cm_id->event_handler): ret = (*(cm_id->event_handler))(cm_id, &cm_event); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from handle_recv_entry to rem_ref_cm_node (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 43977: Ignoring function call through function pointer *(cm_id->rem_ref): (*(cm_id->rem_ref))(cm_id); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from nes_cm_event_handler to cm_event_connect_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 49727: Ignoring function call through function pointer *(cm_id->event_handler): ret = (*(cm_id->event_handler))(cm_id, &cm_event); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from cm_event_mpa_reject to mini_cm_close (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 48872: Ignoring function call through function pointer *(cm_id->add_ref): (*(cm_id->add_ref))(cm_id); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from nes_connect to nes_cm_event_handler (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 48004: Ignoring function call through function pointer *(nesqp->ibqp.event_handler): (*(nesqp->ibqp.event_handler))(&ibevent, nesqp->ibqp.qp_context); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23731: Ignoring function call through function pointer *(nescq->ibcq.comp_handler): (*(nescq->ibcq.comp_handler))(&(nescq->ibcq), nescq->ibcq.cq_context); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from nes_iwarp_ce_handler to nes_iwarp_ce_handler (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 48045: Ignoring function call through function pointer *(cm_id->event_handler): ret = (*(cm_id->event_handler))(cm_id, &cm_event); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from nes_cm_disconn_true to mini_cm_close (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nes_cm_disconn_true to nes_connect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from free_retrans_entry to rem_ref_cm_node (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from mini_cm_reject to cm_event_mpa_reject (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from mini_cm_reject to rem_ref_cm_node (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 47169: Ignoring function call through function pointer *(cm_id->rem_ref): (*(cm_id->rem_ref))(cm_id); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from mini_cm_reject to nes_cm_event_handler (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from mini_cm_reject to nes_disconnect_worker (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from schedule_nes_timer to rem_ref_cm_node (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 47133: Ignoring function call through function pointer *(cm_id->add_ref): (*(cm_id->add_ref))(cm_id); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from nes_cm_disconn_true to mini_cm_del_listen (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 48385-48386: Ignoring function call through function pointer *(nesibdev->ibdev.reg_phys_mr): ibmr = (*(nesibdev->ibdev.reg_phys_mr))((struct ib_pd *)nespd, &ibphysbuf, 1, 1, &tagged_offset); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from nes_accept to rem_ref_cm_node (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 48155: Ignoring function call through function pointer *(nesibdev->ibdev.dereg_mr): (*(nesibdev->ibdev.dereg_mr))(nesqp->lsmm_mr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 49062: Ignoring function call through function pointer *(g_cm_core->api->stop_listener): (*(g_cm_core->api->stop_listener))(g_cm_core, __CPAchecker_TMP_1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from nes_destroy_listen to mini_cm_close (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nes_destroy_listen to nes_connect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            824 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            824 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       31 (4%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         72 (9%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      721 (88%)
  Times result was 'false':        334 (41%)
Number of strengthen sat checks:   185
  Times result was 'false':        184 (99%)
Number of coverage checks:         12830
  BDD entailment checks:           280
Number of SMT sat checks:          185
  trivial:                         0
  cached:                          13

Max ABE block size:                       1663
Number of predicates discovered:          3
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         721
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   721 (100%)
  Total number of models for allsat:      393
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.55

Number of path formula cache hits:   5243 (5%)

Time for post operator:                 23.881s
  Time for path formula creation:       23.546s
    Actual computation:                 19.874s
Time for strengthen operator:          104.465s
  Time for satisfiability checks:      104.294s
Time for prec operator:                724.722s
  Time for abstraction:                724.570s (Max:    25.945s, Count: 824)
    Boolean abstraction:               607.321s
    Solving time:                      609.349s (Max:    23.104s)
    Model enumeration time:              0.642s
    Time for BDD construction:           0.022s (Max:     0.001s)
Time for merge operator:                 8.464s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):   714.284s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                         329 (count: 3199, min: 0, max: 135, avg: 0.10)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.778s
  Time for transition matches:                         0.322s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       167598 (count: 167598, min: 1, max: 1, avg: 1.00) [1 x 167598]

CPA algorithm statistics
------------------------
Number of iterations:            102827
Max size of waitlist:            260
Average size of waitlist:        116
Number of computed successors:   110016
Max successors for one state:    2
Number of times merged:          6275
Number of times stopped:         6555
Number of times breaked:         1

Total time for CPA algorithm:       867.212s (Max:   861.160s)
  Time for choose from waitlist:      0.145s
  Time for precision adjustment:    725.125s
  Time for transfer relation:       131.561s
  Time for merge operator:            8.702s
  Time for stop operator:             0.280s
  Time for adding to reached set:     0.602s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.628s
  Counterexample analysis:                0.564s (Max:     0.564s, Calls: 1)
    Refinement sat check:                 0.479s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.564s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 3910
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 3910.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     867.865s
Time for refinements:                 0.653s
Average time for refinement:          0.653s
Max time for refinement:              0.653s

Code Coverage
-----------------------------
  Function coverage:      0.447
  Visited lines:          17728
  Total lines:            32986
  Line coverage:          0.537
  Visited conditions:     2030
  Total conditions:       7464
  Condition coverage:     0.272

CPAchecker general statistics
-----------------------------
Number of program locations:     19016
Number of CFA edges:             29560
Number of relevant variables:    5251
Number of functions:             640
Number of loops:                 164
Size of reached set:             99218
  Number of reached locations:   5717 (30%)
    Avg states per location:     17
    Max states per location:     1988 (at node N103)
  Number of reached functions:   286 (45%)
  Number of partitions:          99218
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        241

Time for analysis setup:         11.437s
  Time for loading CPAs:          0.788s
  Time for loading parser:        0.622s
  Time for CFA construction:      9.928s
    Time for parsing file(s):     2.804s
    Time for AST to CFA:          3.277s
    Time for CFA sanity check:    0.303s
    Time for post-processing:     3.288s
      Time for var class.:        0.000s
Time for Analysis:              867.865s
CPU time for analysis:          881.510s
Total time for CPAchecker:      879.307s
Total CPU time for CPAchecker:  902.860s

Time for Garbage Collector:       2.040s (in 12 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                663MB (   633 MiB) max;    416MB (   397 MiB) avg;    821MB (   783 MiB) peak
Used non-heap memory:             27MB (    26 MiB) max;     26MB (    25 MiB) avg;     27MB (    26 MiB) peak
Used in PS Old Gen pool:         189MB (   180 MiB) max;    117MB (   112 MiB) avg;    189MB (   180 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   1948MB (  1858 MiB) avg
Allocated non-heap memory:        29MB (    27 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:  16447MB ( 15685 MiB) max;  14847MB ( 14159 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
