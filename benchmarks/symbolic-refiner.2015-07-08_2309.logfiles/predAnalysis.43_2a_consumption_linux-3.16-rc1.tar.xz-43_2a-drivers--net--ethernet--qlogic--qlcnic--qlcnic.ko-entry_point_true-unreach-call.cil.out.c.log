scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--ethernet--qlogic--qlcnic--qlcnic.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1482118910_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 37615: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14247: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 41072: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 40979-40980: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28918: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 41114: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28873: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 41026: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 41815: Function pointer *(adapter->ahw->hw_ops->change_l2_filter) with type void (*)(struct qlcnic_adapter *, u64 *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9777: Function pointer *(adapter->ahw->hw_ops->change_macvlan) with type int (*)(struct qlcnic_adapter *, u8 *, u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 9744: Ignoring function call through function pointer *(adapter->ahw->hw_ops->alloc_mbx_args): tmp = (*(adapter->ahw->hw_ops->alloc_mbx_args))(mbx, adapter, arg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 37615: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from qlcnic_82xx_fw_cmd_create_tx_ctx to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9759: Ignoring function call through function pointer *(adapter->ahw->hw_ops->mbx_cmd): tmp = (*(adapter->ahw->hw_ops->mbx_cmd))(adapter, cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from qlcnic_sriov_pf_cfg_intrcoal_cmd to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_82xx_set_nic_info to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_82xx_set_nic_info to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14247: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from qlcnic_sriov_pf_linkevent_cmd to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_83xx_get_port_config to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_83xx_get_port_config to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_83xx_set_port_config to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_83xx_set_port_config to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 33966: Ignoring function call through function pointer *(adapter->ahw->hw_ops->read_reg): tmp___4 = (*(adapter->ahw->hw_ops->read_reg))(adapter, 106954904UL, &err); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 51638: Ignoring function call through function pointer *(adapter->ahw->hw_ops->get_saved_state): tmp = (*(adapter->ahw->hw_ops->get_saved_state))(t_hdr, index); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from qlcnic_83xx_setup_link_event to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_83xx_setup_link_event to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_83xx_nic_set_promisc to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_83xx_nic_set_promisc to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 41830: Ignoring function call through function pointer *(adapter->ahw->hw_ops->enable_tx_intr): (*(adapter->ahw->hw_ops->enable_tx_intr))(adapter, tx_ring); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from qlcnic_83xx_del_tx_ctx to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_83xx_del_tx_ctx to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_82xx_fw_cmd_del_tx_ctx to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_82xx_fw_cmd_del_tx_ctx to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 33790: Ignoring function call through function pointer *(adapter->ahw->hw_ops->read_reg): tmp___3 = (*(adapter->ahw->hw_ops->read_reg))(adapter, 106954904UL, &err); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 33790: Return type of function qlcnic_read_memory is u32 , but result is used as type int: tmp___3 = qlcnic_read_memory(adapter, 106954904UL, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from qlcnic_get_pauseparam to qlcnic_read_memory (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 33728-33729: Ignoring function call through function pointer *(adapter->ahw->hw_ops->read_reg): tmp___1 = (*(adapter->ahw->hw_ops->read_reg))(adapter, ((unsigned long)(port * 65536)) + 107151360UL, &err); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 33728-33729: Return type of function qlcnic_read_memory is u32 , but result is used as type int: tmp___1 = qlcnic_read_memory(adapter, ((unsigned long)(port * 65536)) + 107151360UL, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 33742: Ignoring function call through function pointer *(adapter->ahw->hw_ops->read_reg): tmp___2 = (*(adapter->ahw->hw_ops->read_reg))(adapter, 106955532UL, &err); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 33742: Return type of function qlcnic_read_memory is u32 , but result is used as type int: tmp___2 = qlcnic_read_memory(adapter, 106955532UL, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 35649: Ignoring function call through function pointer *(adapter->ahw->hw_ops->read_reg): tmp___1 = (*(adapter->ahw->hw_ops->read_reg))(adapter, 136323460UL, &err); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 35649: Return type of function qlcnic_read_memory is u32 , but result is used as type int: tmp___1 = qlcnic_read_memory(adapter, 136323460UL, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from qlcnic_get_wol to qlcnic_read_memory (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 35667: Ignoring function call through function pointer *(adapter->ahw->hw_ops->read_reg): tmp___2 = (*(adapter->ahw->hw_ops->read_reg))(adapter, 136323464UL, &err); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 35667: Return type of function qlcnic_read_memory is u32 , but result is used as type int: tmp___2 = qlcnic_read_memory(adapter, 136323464UL, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from qlcnic_sriov_pf_cfg_vlan_filtering to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_sriov_pf_cfg_vlan_filtering to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_sriov_pf_cfg_flood to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_sriov_pf_cfg_flood to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_sriov_pf_cfg_eswitch to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_sriov_pf_cfg_eswitch to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_sriov_pf_config_vport to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_sriov_pf_config_vport to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_sriov_get_pf_info to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_sriov_get_pf_info to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15310: Ignoring function call through function pointer *(adapter->ahw->hw_ops->get_nic_info): tmp = (*(adapter->ahw->hw_ops->get_nic_info))(adapter, info, (int)id); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from qlcnic_get_nic_info to qlcnic_82xx_fw_cmd_create_tx_ctx (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_83xx_create_tx_ctx to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_83xx_create_tx_ctx to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_sriov_pf_set_vport_info to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_sriov_pf_set_vport_info to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_sriov_cfg_bc_intr to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 55898: Ignoring function call through function pointer *(mbx->ops->enqueue_cmd): err = (*(mbx->ops->enqueue_cmd))(adapter, cmd, &timeout); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            142 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            142 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1 (1%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      141 (99%)
  Times result was 'false':        139 (98%)
Number of strengthen sat checks:   8
  Times result was 'false':        7 (88%)
Number of coverage checks:         1292
  BDD entailment checks:           0
Number of SMT sat checks:          8
  trivial:                         0
  cached:                          0

Max ABE block size:                       830
Number of predicates discovered:          3
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         141
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   141 (100%)
  Total number of models for allsat:      1
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.01

Number of path formula cache hits:   993 (12%)

Time for post operator:                 15.615s
  Time for path formula creation:       15.537s
    Actual computation:                 14.778s
Time for strengthen operator:            5.038s
  Time for satisfiability checks:        5.006s
Time for prec operator:                837.965s
  Time for abstraction:                837.951s (Max:   305.824s, Count: 142)
    Boolean abstraction:               735.092s
    Solving time:                      741.471s (Max:   305.364s)
    Model enumeration time:              0.022s
    Time for BDD construction:           0.011s (Max:     0.008s)
Time for merge operator:                 6.091s
Time for coverage check:                 0.003s
Total time for SMT solver (w/o itp):   746.499s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           4 (count: 568, min: 0, max: 4, avg: 0.01)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.211s
Automaton transfers with branching:                0
Automaton transfer successors:                        19044 (count: 19044, min: 1, max: 1, avg: 1.00) [1 x 19044]

CPA algorithm statistics
------------------------
Number of iterations:            6988
Max size of waitlist:            186
Average size of waitlist:        123
Number of computed successors:   8031
Max successors for one state:    2
Number of times merged:          646
Number of times stopped:         646
Number of times breaked:         1

Total time for CPA algorithm:       865.932s (Max:   855.320s)
  Time for choose from waitlist:      0.039s
  Time for precision adjustment:    838.073s
  Time for transfer relation:        21.351s
  Time for merge operator:            6.154s
  Time for stop operator:             0.064s
  Time for adding to reached set:     0.103s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.572s
  Counterexample analysis:                2.544s (Max:     2.544s, Calls: 1)
    Refinement sat check:                 2.275s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   2.544s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 901
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 901.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     868.518s
Time for refinements:                 2.586s
Average time for refinement:          2.586s
Max time for refinement:              2.586s

Code Coverage
-----------------------------
  Function coverage:      0.145
  Visited lines:          16197
  Total lines:            48079
  Line coverage:          0.337
  Visited conditions:     1236
  Total conditions:       18718
  Condition coverage:     0.066

CPAchecker general statistics
-----------------------------
Number of program locations:     41053
Number of CFA edges:             67114
Number of relevant variables:    9929
Number of functions:             1375
Number of loops:                 349
Size of reached set:             6346
  Number of reached locations:   2970 (7%)
    Avg states per location:     2
    Max states per location:     56 (at node N66)
  Number of reached functions:   200 (15%)
  Number of partitions:          6346
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        184

Time for analysis setup:         16.257s
  Time for loading CPAs:          0.926s
  Time for loading parser:        0.557s
  Time for CFA construction:     14.698s
    Time for parsing file(s):     3.861s
    Time for AST to CFA:          4.357s
    Time for CFA sanity check:    0.513s
    Time for post-processing:     5.816s
      Time for var class.:        0.000s
Time for Analysis:              868.518s
CPU time for analysis:          877.490s
Total time for CPAchecker:      884.780s
Total CPU time for CPAchecker:  907.270s

Time for Garbage Collector:       1.011s (in 5 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               2250MB (  2146 MiB) max;    725MB (   692 MiB) avg;   2255MB (  2151 MiB) peak
Used non-heap memory:             26MB (    25 MiB) max;     26MB (    24 MiB) avg;     27MB (    25 MiB) peak
Used in PS Old Gen pool:          52MB (    49 MiB) max;     42MB (    40 MiB) avg;     52MB (    49 MiB) peak
Allocated heap memory:          3611MB (  3444 MiB) max;   3063MB (  2921 MiB) avg
Allocated non-heap memory:        28MB (    27 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:  20111MB ( 19179 MiB) max;  14790MB ( 14105 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
