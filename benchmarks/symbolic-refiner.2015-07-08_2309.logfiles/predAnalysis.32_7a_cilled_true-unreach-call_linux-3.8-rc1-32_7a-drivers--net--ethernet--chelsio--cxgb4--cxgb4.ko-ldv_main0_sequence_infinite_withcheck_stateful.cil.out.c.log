scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--chelsio--cxgb4--cxgb4.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_678445120_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 31333: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31381: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31113: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 31020-31021: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31200: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31155: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31067: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16186: Function pointer *((ulds[uld]).add) with type void * (*)(const struct cxgb4_lld_info *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 24747: Ignoring function call through function pointer *(acts->int_handler): (*(acts->int_handler))(adapter); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16005: Ignoring function call through function pointer *((ulds[0]).control): (*((ulds[0]).control))((adap->uld_handle)[0], cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from t4_intr_intx to t4_slow_intr_handler (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from t4_intr_msi to t4_slow_intr_handler (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 31067: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 35334: Ignoring function call through function pointer *(q->handler): ret = (*(q->handler))(q, (__be64 *)rc, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 35331: Ignoring function call through function pointer *(q->handler): ret = (*(q->handler))(q, q->cur_desc, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 31155: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 31200: Ignoring function call through function pointer *(ops->sync_single_for_cpu): (*(ops->sync_single_for_cpu))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 35310: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)(si.va)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 35314: Ignoring function call through function pointer *(q->handler): ret = (*(q->handler))(q, q->cur_desc, (const struct pkt_gl *)(&si)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 31020-31021: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544UL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 31228: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from t4_eth_xmit to map_skb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 31718: Ignoring function call through function pointer *(skb->destructor): (*(skb->destructor))(skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from skb_orphan to process_db_full (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16280: Ignoring function call through function pointer *((ulds[i]).state_change): (*((ulds[i]).state_change))((adap->uld_handle)[i], 3); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Error: Refinement failed: Interpolation failed (can't build ie-local interpolant) (InterpolationManager.buildCounterexampleTrace0, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            185 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            185 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       2 (1%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         49 (26%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      134 (72%)
  Times result was 'false':        54 (29%)
Number of strengthen sat checks:   34
  Times result was 'false':        28 (82%)
Number of coverage checks:         1179
  BDD entailment checks:           65
Number of SMT sat checks:          34
  trivial:                         0
  cached:                          2

Max ABE block size:                       340
Number of predicates discovered:          17
Number of abstraction locations:          5
Max number of predicates per location:    14
Avg number of predicates per location:    10
Total predicates per abstraction:         1102
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 8.22
Number of irrelevant predicates:          1 (0%)
Number of preds handled by boolean abs:   1101 (100%)
  Total number of models for allsat:      183
  Max number of models for allsat:        35
  Avg number of models for allsat:        1.37

Number of path formula cache hits:   4510 (32%)

Time for post operator:                  4.372s
  Time for path formula creation:        4.265s
    Actual computation:                  3.937s
Time for strengthen operator:            3.835s
  Time for satisfiability checks:        3.806s
Time for prec operator:                 53.482s
  Time for abstraction:                 53.448s (Max:     6.925s, Count: 185)
    Boolean abstraction:                49.181s
    Solving time:                       41.640s (Max:     4.394s)
    Model enumeration time:              7.437s
    Time for BDD construction:           0.042s (Max:     0.011s)
Time for merge operator:                 0.472s
Time for coverage check:                 0.004s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):    52.881s

Number of BDD nodes:                               2341
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 754, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.236s
Automaton transfers with branching:                0
Automaton transfer successors:                        24998 (count: 24998, min: 1, max: 1, avg: 1.00) [1 x 24998]

CPA algorithm statistics
------------------------
Number of iterations:            12951
Max size of waitlist:            148
Average size of waitlist:        90
Number of computed successors:   13981
Max successors for one state:    2
Number of times merged:          557
Number of times stopped:         620
Number of times breaked:         6

Total time for CPA algorithm:        63.472s (Max:    27.573s)
  Time for choose from waitlist:      0.051s
  Time for precision adjustment:     53.609s
  Time for transfer relation:         8.918s
  Time for merge operator:            0.512s
  Time for stop operator:             0.052s
  Time for adding to reached set:     0.110s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  30 (count: 6, min: 3, max: 10, avg: 5.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  36.629s
  Counterexample analysis:               36.489s (Max:    16.061s, Calls: 6)
    Refinement sat check:                30.546s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                  36.522s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.003s
  Precision update:                                    0.003s
  ARG update:                                          0.072s

Length of refined path (in blocks):                      17 (count: 4, min: 3, max: 5, avg: 4.25)
Number of affected states:                                6 (count: 4, min: 1, max: 3, avg: 1.50)
Length (states) of path with itp 'true':                  7 (count: 4, min: 0, max: 3, avg: 1.75)
Length (states) of path with itp non-trivial itp:         6 (count: 4, min: 1, max: 3, avg: 1.50)
Length (states) of path with itp 'false':                 1 (count: 4, min: 0, max: 1, avg: 0.25)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               2 (count: 4, min: 0, max: 2, avg: 0.50)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     5
Number of failed refinements:         1
Max. size of reached set before ref.: 6719
Max. size of reached set after ref.:  1251
Avg. size of reached set before ref.: 2672.67
Avg. size of reached set after ref.:  545.60

Total time for CEGAR algorithm:     100.112s
Time for refinements:                36.636s
Average time for refinement:          6.106s
Max time for refinement:             16.065s

Code Coverage
-----------------------------
  Function coverage:      0.148
  Visited lines:          8753
  Total lines:            20700
  Line coverage:          0.423
  Visited conditions:     298
  Total conditions:       3058
  Condition coverage:     0.097

CPAchecker general statistics
-----------------------------
Number of program locations:     9978
Number of CFA edges:             14517
Number of relevant variables:    3934
Number of functions:             621
Number of loops:                 175
Size of reached set:             2952
  Number of reached locations:   888 (9%)
    Avg states per location:     3
    Max states per location:     62 (at node N8246)
  Number of reached functions:   92 (15%)
  Number of partitions:          2945
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N15831 (exit of function t4_intr_handler in lines 35539-35561), Function t4_intr_handler called from node N4908, stack depth 7 [774fe507], stack [main, t4_nondata_intr, t4_slow_intr_handler, cim_intr_handler, t4_handle_intr_status, cxgb_netpoll, t4_intr_handler], ABS64, Init])
  Number of target states:       1
  Size of final wait list        85

Time for analysis setup:          9.807s
  Time for loading CPAs:          0.712s
  Time for loading parser:        0.541s
  Time for CFA construction:      8.486s
    Time for parsing file(s):     2.508s
    Time for AST to CFA:          2.995s
    Time for CFA sanity check:    0.403s
    Time for post-processing:     2.311s
      Time for var class.:        0.000s
Time for Analysis:              100.112s
CPU time for analysis:          107.060s
Total time for CPAchecker:      109.925s
Total CPU time for CPAchecker:  125.450s

Time for Garbage Collector:       0.127s (in 1 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                548MB (   523 MiB) max;    347MB (   331 MiB) avg;    598MB (   570 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     23MB (    22 MiB) avg;     25MB (    24 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:  14462MB ( 13792 MiB) max;  14079MB ( 13427 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
