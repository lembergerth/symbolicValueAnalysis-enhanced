scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.4-simple/ALL.prp ../svcomp15/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--dvb--dvb-usb--dvb-usb-mxl111sf.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_102734113_tempdir
line 10264: Function pointer *__a with type struct dvb_frontend * (*)(struct mxl111sf_state *mxl_state, struct mxl111sf_demod_config *cfg) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10821: Function pointer *__a with type struct dvb_frontend * (*)(struct dvb_frontend *fe, struct mxl111sf_state *mxl_state, struct mxl111sf_tuner_config *cfg) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9675: Function pointer *__a with type struct dvb_frontend * (*)(const struct lgdt3305_config *config, struct i2c_adapter *i2c_adap) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10264: Ignoring call via function pointer mxl111sf_attach_demod::__a for which no suitable target was found in line: tmp___12 = (*__a)(state, &mxl_demod_config); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10264: Ignoring function call through function pointer *__a: tmp___12 = (*__a)(state, &mxl_demod_config); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10821: Ignoring call via function pointer mxl111sf_attach_tuner::__a for which no suitable target was found in line: tmp___11 = (*__a)(__cil_tmp24, state, &mxl_tuner_config); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10821: Ignoring function call through function pointer *__a: tmp___11 = (*__a)(__cil_tmp24, state, &mxl_tuner_config); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9675: Ignoring call via function pointer mxl111sf_lgdt3305_frontend_attach::__a for which no suitable target was found in line: tmp___12 = (*__a)(__cil_tmp77, __cil_tmp81); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9675: Ignoring function call through function pointer *__a: tmp___12 = (*__a)(__cil_tmp77, __cil_tmp81); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10938: Ignoring call via function pointer mxl111sf_fe_ioctl_override::__cil_tmp10 for which no suitable target was found in line: err = (*__cil_tmp10)(fe, __cil_tmp11); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10938: Ignoring function call through function pointer *__cil_tmp10: err = (*__cil_tmp10)(fe, __cil_tmp11); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10568: Ignoring call via function pointer mxl111sf_ant_hunt::__cil_tmp25 for which no suitable target was found in line: (*__cil_tmp25)(fe, &rxPwrA); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10568: Ignoring function call through function pointer *__cil_tmp25: (*__cil_tmp25)(fe, &rxPwrA); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10584: Ignoring call via function pointer mxl111sf_ant_hunt::__cil_tmp30 for which no suitable target was found in line: (*__cil_tmp30)(fe, &rxPwr0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10584: Ignoring function call through function pointer *__cil_tmp30: (*__cil_tmp30)(fe, &rxPwr0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10600: Ignoring call via function pointer mxl111sf_ant_hunt::__cil_tmp35 for which no suitable target was found in line: (*__cil_tmp35)(fe, &rxPwr1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10600: Ignoring function call through function pointer *__cil_tmp35: (*__cil_tmp35)(fe, &rxPwr1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10616: Ignoring call via function pointer mxl111sf_ant_hunt::__cil_tmp40 for which no suitable target was found in line: (*__cil_tmp40)(fe, &rxPwr2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10616: Ignoring function call through function pointer *__cil_tmp40: (*__cil_tmp40)(fe, &rxPwr2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            64 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            64 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1 (2%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         20 (31%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      43 (67%)
  Times result was 'false':        6 (9%)
Number of strengthen sat checks:   2
  Times result was 'false':        1 (50%)
Number of coverage checks:         37553
  BDD entailment checks:           29
Number of SMT sat checks:          2
  trivial:                         0
  cached:                          0

Max ABE block size:                       3295
Number of predicates discovered:          2
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         86
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   86 (100%)
  Total number of models for allsat:      36
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.84

Number of path formula cache hits:   56304 (41%)

Time for post operator:                 53.517s
  Time for path formula creation:       53.121s
    Actual computation:                 52.071s
Time for strengthen operator:           75.438s
  Time for satisfiability checks:       75.239s
Time for prec operator:                712.622s
  Time for abstraction:                712.501s (Max:   285.462s, Count: 64)
    Boolean abstraction:               667.894s
    Solving time:                      671.038s (Max:   285.532s)
    Model enumeration time:              1.022s
    Time for BDD construction:           0.012s (Max:     0.009s)
Time for merge operator:                18.208s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):   747.300s

Number of BDD nodes:                               203
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                          38 (count: 206, min: 0, max: 15, avg: 0.18)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.679s
  Time for transition matches:                         0.716s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       367000 (count: 367000, min: 1, max: 1, avg: 1.00) [1 x 367000]

CPA algorithm statistics
------------------------
Number of iterations:            111623
Max size of waitlist:            50
Average size of waitlist:        38
Number of computed successors:   130469
Max successors for one state:    2
Number of times merged:          18762
Number of times stopped:         18791
Number of times breaked:         1

Total time for CPA algorithm:       865.797s (Max:   785.382s)
  Time for choose from waitlist:      0.208s
  Time for precision adjustment:    713.117s
  Time for transfer relation:       132.178s
  Time for merge operator:           18.647s
  Time for stop operator:             0.301s
  Time for adding to reached set:     0.448s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.429s
  Counterexample analysis:                6.392s (Max:     6.392s, Calls: 1)
    Refinement sat check:                 5.526s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   6.392s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 2021
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 2021.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     872.243s
Time for refinements:                 6.445s
Average time for refinement:          6.445s
Max time for refinement:              6.445s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          13907
  Total lines:            18819
  Line coverage:          0.739
  Visited conditions:     682
  Total conditions:       1276
  Condition coverage:     0.534

CPAchecker general statistics
-----------------------------
Number of program locations:     3339
Number of CFA edges:             4399
Number of relevant variables:    3645
Number of functions:             74
Number of loops:                 25
Size of reached set:             109652
  Number of reached locations:   1749 (52%)
    Avg states per location:     62
    Max states per location:     1092 (at node N0)
  Number of reached functions:   36 (49%)
  Number of partitions:          109652
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        23

Time for analysis setup:          9.379s
  Time for loading CPAs:          1.062s
  Time for loading parser:        0.535s
  Time for CFA construction:      7.686s
    Time for parsing file(s):     1.727s
    Time for AST to CFA:          1.741s
    Time for CFA sanity check:    0.714s
    Time for post-processing:     3.280s
      Time for var class.:        0.000s
Time for Analysis:              872.243s
CPU time for analysis:          885.950s
Total time for CPAchecker:      881.628s
Total CPU time for CPAchecker:  904.140s

Time for Garbage Collector:       1.624s (in 11 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3465MB (  3305 MiB) max;    743MB (   708 MiB) avg;   3536MB (  3373 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     24MB (    23 MiB) avg;     25MB (    24 MiB) peak
Used in PS Old Gen pool:         140MB (   133 MiB) max;     78MB (    75 MiB) avg;    140MB (   133 MiB) peak
Allocated heap memory:          4811MB (  4588 MiB) max;   3729MB (  3556 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     27MB (    25 MiB) avg
Total process virtual memory:  20725MB ( 19765 MiB) max;  17170MB ( 16374 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
