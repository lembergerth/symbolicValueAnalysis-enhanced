scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.0/ALL.prp ../svcomp15/ldv-linux-3.0/module_get_put-drivers-isdn-gigaset-gigaset.ko_false-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_86461621_tempdir
line 18607: Dereferencing of non-pointer type _cstruct  in expression *param (ASTConverter.convert, WARNING)

line 19574: Dereferencing of non-pointer type _cstruct  in expression *(iif->hcmsg.BC) (ASTConverter.convert, WARNING)

line 19595: Dereferencing of non-pointer type _cstruct  in expression *(iif->hcmsg.HLC) (ASTConverter.convert, WARNING)

line 19681: Dereferencing of non-pointer type _cstruct  in expression *(iif->hcmsg.CalledPartyNumber) (ASTConverter.convert, WARNING)

line 19721: Dereferencing of non-pointer type _cstruct  in expression *(iif->hcmsg.CallingPartyNumber) (ASTConverter.convert, WARNING)

line 21471: Dereferencing of non-pointer type _cstruct  in expression *(cmsg->BC) (ASTConverter.convert, WARNING)

line 21473: Dereferencing of non-pointer type _cstruct  in expression *(cmsg->BC) (ASTConverter.convert, WARNING)

line 21495: Dereferencing of non-pointer type _cstruct  in expression *(cmsg->HLC) (ASTConverter.convert, WARNING)

line 21497: Dereferencing of non-pointer type _cstruct  in expression *(cmsg->HLC) (ASTConverter.convert, WARNING)

line 21547: Dereferencing of non-pointer type _cstruct  in expression *(cmsg->BC) (ASTConverter.convert, WARNING)

line 21573: Dereferencing of non-pointer type _cstruct  in expression *(cmsg->HLC) (ASTConverter.convert, WARNING)

line 22255: Dereferencing of non-pointer type _cstruct  in expression *(cmsg->NCPI) (ASTConverter.convert, WARNING)

line 22656: Dereferencing of non-pointer type _cstruct  in expression *(cmsg->NCPI) (ASTConverter.convert, WARNING)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8478: Function pointer *(cs->ops->baud_rate) with type int (*)(struct cardstate *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8480: Function pointer *(cs->ops->set_line_ctrl) with type int (*)(struct cardstate *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9601: Function pointer *(cs->ops->baud_rate) with type int (*)(struct cardstate *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9603: Function pointer *(cs->ops->set_line_ctrl) with type int (*)(struct cardstate *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11395: Function pointer *(cs->ops->baud_rate) with type int (*)(struct cardstate *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11426: Function pointer *(cs->ops->set_line_ctrl) with type int (*)(struct cardstate *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 10723: Ignoring function call through function pointer *(cs->ops->set_modem_ctrl): retval = (*(cs->ops->set_modem_ctrl))(cs, cs->control_state, mc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from if_tiocmset to if_tiocmset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11386: Ignoring function call through function pointer *(cs->ops->set_modem_ctrl): (*(cs->ops->set_modem_ctrl))(cs, control_state, new_state); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11395: Ignoring function call through function pointer *(cs->ops->baud_rate): (*(cs->ops->baud_rate))(cs, cflag & 4111U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11417: Ignoring function call through function pointer *(cs->ops->set_modem_ctrl): (*(cs->ops->set_modem_ctrl))(cs, control_state, new_state); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11426: Ignoring function call through function pointer *(cs->ops->set_line_ctrl): (*(cs->ops->set_line_ctrl))(cs, cflag); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11057: Ignoring function call through function pointer *(cs->ops->chars_in_buffer): retval = (*(cs->ops->chars_in_buffer))(cs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10975: Ignoring function call through function pointer *(cs->ops->write_room): retval = (*(cs->ops->write_room))(cs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from if_write_room to if_write_room (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from if_write_room to if_chars_in_buffer (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from if_chars_in_buffer to if_chars_in_buffer (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from if_chars_in_buffer to if_write_room (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9380: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10516: Ignoring function call through function pointer *(cs->ops->brkchars): retval = (*(cs->ops->brkchars))(cs, (const unsigned char *)(&buf)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5981: Ignoring function call through function pointer *(cs->ops->set_modem_ctrl): r = (*(cs->ops->set_modem_ctrl))(cs, cs->control_state, flags); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6156: Ignoring function call through function pointer *(cs->ops->set_modem_ctrl): (*(cs->ops->set_modem_ctrl))(cs, 0U, 6U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9599: Ignoring function call through function pointer *(cs->ops->set_modem_ctrl): (*(cs->ops->set_modem_ctrl))(cs, 0U, 6U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9601: Ignoring function call through function pointer *(cs->ops->baud_rate): (*(cs->ops->baud_rate))(cs, 4098U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9603: Ignoring function call through function pointer *(cs->ops->set_line_ctrl): (*(cs->ops->set_line_ctrl))(cs, 48U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            595 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            595 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       5 (1%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         301 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      289 (49%)
  Times result was 'false':        2 (0%)
Number of strengthen sat checks:   257
  Times result was 'false':        245 (95%)
Number of coverage checks:         21315
  BDD entailment checks:           563
Number of SMT sat checks:          257
  trivial:                         0
  cached:                          128

Max ABE block size:                       101
Number of predicates discovered:          11
Number of abstraction locations:          8
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         1250
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 4.33
Number of irrelevant predicates:          81 (6%)
Number of preds handled by boolean abs:   1169 (94%)
  Total number of models for allsat:      773
  Max number of models for allsat:        12
  Avg number of models for allsat:        2.67

Number of path formula cache hits:   56059 (64%)

Time for post operator:                 13.981s
  Time for path formula creation:       13.721s
    Actual computation:                 12.841s
Time for strengthen operator:           12.509s
  Time for satisfiability checks:       12.393s
Time for prec operator:                821.698s
  Time for abstraction:                821.599s (Max:   404.768s, Count: 595)
    Boolean abstraction:               791.439s
    Solving time:                      745.787s (Max:   404.794s)
    Model enumeration time:             46.619s
    Time for BDD construction:           0.062s (Max:     0.002s)
Time for merge operator:                13.263s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.052s
Total time for SMT solver (w/o itp):   804.792s

Number of BDD nodes:                               666
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                         758 (count: 1927, min: 0, max: 235, avg: 0.39)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.505s
  Time for transition matches:                         0.214s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       113792 (count: 113792, min: 1, max: 1, avg: 1.00) [1 x 113792]

CPA algorithm statistics
------------------------
Number of iterations:            69394
Max size of waitlist:            105
Average size of waitlist:        48
Number of computed successors:   80508
Max successors for one state:    2
Number of times merged:          10376
Number of times stopped:         10616
Number of times breaked:         12

Total time for CPA algorithm:       864.789s (Max:   461.728s)
  Time for choose from waitlist:      0.116s
  Time for precision adjustment:    821.948s
  Time for transfer relation:        28.053s
  Time for merge operator:           13.531s
  Time for stop operator:             0.229s
  Time for adding to reached set:     0.270s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  49 (count: 12, min: 2, max: 6, avg: 4.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.370s
  Counterexample analysis:               10.155s (Max:     1.622s, Calls: 12)
    Refinement sat check:                 8.402s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.001s
  Building the counterexample trace:                  10.155s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.007s
  ARG update:                                          0.166s

Length of refined path (in blocks):                      42 (count: 11, min: 2, max: 6, avg: 3.82)
Number of affected states:                               27 (count: 11, min: 1, max: 5, avg: 2.45)
Length (states) of path with itp 'true':                  4 (count: 11, min: 0, max: 1, avg: 0.36)
Length (states) of path with itp non-trivial itp:        27 (count: 11, min: 1, max: 5, avg: 2.45)
Length (states) of path with itp 'false':                 4 (count: 11, min: 0, max: 1, avg: 0.36)
Different non-trivial interpolants along paths:           6 (count: 11, min: 0, max: 3, avg: 0.55)
Equal non-trivial interpolants along paths:              10 (count: 11, min: 0, max: 3, avg: 0.91)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 11682
Max. size of reached set after ref.:  9037
Avg. size of reached set before ref.: 7630.92
Avg. size of reached set after ref.:  3014.75

Total time for CEGAR algorithm:     875.234s
Time for refinements:                10.425s
Average time for refinement:          0.868s
Max time for refinement:              1.631s

Code Coverage
-----------------------------
  Function coverage:      0.208
  Visited lines:          6405
  Total lines:            13430
  Line coverage:          0.477
  Visited conditions:     408
  Total conditions:       2122
  Condition coverage:     0.192

CPAchecker general statistics
-----------------------------
Number of program locations:     6096
Number of CFA edges:             8340
Number of relevant variables:    1689
Number of functions:             212
Number of loops:                 93
Size of reached set:             14496
  Number of reached locations:   1088 (18%)
    Avg states per location:     13
    Max states per location:     118 (at node N58)
  Number of reached functions:   44 (21%)
  Number of partitions:          14466
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N3259 (before line 11915), Function main called from node N3125, stack depth 1 [18a8422d], stack [main], Init])
  Number of target states:       0
  Size of final wait list        79

Time for analysis setup:          7.855s
  Time for loading CPAs:          0.649s
  Time for loading parser:        0.614s
  Time for CFA construction:      6.518s
    Time for parsing file(s):     1.750s
    Time for AST to CFA:          2.544s
    Time for CFA sanity check:    0.297s
    Time for post-processing:     1.688s
      Time for var class.:        0.000s
Time for Analysis:              875.234s
CPU time for analysis:          886.250s
Total time for CPAchecker:      883.094s
Total CPU time for CPAchecker:  901.040s

Time for Garbage Collector:       1.197s (in 10 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                586MB (   558 MiB) max;    226MB (   215 MiB) avg;    661MB (   630 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     25MB (    23 MiB) avg;     25MB (    24 MiB) peak
Used in PS Old Gen pool:          71MB (    68 MiB) max;     41MB (    39 MiB) avg;     71MB (    68 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   1967MB (  1876 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:  14512MB ( 13840 MiB) max;  14200MB ( 13542 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
