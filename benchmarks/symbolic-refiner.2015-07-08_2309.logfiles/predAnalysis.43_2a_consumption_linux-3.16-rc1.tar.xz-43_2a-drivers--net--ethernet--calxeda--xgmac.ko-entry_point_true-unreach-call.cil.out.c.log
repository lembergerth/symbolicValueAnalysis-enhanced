scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--ethernet--calxeda--xgmac.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1068088053_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7305: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7352: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7130: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7037-7038: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7172: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7084: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

lines 7037-7038: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)-24189255811072L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7200: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7200: Return type of function xgmac_xmit is netdev_tx_t , but result is used as type int: tmp___0 = xgmac_xmit(dev, dma_addr); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from dma_mapping_error to xgmac_xmit (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7130: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, page, offset, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7084: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7172: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7305: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7352: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            219 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            219 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       17 (8%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         96 (44%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      106 (48%)
  Times result was 'false':        36 (16%)
Number of strengthen sat checks:   35
  Times result was 'false':        34 (97%)
Number of coverage checks:         4890
  BDD entailment checks:           110
Number of SMT sat checks:          35
  trivial:                         0
  cached:                          28

Max ABE block size:                       255
Number of predicates discovered:          3
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         106
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   106 (100%)
  Total number of models for allsat:      84
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.79

Number of path formula cache hits:   6269 (22%)

Time for post operator:                  4.542s
  Time for path formula creation:        4.408s
    Actual computation:                  4.034s
Time for strengthen operator:            0.173s
  Time for satisfiability checks:        0.121s
Time for prec operator:                 49.270s
  Time for abstraction:                 49.232s (Max:    31.227s, Count: 219)
    Boolean abstraction:                46.780s
    Solving time:                       46.566s (Max:    30.714s)
    Model enumeration time:              0.198s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 1.032s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):    46.885s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                          33 (count: 557, min: 0, max: 33, avg: 0.06)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.264s
Automaton transfers with branching:                0
Automaton transfer successors:                        43615 (count: 43615, min: 1, max: 1, avg: 1.00) [1 x 43615]

CPA algorithm statistics
------------------------
Number of iterations:            26050
Max size of waitlist:            50
Average size of waitlist:        29
Number of computed successors:   28602
Max successors for one state:    2
Number of times merged:          2390
Number of times stopped:         2500
Number of times breaked:         1

Total time for CPA algorithm:        57.053s (Max:    53.643s)
  Time for choose from waitlist:      0.068s
  Time for precision adjustment:     49.502s
  Time for transfer relation:         5.657s
  Time for merge operator:            1.186s
  Time for stop operator:             0.139s
  Time for adding to reached set:     0.139s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   3 (count: 1, min: 3, max: 3, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.159s
  Counterexample analysis:                0.098s (Max:     0.098s, Calls: 1)
    Refinement sat check:                 0.085s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.098s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 4519
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 4519.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      57.232s
Time for refinements:                 0.179s
Average time for refinement:          0.179s
Max time for refinement:              0.179s

Code Coverage
-----------------------------
  Function coverage:      0.782
  Visited lines:          8310
  Total lines:            9003
  Line coverage:          0.923
  Visited conditions:     664
  Total conditions:       808
  Condition coverage:     0.822

CPAchecker general statistics
-----------------------------
Number of program locations:     2759
Number of CFA edges:             3917
Number of relevant variables:    953
Number of functions:             202
Number of loops:                 22
Size of reached set:             21549
  Number of reached locations:   2207 (80%)
    Avg states per location:     9
    Max states per location:     503 (at node N135)
  Number of reached functions:   158 (78%)
  Number of partitions:          21549
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.390s
  Time for loading CPAs:          0.570s
  Time for loading parser:        0.558s
  Time for CFA construction:      3.199s
    Time for parsing file(s):     1.056s
    Time for AST to CFA:          1.202s
    Time for CFA sanity check:    0.107s
    Time for post-processing:     0.663s
      Time for var class.:        0.000s
Time for Analysis:               57.232s
CPU time for analysis:           63.680s
Total time for CPAchecker:       61.627s
Total CPU time for CPAchecker:   71.720s

Time for Garbage Collector:       0.145s (in 1 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                529MB (   504 MiB) max;    352MB (   336 MiB) avg;    582MB (   555 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     22MB (    21 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        26MB (    25 MiB) max;     25MB (    24 MiB) avg
Total process virtual memory:  14039MB ( 13389 MiB) max;  13822MB ( 13181 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
