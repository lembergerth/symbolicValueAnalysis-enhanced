scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--arcnet--arcnet.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-657097816_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6515: Function pointer *(lp->hw.intmask) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6517: Function pointer *(lp->hw.command) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6519: Function pointer *(lp->hw.command) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7027: Function pointer *(lp->hw.intmask) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7022: Function pointer *(lp->hw.command) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7351: Function pointer *(lp->hw.intmask) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7355: Function pointer *(lp->hw.intmask) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7225: Function pointer *(lp->hw.command) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7175: Function pointer *(lp->outgoing.proto->continue_tx) with type int (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7143: Function pointer *(lp->outgoing.proto->ack_tx) with type int (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7086: Function pointer *(lp->hw.command) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7090: Function pointer *(lp->hw.command) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7074: Function pointer *(lp->hw.command) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6355: Function pointer *(lp->hw.reset) with type int (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6481: Function pointer *(lp->hw.intmask) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6487: Function pointer *(lp->hw.intmask) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6476: Function pointer *(lp->hw.command) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6359: Function pointer *(lp->hw.reset) with type int (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7382: Function pointer *(lp->hw.copy_from_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7403: Function pointer *(lp->hw.copy_from_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7398: Function pointer *(lp->hw.copy_from_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6763: Function pointer *(lp->hw.intmask) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6825: Function pointer *(lp->hw.intmask) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6829: Function pointer *(lp->hw.intmask) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6796: Function pointer *(proto->continue_tx) with type int (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6922: Function pointer *(lp->hw.intmask) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6926: Function pointer *(lp->hw.intmask) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6917: Function pointer *(lp->hw.command) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6866: Function pointer *(lp->hw.command) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7519: Function pointer *(lp->hw.copy_to_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 7018: Ignoring function call through function pointer *(lp->hw.status): tmp___1 = (*(lp->hw.status))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6706: Ignoring function call through function pointer *(proto->build_header): (*(proto->build_header))(skb, dev, (int)type, (int)daddr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7519: Ignoring function call through function pointer *(lp->hw.copy_to_card): (*(lp->hw.copy_to_card))(dev, bufnum, 0, (void *)(&newpkt), 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6515: Ignoring function call through function pointer *(lp->hw.intmask): (*(lp->hw.intmask))(dev, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6517: Ignoring function call through function pointer *(lp->hw.command): (*(lp->hw.command))(dev, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6519: Ignoring function call through function pointer *(lp->hw.command): (*(lp->hw.command))(dev, 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6547: Ignoring function call through function pointer *(lp->hw.close): (*(lp->hw.close))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6898: Ignoring function call through function pointer *(lp->hw.status): tmp___0 = (*(lp->hw.status))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from arcnet_timeout to arcnet_close (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6355: Ignoring function call through function pointer *(lp->hw.reset): tmp___2 = (*(lp->hw.reset))(dev, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6359: Ignoring function call through function pointer *(lp->hw.reset): tmp___3 = (*(lp->hw.reset))(dev, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6443: Ignoring function call through function pointer *(lp->hw.open): (*(lp->hw.open))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from arcnet_open to arcnet_timeout (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6472: Ignoring function call through function pointer *(lp->hw.status): tmp___6 = (*(lp->hw.status))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from arcnet_open to arcnet_close (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from arcnet_open to arcnet_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6476: Ignoring function call through function pointer *(lp->hw.command): (*(lp->hw.command))(dev, 14); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6481: Ignoring function call through function pointer *(lp->hw.intmask): (*(lp->hw.intmask))(dev, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6487: Ignoring function call through function pointer *(lp->hw.intmask): (*(lp->hw.intmask))(dev, __CPAchecker_TMP_2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6917: Ignoring function call through function pointer *(lp->hw.command): (*(lp->hw.command))(dev, ((lp->cur_tx) << 3) | 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6922: Ignoring function call through function pointer *(lp->hw.intmask): (*(lp->hw.intmask))(dev, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6926: Ignoring function call through function pointer *(lp->hw.intmask): (*(lp->hw.intmask))(dev, __CPAchecker_TMP_1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from arcnet_close to arcnet_timeout (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from arcnet_timeout to arcnet_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7022: Ignoring function call through function pointer *(lp->hw.command): (*(lp->hw.command))(dev, 14); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7027: Ignoring function call through function pointer *(lp->hw.intmask): (*(lp->hw.intmask))(dev, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7039: Ignoring function call through function pointer *(lp->hw.status): status = (*(lp->hw.status))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7074: Ignoring function call through function pointer *(lp->hw.command): (*(lp->hw.command))(dev, ((lp->cur_rx) << 3) | 132); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7086: Ignoring function call through function pointer *(lp->hw.command): (*(lp->hw.command))(dev, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7090: Ignoring function call through function pointer *(lp->hw.command): (*(lp->hw.command))(dev, 14); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7143: Ignoring function call through function pointer *(lp->outgoing.proto->ack_tx): (*(lp->outgoing.proto->ack_tx))(dev, ackstatus); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6866: Ignoring function call through function pointer *(lp->hw.command): (*(lp->hw.command))(dev, ((lp->cur_tx) << 3) | 3); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7175: Ignoring function call through function pointer *(lp->outgoing.proto->continue_tx): tmp___6 = (*(lp->outgoing.proto->continue_tx))(dev, txbuf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7382: Ignoring function call through function pointer *(lp->hw.copy_from_card): (*(lp->hw.copy_from_card))(dev, bufnum, 0, (void *)(&pkt), 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7403: Ignoring function call through function pointer *(lp->hw.copy_from_card): (*(lp->hw.copy_from_card))(dev, bufnum, ofs, (void *)soft, length); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7398: Ignoring function call through function pointer *(lp->hw.copy_from_card): (*(lp->hw.copy_from_card))(dev, bufnum, ofs, (void *)soft, 16); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7442: Ignoring function call through function pointer *((arc_proto_map[__CPAchecker_TMP_5])->rx): (*((arc_proto_map[__CPAchecker_TMP_5])->rx))(dev, bufnum, &pkt, length); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7225: Ignoring function call through function pointer *(lp->hw.command): (*(lp->hw.command))(dev, 22); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7351: Ignoring function call through function pointer *(lp->hw.intmask): (*(lp->hw.intmask))(dev, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7355: Ignoring function call through function pointer *(lp->hw.intmask): (*(lp->hw.intmask))(dev, __CPAchecker_TMP_9); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6763: Ignoring function call through function pointer *(lp->hw.intmask): (*(lp->hw.intmask))(dev, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6775: Ignoring function call through function pointer *(proto->prepare_tx): tmp___3 = (*(proto->prepare_tx))(dev, pkt, __CPAchecker_TMP_3, txbuf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6796: Ignoring function call through function pointer *(proto->continue_tx): tmp___2 = (*(proto->continue_tx))(dev, txbuf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6825: Ignoring function call through function pointer *(lp->hw.intmask): (*(lp->hw.intmask))(dev, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6829: Ignoring function call through function pointer *(lp->hw.intmask): (*(lp->hw.intmask))(dev, __CPAchecker_TMP_9); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2294 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2294 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1934 (84%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         92 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      268 (12%)
  Times result was 'false':        58 (3%)
Number of strengthen sat checks:   70
  Times result was 'false':        69 (99%)
Number of coverage checks:         33598
  BDD entailment checks:           1466
Number of SMT sat checks:          70
  trivial:                         0
  cached:                          0

Max ABE block size:                       347
Number of predicates discovered:          6
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         1608
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 6.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   1608 (100%)
  Total number of models for allsat:      210
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.78

Number of path formula cache hits:   31483 (19%)

Time for post operator:                 19.312s
  Time for path formula creation:       18.890s
    Actual computation:                 17.166s
Time for strengthen operator:            4.156s
  Time for satisfiability checks:        3.936s
Time for prec operator:                221.132s
  Time for abstraction:                220.905s (Max:    24.517s, Count: 2294)
    Boolean abstraction:               206.500s
    Solving time:                      205.766s (Max:    24.284s)
    Model enumeration time:              0.632s
    Time for BDD construction:           0.026s (Max:     0.001s)
Time for merge operator:                 6.088s
Time for coverage check:                 0.068s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):   210.334s

Number of BDD nodes:                               217
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 4491, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.876s
  Time for transition matches:                         0.360s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       224283 (count: 224283, min: 1, max: 1, avg: 1.00) [1 x 224283]

CPA algorithm statistics
------------------------
Number of iterations:            145291
Max size of waitlist:            538
Average size of waitlist:        253
Number of computed successors:   162893
Max successors for one state:    2
Number of times merged:          16066
Number of times stopped:         17532
Number of times breaked:         1

Total time for CPA algorithm:       256.222s (Max:   221.340s)
  Time for choose from waitlist:      0.184s
  Time for precision adjustment:    221.592s
  Time for transfer relation:        25.988s
  Time for merge operator:            6.597s
  Time for stop operator:             0.369s
  Time for adding to reached set:     0.493s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   3 (count: 1, min: 3, max: 3, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.593s
  Counterexample analysis:                0.205s (Max:     0.205s, Calls: 1)
    Refinement sat check:                 0.176s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.205s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 120380
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 120380.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     256.903s
Time for refinements:                 0.681s
Average time for refinement:          0.681s
Max time for refinement:              0.681s

Code Coverage
-----------------------------
  Function coverage:      0.589
  Visited lines:          5840
  Total lines:            6035
  Line coverage:          0.968
  Visited conditions:     332
  Total conditions:       420
  Condition coverage:     0.790

CPAchecker general statistics
-----------------------------
Number of program locations:     1128
Number of CFA edges:             1508
Number of relevant variables:    267
Number of functions:             73
Number of loops:                 7
Size of reached set:             24925
  Number of reached locations:   848 (75%)
    Avg states per location:     29
    Max states per location:     427 (at node N60)
  Number of reached functions:   43 (59%)
  Number of partitions:          24925
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.459s
  Time for loading CPAs:          0.555s
  Time for loading parser:        0.664s
  Time for CFA construction:      2.162s
    Time for parsing file(s):     0.756s
    Time for AST to CFA:          0.716s
    Time for CFA sanity check:    0.086s
    Time for post-processing:     0.355s
      Time for var class.:        0.000s
Time for Analysis:              256.903s
CPU time for analysis:          270.200s
Total time for CPAchecker:      260.369s
Total CPU time for CPAchecker:  276.250s

Time for Garbage Collector:       0.742s (in 4 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               1346MB (  1284 MiB) max;   1155MB (  1101 MiB) avg;   1367MB (  1304 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     24MB (    23 MiB) avg;     25MB (    24 MiB) peak
Used in PS Old Gen pool:          31MB (    29 MiB) max;     27MB (    26 MiB) avg;     31MB (    29 MiB) peak
Allocated heap memory:          3611MB (  3444 MiB) max;   3466MB (  3306 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:  13884MB ( 13241 MiB) max;  13788MB ( 13149 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
