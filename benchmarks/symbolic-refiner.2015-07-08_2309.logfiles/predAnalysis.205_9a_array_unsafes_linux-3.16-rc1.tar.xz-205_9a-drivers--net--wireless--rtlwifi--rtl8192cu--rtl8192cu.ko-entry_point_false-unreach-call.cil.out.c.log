scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--wireless--rtlwifi--rtl8192cu--rtl8192cu.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1075080716_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 12503: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13855: Function pointer *(rtlpriv->cfg->ops->get_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12757: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13558: Function pointer *(rtlpriv->cfg->ops->get_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13574: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13593: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14782: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14516: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14200: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15454: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15464: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20553: Function pointer *(rtlpriv->cfg->ops->get_bbreg) with type u32  (*)(struct ieee80211_hw *, u32 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9833: Function pointer *(rtlpriv->io.read16_sync) with type u16  (*)(struct rtl_priv *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18718: Function pointer *(rtlpriv->cfg->ops->set_bbreg) with type void (*)(struct ieee80211_hw *, u32 , u32 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9880: Function pointer *(rtlpriv->io.read16_sync) with type u16  (*)(struct rtl_priv *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 9821: Ignoring function call through function pointer *(rtlpriv->io.read8_sync): tmp = (*(rtlpriv->io.read8_sync))(rtlpriv, addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 20275: Ignoring function call through function pointer *(rtlpriv->cfg->ops->led_control): (*(rtlpriv->cfg->ops->led_control))(hw, 7); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 20275: Return type of function rtl92cu_phy_set_rf_power_state is bool , but result is used as type void: rtl92cu_phy_set_rf_power_state(hw, 7); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from _rtl92cu_phy_set_rf_power_state to rtl92cu_phy_set_rf_power_state (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9895: Ignoring function call through function pointer *(rtlpriv->io.write32_async): (*(rtlpriv->io.write32_async))(rtlpriv, addr, val32); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9899: Ignoring function call through function pointer *(rtlpriv->io.read32_sync): (*(rtlpriv->io.read32_sync))(rtlpriv, addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from _rtl92cu_set_media_status to rtl_read_byte (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9857: Ignoring function call through function pointer *(rtlpriv->io.write8_async): (*(rtlpriv->io.write8_async))(rtlpriv, addr, (int)val8); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9861: Ignoring function call through function pointer *(rtlpriv->io.read8_sync): (*(rtlpriv->io.read8_sync))(rtlpriv, addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9861: Return type of function rtl92cu_phy_set_rf_power_state is bool , but result is used as type u8 : rtl92cu_phy_set_rf_power_state(rtlpriv, addr); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl_write_byte to rtl92cu_phy_set_rf_power_state (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9861: Return type of function rtl92c_set_qos is void, but result is used as type u8 : rtl92c_set_qos(rtlpriv, addr); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl_write_byte to rtl92c_set_qos (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from _rtl92cu_resume_tx_beacon to rtl_read_byte (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from _rtl92cu_stop_tx_beacon to rtl_read_byte (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13486: Ignoring function call through function pointer *(rtlpriv->cfg->ops->led_control): (*(rtlpriv->cfg->ops->led_control))(hw, ledaction); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13486: Return type of function rtl92cu_phy_set_rf_power_state is bool , but result is used as type void: rtl92cu_phy_set_rf_power_state(hw, ledaction); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from _rtl92cu_set_media_status to rtl92cu_phy_set_rf_power_state (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from _rtl92cu_set_media_status to rtl92c_set_qos (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13558: Ignoring function call through function pointer *(rtlpriv->cfg->ops->get_hw_reg): (*(rtlpriv->cfg->ops->get_hw_reg))(hw, 43, (u8 *)(&reg_rcr)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13574: Ignoring function call through function pointer *(rtlpriv->cfg->ops->set_hw_reg): (*(rtlpriv->cfg->ops->set_hw_reg))(hw, 43, (u8 *)(&reg_rcr)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13593: Ignoring function call through function pointer *(rtlpriv->cfg->ops->set_hw_reg): (*(rtlpriv->cfg->ops->set_hw_reg))(hw, 43, (u8 *)(&reg_rcr)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 20272: Ignoring function call through function pointer *(rtlpriv->cfg->ops->led_control): (*(rtlpriv->cfg->ops->led_control))(hw, 3); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 20272: Return type of function rtl92cu_phy_set_rf_power_state is bool , but result is used as type void: rtl92cu_phy_set_rf_power_state(hw, 3); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 20144: Ignoring function call through function pointer *(rtlpriv->cfg->ops->led_control): (*(rtlpriv->cfg->ops->led_control))(hw, 3); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 20144: Return type of function rtl92cu_phy_set_rf_power_state is bool , but result is used as type void: rtl92cu_phy_set_rf_power_state(hw, 3); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 20141: Ignoring function call through function pointer *(rtlpriv->cfg->ops->led_control): (*(rtlpriv->cfg->ops->led_control))(hw, 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 20141: Return type of function rtl92cu_phy_set_rf_power_state is bool , but result is used as type void: rtl92cu_phy_set_rf_power_state(hw, 2); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 9876: Ignoring function call through function pointer *(rtlpriv->io.write16_async): (*(rtlpriv->io.write16_async))(rtlpriv, addr, (int)val16); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9880: Ignoring function call through function pointer *(rtlpriv->io.read16_sync): (*(rtlpriv->io.read16_sync))(rtlpriv, addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9821: Return type of function rtl92cu_phy_set_rf_power_state is bool , but result is used as type u8 : tmp = rtl92cu_phy_set_rf_power_state(rtlpriv, addr); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl_read_byte to rtl92cu_phy_set_rf_power_state (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from _rtl92cu_set_media_status to rtl_write_byte (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from _rtl92cu_resume_tx_beacon to rtl_write_byte (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from _rtl92cu_set_bcn_ctrl_reg to rtl_write_byte (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from _rtl92cu_stop_tx_beacon to rtl_write_byte (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from _rtl92cu_phy_set_rf_power_state to rtl92c_set_qos (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6411 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            6411 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       6411 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         427846
  BDD entailment checks:           4004
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       436
Number of predicates discovered:          0

Number of path formula cache hits:   700097 (44%)

Time for post operator:                518.513s
  Time for path formula creation:      515.671s
    Actual computation:                490.366s
Time for strengthen operator:            1.688s
Time for prec operator:                  7.329s
  Time for abstraction:                  5.851s (Max:     0.114s, Count: 6411)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:               226.028s
Time for coverage check:                 0.377s
  Time for BDD entailment checks:        0.062s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 10416, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.295s
  Time for transition matches:                         3.612s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      2164284 (count: 2164284, min: 1, max: 1, avg: 1.00) [1 x 2164284]

CPA algorithm statistics
------------------------
Number of iterations:            1287159
Max size of waitlist:            3644
Average size of waitlist:        1246
Number of computed successors:   1506723
Max successors for one state:    2
Number of times merged:          211921
Number of times stopped:         215925
Number of times breaked:         0

Total time for CPA algorithm:       859.134s (Max:   859.134s)
  Time for choose from waitlist:      1.420s
  Time for precision adjustment:     10.685s
  Time for transfer relation:       604.991s
  Time for merge operator:          228.997s
  Time for stop operator:             2.521s
  Time for adding to reached set:     3.465s

Predicate-Abstraction Refiner statistics
----------------------------------------
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.219
  Visited lines:          12670
  Total lines:            19907
  Line coverage:          0.636
  Visited conditions:     702
  Total conditions:       2550
  Condition coverage:     0.275

CPAchecker general statistics
-----------------------------
Number of program locations:     6664
Number of CFA edges:             10323
Number of relevant variables:    2281
Number of functions:             270
Number of loops:                 68
Size of reached set:             1290799
  Size of final wait list        3640

Time for analysis setup:          8.517s
  Time for loading CPAs:          0.663s
  Time for loading parser:        0.654s
  Time for CFA construction:      7.127s
    Time for parsing file(s):     2.061s
    Time for AST to CFA:          2.177s
    Time for CFA sanity check:    0.354s
    Time for post-processing:     2.265s
      Time for var class.:        0.000s
Time for Analysis:              859.134s
CPU time for analysis:          884.380s
Total time for CPAchecker:      867.656s
Total CPU time for CPAchecker:  900.410s

Time for Garbage Collector:      10.128s (in 52 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4459MB (  4252 MiB) max;   2111MB (  2013 MiB) avg;   4575MB (  4363 MiB) peak
Used non-heap memory:             26MB (    25 MiB) max;     26MB (    25 MiB) avg;     27MB (    25 MiB) peak
Used in PS Old Gen pool:        1143MB (  1090 MiB) max;    546MB (   521 MiB) avg;   1143MB (  1090 MiB) peak
Allocated heap memory:          4818MB (  4595 MiB) max;   4499MB (  4291 MiB) avg
Allocated non-heap memory:        28MB (    27 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:  13613MB ( 12982 MiB) max;  13605MB ( 12974 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
