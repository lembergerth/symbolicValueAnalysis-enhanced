scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-kernel--rcutorture.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1838153380_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 9702: Ignoring function call through function pointer *(cur_ops->init): (*(cur_ops->init))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9514: Ignoring function call through function pointer *(cur_ops->cb_barrier): (*(cur_ops->cb_barrier))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7476: Ignoring function call through function pointer *(cur_ops->stats): tmp___29 = (*(cur_ops->stats))(page + ((unsigned long)cnt)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6336: Ignoring function call through function pointer *(cur_ops->readlock): idx = (*(cur_ops->readlock))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6338: Ignoring function call through function pointer *(cur_ops->completed): completed = (*(cur_ops->completed))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6404: Ignoring function call through function pointer *(cur_ops->read_delay): (*(cur_ops->read_delay))(&rand); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5506: Ignoring function call through function pointer *(cur_ops->readlock): idx = (*(cur_ops->readlock))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5508: Ignoring function call through function pointer *(cur_ops->completed): completed = (*(cur_ops->completed))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5574: Ignoring function call through function pointer *(cur_ops->read_delay): (*(cur_ops->read_delay))(&rand); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rcu_torture_timer to rcu_torture_timer (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4168: Ignoring function call through function pointer *(cur_ops->deferred_free): (*(cur_ops->deferred_free))(rp); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rcu_torture_cb to rcu_torture_timer (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rcu_torture_cb to rcu_torture_cb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4214: Ignoring function call through function pointer *(cur_ops->sync): (*(cur_ops->sync))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5917: Ignoring function call through function pointer *(cur_ops->completed): tmp___5 = (*(cur_ops->completed))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6251: Ignoring function call through function pointer *(cur_ops->readunlock): (*(cur_ops->readunlock))(idx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5556: Ignoring function call through function pointer *(cur_ops->readunlock): (*(cur_ops->readunlock))(idx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rcu_torture_timer to rcu_torture_cb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6743: Ignoring function call through function pointer *(cur_ops->completed): tmp___7 = (*(cur_ops->completed))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7077: Ignoring function call through function pointer *(cur_ops->readunlock): (*(cur_ops->readunlock))(idx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            84 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            84 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       12 (14%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         7 (8%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      65 (77%)
  Times result was 'false':        9 (11%)
Number of strengthen sat checks:   18
  Times result was 'false':        17 (94%)
Number of coverage checks:         2144
  BDD entailment checks:           32
Number of SMT sat checks:          18
  trivial:                         0
  cached:                          1

Max ABE block size:                       531
Number of predicates discovered:          10
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         650
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 10.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   650 (100%)
  Total number of models for allsat:      55
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.85

Number of path formula cache hits:   1125 (9%)

Time for post operator:                  5.892s
  Time for path formula creation:        5.758s
    Actual computation:                  5.370s
Time for strengthen operator:            0.602s
  Time for satisfiability checks:        0.572s
Time for prec operator:                873.173s
  Time for abstraction:                873.145s (Max:   406.006s, Count: 84)
    Boolean abstraction:               863.696s
    Solving time:                      864.517s (Max:   405.621s)
    Model enumeration time:              0.390s
    Time for BDD construction:           0.009s (Max:     0.001s)
Time for merge operator:                 2.292s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):   865.480s

Number of BDD nodes:                               280
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                         143 (count: 351, min: 0, max: 123, avg: 0.41)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.164s
Automaton transfers with branching:                0
Automaton transfer successors:                        18707 (count: 18707, min: 1, max: 1, avg: 1.00) [1 x 18707]

CPA algorithm statistics
------------------------
Number of iterations:            10985
Max size of waitlist:            111
Average size of waitlist:        50
Number of computed successors:   12157
Max successors for one state:    2
Number of times merged:          1056
Number of times stopped:         1088
Number of times breaked:         1

Total time for CPA algorithm:       883.437s (Max:   879.159s)
  Time for choose from waitlist:      0.059s
  Time for precision adjustment:    873.328s
  Time for transfer relation:         7.223s
  Time for merge operator:            2.389s
  Time for stop operator:             0.080s
  Time for adding to reached set:     0.095s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   8 (count: 1, min: 8, max: 8, avg: 8.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.650s
  Counterexample analysis:                3.601s (Max:     3.601s, Calls: 1)
    Refinement sat check:                 3.272s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   3.601s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 964
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 964.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     887.101s
Time for refinements:                 3.663s
Average time for refinement:          3.663s
Max time for refinement:              3.663s

Code Coverage
-----------------------------
  Function coverage:      0.604
  Visited lines:          4896
  Total lines:            6987
  Line coverage:          0.701
  Visited conditions:     732
  Total conditions:       1566
  Condition coverage:     0.467

CPAchecker general statistics
-----------------------------
Number of program locations:     3980
Number of CFA edges:             5812
Number of relevant variables:    791
Number of functions:             182
Number of loops:                 59
Size of reached set:             10097
  Number of reached locations:   1933 (49%)
    Avg states per location:     5
    Max states per location:     164 (at node N5328)
  Number of reached functions:   110 (60%)
  Number of partitions:          10097
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        47

Time for analysis setup:          4.073s
  Time for loading CPAs:          0.523s
  Time for loading parser:        0.655s
  Time for CFA construction:      2.815s
    Time for parsing file(s):     0.683s
    Time for AST to CFA:          1.021s
    Time for CFA sanity check:    0.144s
    Time for post-processing:     0.772s
      Time for var class.:        0.000s
Time for Analysis:              887.101s
CPU time for analysis:          894.570s
Total time for CPAchecker:      891.179s
Total CPU time for CPAchecker:  901.600s

Time for Garbage Collector:       0.260s (in 2 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                571MB (   545 MiB) max;    315MB (   300 MiB) avg;    572MB (   545 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     22MB (    21 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        25MB (    24 MiB) max;     25MB (    24 MiB) avg
Total process virtual memory:  17362MB ( 16558 MiB) max;  15201MB ( 14497 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
