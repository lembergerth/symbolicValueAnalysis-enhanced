scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--gpu--drm--ttm--ttm.ko-ldv_main5_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1052631126_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 19997: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20045: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8426-8427: Function pointer *(bdev->driver->ttm_tt_create) with type struct ttm_tt * (*)(struct ttm_bo_device *, unsigned long, uint32_t , struct page *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8410-8411: Function pointer *(bdev->driver->ttm_tt_create) with type struct ttm_tt * (*)(struct ttm_bo_device *, unsigned long, uint32_t , struct page *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8677: Function pointer *(bo->bdev->driver->move_notify) with type void (*)(struct ttm_buffer_object *, struct ttm_mem_reg *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8816: Function pointer *(driver->sync_obj_ref) with type void * (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8826: Function pointer *(driver->sync_obj_wait) with type int (*)(void *, bool , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8751: Function pointer *(driver->sync_obj_ref) with type void * (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8624: Function pointer *(bdev->driver->invalidate_caches) with type int (*)(struct ttm_bo_device *, uint32_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8591-8592: Function pointer *(bdev->driver->move) with type int (*)(struct ttm_buffer_object *, bool , bool , bool , struct ttm_mem_reg *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10452: Function pointer *(bdev->driver->init_mem_type) with type int (*)(struct ttm_bo_device *, uint32_t , struct ttm_mem_type_manager *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12883: Function pointer *(driver->sync_obj_ref) with type void * (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11091: Function pointer *(driver->sync_obj_signaled) with type bool  (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11119: Function pointer *(driver->sync_obj_ref) with type void * (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11123: Function pointer *(driver->sync_obj_wait) with type int (*)(void *, bool , bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12551: Function pointer *(driver->sync_obj_ref) with type void * (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17194: Function pointer *(driver->sync_obj_ref) with type void * (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15297: Function pointer *(base->ref_obj_release) with type void (*)(struct ttm_base_object *, enum ttm_ref_type ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 6536: Ignoring function call through function pointer *(ttm->func->unbind): ret = (*(ttm->func->unbind))(ttm); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6389: Ignoring function call through function pointer *(ttm->bdev->driver->ttm_tt_unpopulate): (*(ttm->bdev->driver->ttm_tt_unpopulate))(ttm); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12039: Ignoring function call through function pointer *(bdev->driver->io_mem_free): (*(bdev->driver->io_mem_free))(bdev, mem); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from kref_put to kref_sub (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ttm_tt_destroy to ttm_bo_release_list (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15297: Ignoring function call through function pointer *(base->ref_obj_release): (*(base->ref_obj_release))(base, ref->ref_type); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15031: Ignoring function call through function pointer *(base->refcount_release): (*(base->refcount_release))(&base); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ttm_release_base to ttm_bo_release_list (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ttm_release_base to ttm_release_base (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6403: Ignoring function call through function pointer *(ttm->func->destroy): (*(ttm->func->destroy))(ttm); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7891: Ignoring function call through function pointer *(bo->destroy): (*(bo->destroy))(bo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ttm_bo_release_list to ttm_bo_release_list (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13492: Ignoring function call through function pointer *(bdev->driver->fault_reserve_notify): ret = (*(bdev->driver->fault_reserve_notify))(bo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ttm_tt_unbind to ttm_bo_swapout (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11091: Ignoring function call through function pointer *(driver->sync_obj_signaled): tmp___0 = (*(driver->sync_obj_signaled))(bo->sync_obj); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11103: Ignoring function call through function pointer *(driver->sync_obj_unref): (*(driver->sync_obj_unref))(&tmp_obj); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 20045: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            338 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            338 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1 (0%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         84 (25%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      253 (75%)
  Times result was 'false':        275 (81%)
Number of strengthen sat checks:   290
  Times result was 'false':        286 (99%)
Number of coverage checks:         6842
  BDD entailment checks:           32
Number of SMT sat checks:          290
  trivial:                         0
  cached:                          72

Max ABE block size:                       413
Number of predicates discovered:          13
Number of abstraction locations:          6
Max number of predicates per location:    11
Avg number of predicates per location:    11
Total predicates per abstraction:         2544
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 10.06
Number of irrelevant predicates:          3 (0%)
Number of preds handled by boolean abs:   2541 (100%)
  Total number of models for allsat:      80
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.32

Number of path formula cache hits:   19446 (37%)

Time for post operator:                  7.469s
  Time for path formula creation:        7.316s
    Actual computation:                  6.071s
Time for strengthen operator:           61.301s
  Time for satisfiability checks:       61.225s
Time for prec operator:                243.751s
  Time for abstraction:                243.685s (Max:     8.604s, Count: 338)
    Boolean abstraction:               198.125s
    Solving time:                      197.582s (Max:     7.998s)
    Model enumeration time:              0.391s
    Time for BDD construction:           0.021s (Max:     0.009s)
Time for merge operator:                 4.260s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):   259.193s

Number of BDD nodes:                               556
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                         195 (count: 1192, min: 0, max: 129, avg: 0.16)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.418s
Automaton transfers with branching:                0
Automaton transfer successors:                        71040 (count: 71040, min: 1, max: 1, avg: 1.00) [1 x 71040]

CPA algorithm statistics
------------------------
Number of iterations:            47211
Max size of waitlist:            74
Average size of waitlist:        46
Number of computed successors:   51018
Max successors for one state:    2
Number of times merged:          3405
Number of times stopped:         3437
Number of times breaked:         4

Total time for CPA algorithm:       319.965s (Max:   270.423s)
  Time for choose from waitlist:      0.082s
  Time for precision adjustment:    243.983s
  Time for transfer relation:        70.655s
  Time for merge operator:            4.450s
  Time for stop operator:             0.123s
  Time for adding to reached set:     0.184s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  31 (count: 4, min: 2, max: 11, avg: 7.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 555.054s
  Counterexample analysis:              554.747s (Max:   548.527s, Calls: 4)
    Refinement sat check:               553.117s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                 554.822s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.002s
  Precision update:                                    0.003s
  ARG update:                                          0.188s

Length of refined path (in blocks):                      15 (count: 2, min: 4, max: 11, avg: 7.50)
Number of affected states:                                4 (count: 2, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'true':                  9 (count: 2, min: 2, max: 7, avg: 4.50)
Length (states) of path with itp non-trivial itp:         4 (count: 2, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'false':                 1 (count: 2, min: 0, max: 1, avg: 0.50)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               2 (count: 2, min: 0, max: 2, avg: 1.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 29715
Max. size of reached set after ref.:  29316
Avg. size of reached set before ref.: 22286.00
Avg. size of reached set after ref.:  13945.67

Total time for CEGAR algorithm:     875.086s
Time for refinements:               555.094s
Average time for refinement:        138.773s
Max time for refinement:            548.538s

Code Coverage
-----------------------------
  Function coverage:      0.216
  Visited lines:          4966
  Total lines:            11704
  Line coverage:          0.424
  Visited conditions:     461
  Total conditions:       2742
  Condition coverage:     0.168

CPAchecker general statistics
-----------------------------
Number of program locations:     7900
Number of CFA edges:             12000
Number of relevant variables:    2323
Number of functions:             463
Number of loops:                 107
Size of reached set:             29715
  Number of reached locations:   1331 (17%)
    Avg states per location:     22
    Max states per location:     616 (at node N10132)
  Number of reached functions:   100 (22%)
  Number of partitions:          29694
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2114 (before line 8295), Function ttm_bo_list_ref_sub called from node N2133, stack depth 4 [1f239c6c], stack [main, ttm_bo_vm_fault, ttm_bo_reserve, ttm_bo_list_ref_sub], ABS5, Init])
  Number of target states:       1
  Size of final wait list        52

Time for analysis setup:          7.377s
  Time for loading CPAs:          0.637s
  Time for loading parser:        0.512s
  Time for CFA construction:      6.164s
    Time for parsing file(s):     1.575s
    Time for AST to CFA:          2.132s
    Time for CFA sanity check:    0.455s
    Time for post-processing:     1.779s
      Time for var class.:        0.000s
Time for Analysis:              875.086s
CPU time for analysis:          886.880s
Total time for CPAchecker:      882.468s
Total CPU time for CPAchecker:  900.630s

Time for Garbage Collector:       0.532s (in 4 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                599MB (   571 MiB) max;    354MB (   337 MiB) avg;    601MB (   573 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     24MB (    23 MiB) avg;     25MB (    24 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     27MB (    25 MiB) avg
Total process virtual memory:  14896MB ( 14206 MiB) max;  14335MB ( 13671 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
