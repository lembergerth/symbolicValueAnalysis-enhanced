scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.4-simple/ALL.prp ../svcomp15/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--media--dvb--frontends--rtl2830.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-869281139_tempdir
The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6534: Ignoring call via function pointer rtl2830_set_frontend::__cil_tmp30 for which no suitable target was found in line: (*__cil_tmp30)(fe); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6534: Ignoring function call through function pointer *__cil_tmp30: (*__cil_tmp30)(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rtl2830_set_frontend to rtl2830_set_frontend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            18 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            18 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1 (6%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         2 (11%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15 (83%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   2
  Times result was 'false':        1 (50%)
Number of coverage checks:         599
  BDD entailment checks:           11
Number of SMT sat checks:          2
  trivial:                         0
  cached:                          0

Max ABE block size:                       447
Number of predicates discovered:          2
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         30
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   30 (100%)
  Total number of models for allsat:      15
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Number of path formula cache hits:   23 (1%)

Time for post operator:                  5.342s
  Time for path formula creation:        5.313s
    Actual computation:                  5.234s
Time for strengthen operator:            0.012s
  Time for satisfiability checks:        0.005s
Time for prec operator:                518.747s
  Time for abstraction:                518.740s (Max:   249.692s, Count: 18)
    Boolean abstraction:               506.756s
    Solving time:                      505.725s (Max:   246.694s)
    Model enumeration time:              1.014s
    Time for BDD construction:           0.009s (Max:     0.009s)
Time for merge operator:                 1.746s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):   506.744s

Number of BDD nodes:                               203
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                          16 (count: 79, min: 0, max: 13, avg: 0.20)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.124s
Automaton transfers with branching:                0
Automaton transfer successors:                        15697 (count: 15697, min: 1, max: 1, avg: 1.00) [1 x 15697]

CPA algorithm statistics
------------------------
Number of iterations:            2467
Max size of waitlist:            22
Average size of waitlist:        14
Number of computed successors:   2774
Max successors for one state:    2
Number of times merged:          294
Number of times stopped:         305
Number of times breaked:         1

Total time for CPA algorithm:       526.402s (Max:   526.185s)
  Time for choose from waitlist:      0.021s
  Time for precision adjustment:    518.794s
  Time for transfer relation:         5.664s
  Time for merge operator:            1.782s
  Time for stop operator:             0.025s
  Time for adding to reached set:     0.058s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.036s
  Counterexample analysis:                0.027s (Max:     0.027s, Calls: 1)
    Refinement sat check:                 0.023s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.027s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 23
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 23.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     526.445s
Time for refinements:                 0.042s
Average time for refinement:          0.042s
Max time for refinement:              0.042s

Code Coverage
-----------------------------
  Function coverage:      0.595
  Visited lines:          5094
  Total lines:            5375
  Line coverage:          0.948
  Visited conditions:     112
  Total conditions:       150
  Condition coverage:     0.747

CPAchecker general statistics
-----------------------------
Number of program locations:     494
Number of CFA edges:             634
Number of relevant variables:    788
Number of functions:             37
Number of loops:                 3
Size of reached set:             2448
  Number of reached locations:   336 (68%)
    Avg states per location:     7
    Max states per location:     76 (at node N55)
  Number of reached functions:   22 (59%)
  Number of partitions:          2448
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.351s
  Time for loading CPAs:          0.461s
  Time for loading parser:        0.548s
  Time for CFA construction:      2.260s
    Time for parsing file(s):     0.908s
    Time for AST to CFA:          0.708s
    Time for CFA sanity check:    0.070s
    Time for post-processing:     0.372s
      Time for var class.:        0.000s
Time for Analysis:              526.445s
CPU time for analysis:          531.080s
Total time for CPAchecker:      529.801s
Total CPU time for CPAchecker:  536.880s

Time for Garbage Collector:       0.203s (in 2 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                558MB (   532 MiB) max;    146MB (   139 MiB) avg;    568MB (   542 MiB) peak
Used non-heap memory:             22MB (    21 MiB) max;     22MB (    21 MiB) avg;     22MB (    21 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        25MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  16038MB ( 15295 MiB) max;  15570MB ( 14849 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
