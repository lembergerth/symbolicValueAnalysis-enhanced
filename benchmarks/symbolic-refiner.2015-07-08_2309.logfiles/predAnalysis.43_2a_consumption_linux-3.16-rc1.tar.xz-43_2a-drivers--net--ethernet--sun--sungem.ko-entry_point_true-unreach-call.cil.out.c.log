scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--ethernet--sun--sungem.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_909588945_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7405: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7452: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7166: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7253: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7298: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7208: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 11181: Ignoring function call through function pointer *(gp->phy_mii.def->ops->setup_forced): (*(gp->phy_mii.def->ops->setup_forced))(&(gp->phy_mii), speed, duplex); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11171: Ignoring function call through function pointer *(gp->phy_mii.def->ops->setup_aneg): (*(gp->phy_mii.def->ops->setup_aneg))(&(gp->phy_mii), advertise); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7208: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7166: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, page, offset, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11232: Ignoring function call through function pointer *(gp->phy_mii.def->ops->read_link): tmp___0 = (*(gp->phy_mii.def->ops->read_link))(&(gp->phy_mii)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12084: Ignoring function call through function pointer *(gp->phy_mii.def->ops->init): (*(gp->phy_mii.def->ops->init))(&(gp->phy_mii)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from gem_init_phy to gem_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12709: Ignoring function call through function pointer *(gp->phy_mii.def->ops->suspend): (*(gp->phy_mii.def->ops->suspend))(&(gp->phy_mii)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from gem_stop_phy to gem_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from gem_stop_phy to gem_close (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from gem_stop_phy to gem_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from gem_resume to gem_do_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from gem_init_phy to gem_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from gem_init_phy to gem_begin_auto_negotiation (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from gem_init_phy to gem_close (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from gem_open to gem_do_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from gem_init_phy to gem_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from gem_set_link_modes to gem_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from gem_stop_phy to gem_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7253: Ignoring function call through function pointer *(ops->sync_single_for_cpu): (*(ops->sync_single_for_cpu))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7298: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from gem_close to gem_do_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from gem_nway_reset to gem_begin_auto_negotiation (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14494: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7452: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11664: Ignoring function call through function pointer *(gp->phy_mii.def->ops->poll_link): tmp___1 = (*(gp->phy_mii.def->ops->poll_link))(&(gp->phy_mii)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from gem_set_link_modes to gem_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from gem_set_link_modes to gem_close (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from gem_suspend to gem_do_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            19352 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            19352 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       19 (0%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         15827 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3506 (18%)
  Times result was 'false':        300 (2%)
Number of strengthen sat checks:   713
  Times result was 'false':        712 (100%)
Number of coverage checks:         321667
  BDD entailment checks:           10371
Number of SMT sat checks:          713
  trivial:                         0
  cached:                          593

Max ABE block size:                       375
Number of predicates discovered:          3
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         3506
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   3506 (100%)
  Total number of models for allsat:      3294
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.94

Number of path formula cache hits:   277380 (13%)

Time for post operator:                213.568s
  Time for path formula creation:      208.996s
    Actual computation:                178.166s
Time for strengthen operator:            2.741s
  Time for satisfiability checks:        0.112s
Time for prec operator:                504.161s
  Time for abstraction:                501.439s (Max:     2.561s, Count: 19352)
    Boolean abstraction:               414.282s
    Solving time:                      409.943s (Max:     2.495s)
    Model enumeration time:              3.979s
    Time for BDD construction:           0.136s (Max:     0.001s)
Time for merge operator:                32.265s
Time for coverage check:                 0.440s
  Time for BDD entailment checks:        0.129s
Total time for SMT solver (w/o itp):   414.028s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                        3268 (count: 24421, min: 0, max: 416, avg: 0.13)
Time for BDD node cleanup:                             0.036s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 13.264s
  Time for transition matches:                         5.506s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                      3014079 (count: 3014079, min: 1, max: 1, avg: 1.00) [1 x 3014079]

CPA algorithm statistics
------------------------
Number of iterations:            2013974
Max size of waitlist:            3583
Average size of waitlist:        1846
Number of computed successors:   2183879
Max successors for one state:    2
Number of times merged:          155648
Number of times stopped:         166019
Number of times breaked:         1

Total time for CPA algorithm:       836.250s (Max:   835.243s)
  Time for choose from waitlist:      2.403s
  Time for precision adjustment:    509.419s
  Time for transfer relation:       267.303s
  Time for merge operator:           34.496s
  Time for stop operator:             3.767s
  Time for adding to reached set:     5.795s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   8 (count: 1, min: 8, max: 8, avg: 8.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.208s
  Counterexample analysis:                0.185s (Max:     0.185s, Calls: 1)
    Refinement sat check:                 0.163s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.185s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 805
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 805.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     836.482s
Time for refinements:                 0.230s
Average time for refinement:          0.230s
Max time for refinement:              0.230s

Code Coverage
-----------------------------
  Function coverage:      0.708
  Visited lines:          9343
  Total lines:            10490
  Line coverage:          0.891
  Visited conditions:     781
  Total conditions:       1214
  Condition coverage:     0.643

CPAchecker general statistics
-----------------------------
Number of program locations:     3839
Number of CFA edges:             5572
Number of relevant variables:    1350
Number of functions:             219
Number of loops:                 33
Size of reached set:             2016757
  Size of final wait list        3559

Time for analysis setup:          5.420s
  Time for loading CPAs:          0.707s
  Time for loading parser:        0.545s
  Time for CFA construction:      4.102s
    Time for parsing file(s):     1.327s
    Time for AST to CFA:          1.447s
    Time for CFA sanity check:    0.134s
    Time for post-processing:     0.904s
      Time for var class.:        0.000s
Time for Analysis:              836.482s
CPU time for analysis:          890.170s
Total time for CPAchecker:      841.907s
Total CPU time for CPAchecker:  900.260s

Time for Garbage Collector:      39.662s (in 19 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4374MB (  4171 MiB) max;   2389MB (  2278 MiB) avg;   5082MB (  4847 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     24MB (    23 MiB) avg;     26MB (    24 MiB) peak
Used in PS Old Gen pool:        1619MB (  1544 MiB) max;    890MB (   848 MiB) avg;   1619MB (  1544 MiB) peak
Allocated heap memory:          5552MB (  5295 MiB) max;   4662MB (  4446 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:  13758MB ( 13121 MiB) max;  13673MB ( 13040 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
