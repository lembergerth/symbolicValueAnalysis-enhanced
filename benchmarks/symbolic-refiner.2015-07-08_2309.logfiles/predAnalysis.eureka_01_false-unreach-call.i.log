scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -timelimit 900s -stats -spec ../svcomp15/loops/ALL.prp ../svcomp15/loops/eureka_01_false-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-827372115_tempdir
Undefined function __VERIFIER_nondet_int found, first called in line 12 (CheckBindingVisitor.visit, WARNING)

Undefined function __VERIFIER_assume found, first called in line 14 (CheckBindingVisitor.visit, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 14: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume((0 <= nodecount) <= 4); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __VERIFIER_assume, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume((0 <= edgecount) <= 19); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Error: Refinement failed: Interpolation failed (can't build ie-local interpolant) (InterpolationManager.buildCounterexampleTrace0, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            83 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            83 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       9 (11%)
  Times precision was {false}:     3 (4%)
  Times result was cached:         9 (11%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      62 (75%)
  Times result was 'false':        12 (14%)
Number of strengthen sat checks:   16
  Times result was 'false':        9 (56%)
Number of coverage checks:         72
  BDD entailment checks:           62
Number of SMT sat checks:          16
  trivial:                         0
  cached:                          5

Max ABE block size:                       5
Number of predicates discovered:          14
Number of abstraction locations:          6
Max number of predicates per location:    7
Avg number of predicates per location:    5
Total predicates per abstraction:         232
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 3.57
Number of irrelevant predicates:          29 (13%)
Number of preds handled by boolean abs:   203 (88%)
  Total number of models for allsat:      79
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.27

Number of path formula cache hits:   305 (68%)

Time for post operator:                  0.177s
  Time for path formula creation:        0.170s
    Actual computation:                  0.158s
Time for strengthen operator:            0.019s
  Time for satisfiability checks:        0.014s
Time for prec operator:                  1.661s
  Time for abstraction:                  1.652s (Max:     0.415s, Count: 83)
    Boolean abstraction:                 1.420s
    Solving time:                        1.217s (Max:     0.352s)
    Model enumeration time:              0.162s
    Time for BDD construction:           0.014s (Max:     0.008s)
Time for merge operator:                 0.016s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     1.392s

Number of BDD nodes:                               433
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 469, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                          666 (count: 666, min: 1, max: 1, avg: 1.00) [1 x 666]

CPA algorithm statistics
------------------------
Number of iterations:            322
Max size of waitlist:            8
Average size of waitlist:        4
Number of computed successors:   389
Max successors for one state:    2
Number of times merged:          5
Number of times stopped:         14
Number of times breaked:         7

Total time for CPA algorithm:         1.992s (Max:     0.827s)
  Time for choose from waitlist:      0.005s
  Time for precision adjustment:      1.678s
  Time for transfer relation:         0.253s
  Time for merge operator:            0.022s
  Time for stop operator:             0.005s
  Time for adding to reached set:     0.014s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  53 (count: 7, min: 5, max: 10, avg: 7.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.768s
  Counterexample analysis:                0.714s (Max:     0.413s, Calls: 7)
    Refinement sat check:                 0.555s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.741s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.003s
  Precision update:                                    0.004s
  ARG update:                                          0.010s

Length of refined path (in blocks):                      33 (count: 5, min: 3, max: 9, avg: 6.60)
Number of affected states:                               25 (count: 5, min: 2, max: 8, avg: 5.00)
Length (states) of path with itp 'true':                  3 (count: 5, min: 0, max: 3, avg: 0.60)
Length (states) of path with itp non-trivial itp:        25 (count: 5, min: 2, max: 8, avg: 5.00)
Length (states) of path with itp 'false':                 2 (count: 5, min: 0, max: 1, avg: 0.40)
Different non-trivial interpolants along paths:          13 (count: 5, min: 1, max: 5, avg: 2.60)
Equal non-trivial interpolants along paths:               7 (count: 5, min: 0, max: 4, avg: 1.40)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     6
Number of failed refinements:         1
Max. size of reached set before ref.: 104
Max. size of reached set after ref.:  41
Avg. size of reached set before ref.: 62.57
Avg. size of reached set after ref.:  12.33

Total time for CEGAR algorithm:       2.750s
Time for refinements:                 0.757s
Average time for refinement:          0.108s
Max time for refinement:              0.417s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          48
  Total lines:            48
  Line coverage:          1.000
  Visited conditions:     18
  Total conditions:       18
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     41
Number of CFA edges:             50
Number of relevant variables:    13
Number of functions:             2
Number of loops:                 5
Size of reached set:             104
  Number of reached locations:   41 (100%)
    Avg states per location:     2
    Max states per location:     6 (at node N8)
  Number of reached functions:   2 (100%)
  Number of partitions:          93
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N37 (before line 33), Function main called from node N9, stack depth 1 [69ec7e06], stack [main], Init])
  Number of target states:       1
  Size of final wait list        8

Time for analysis setup:          1.502s
  Time for loading CPAs:          0.349s
  Time for loading parser:        0.578s
  Time for CFA construction:      0.508s
    Time for parsing file(s):     0.260s
    Time for AST to CFA:          0.125s
    Time for CFA sanity check:    0.007s
    Time for post-processing:     0.077s
      Time for var class.:        0.000s
Time for Analysis:                2.750s
CPU time for analysis:            3.020s
Total time for CPAchecker:        4.258s
Total CPU time for CPAchecker:    5.490s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                157MB (   150 MiB) max;    130MB (   124 MiB) avg;    157MB (   150 MiB) peak
Used non-heap memory:             19MB (    18 MiB) max;     16MB (    16 MiB) avg;     19MB (    18 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13601MB ( 12970 MiB) max;  13592MB ( 12963 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
