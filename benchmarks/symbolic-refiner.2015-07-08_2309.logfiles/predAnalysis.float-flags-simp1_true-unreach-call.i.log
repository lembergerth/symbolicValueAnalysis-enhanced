scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -timelimit 900s -stats -spec ../svcomp15/floats-cbmc-regression/ALL.prp ../svcomp15/floats-cbmc-regression/float-flags-simp1_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-929059662_tempdir
The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Error: Refinement failed: Interpolation failed (RefinementStrategy.evaluateInterpolantsOnPath, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            0 (0% of all post computations)
Number of strengthen sat checks:   18
  Times result was 'false':        16 (89%)
Number of coverage checks:         16
  BDD entailment checks:           0
Number of SMT sat checks:          18
  trivial:                         0
  cached:                          9

Max ABE block size:                       0
Number of predicates discovered:          1
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   135 (51%)

Time for post operator:                  0.061s
  Time for path formula creation:        0.056s
    Actual computation:                  0.054s
Time for strengthen operator:            0.134s
  Time for satisfiability checks:        0.132s
Time for prec operator:                  0.001s
Time for merge operator:                 0.001s
Time for coverage check:                 0.000s
Total time for SMT solver (w/o itp):     0.132s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD node cleanup queue:                           0 (count: 4, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.022s
Automaton transfers with branching:                0
Automaton transfer successors:                          728 (count: 728, min: 1, max: 1, avg: 1.00) [1 x 728]

CPA algorithm statistics
------------------------
Number of iterations:            234
Max size of waitlist:            2
Average size of waitlist:        1
Number of computed successors:   244
Max successors for one state:    2
Number of times merged:          8
Number of times stopped:         8
Number of times breaked:         2

Total time for CPA algorithm:         0.282s (Max:     0.244s)
  Time for choose from waitlist:      0.003s
  Time for precision adjustment:      0.011s
  Time for transfer relation:         0.244s
  Time for merge operator:            0.004s
  Time for stop operator:             0.002s
  Time for adding to reached set:     0.007s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   2 (count: 2, min: 1, max: 1, avg: 1.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.443s
  Counterexample analysis:                0.415s (Max:     0.214s, Calls: 2)
    Refinement sat check:                 0.381s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.415s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 1, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     1
Number of failed refinements:         1
Max. size of reached set before ref.: 119
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 119.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:       0.721s
Time for refinements:                 0.439s
Average time for refinement:          0.219s
Max time for refinement:              0.233s

Code Coverage
-----------------------------
  Function coverage:      0.438
  Visited lines:          26
  Total lines:            73
  Line coverage:          0.356
  Visited conditions:     26
  Total conditions:       100
  Condition coverage:     0.260

CPAchecker general statistics
-----------------------------
Number of program locations:     383
Number of CFA edges:             485
Number of relevant variables:    120
Number of functions:             16
Number of loops:                 0
Size of reached set:             119
  Number of reached locations:   102 (27%)
    Avg states per location:     1
    Max states per location:     3 (at node N39)
  Number of reached functions:   7 (44%)
  Number of partitions:          119
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        2

Time for analysis setup:          1.844s
  Time for loading CPAs:          0.389s
  Time for loading parser:        0.508s
  Time for CFA construction:      0.877s
    Time for parsing file(s):     0.364s
    Time for AST to CFA:          0.245s
    Time for CFA sanity check:    0.034s
    Time for post-processing:     0.136s
      Time for var class.:        0.000s
Time for Analysis:                0.721s
CPU time for analysis:            0.760s
Total time for CPAchecker:        2.571s
Total CPU time for CPAchecker:    3.740s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                159MB (   151 MiB) max;    106MB (   102 MiB) avg;    159MB (   151 MiB) peak
Used non-heap memory:             19MB (    18 MiB) max;     14MB (    13 MiB) avg;     19MB (    18 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13600MB ( 12970 MiB) max;  13586MB ( 12957 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
