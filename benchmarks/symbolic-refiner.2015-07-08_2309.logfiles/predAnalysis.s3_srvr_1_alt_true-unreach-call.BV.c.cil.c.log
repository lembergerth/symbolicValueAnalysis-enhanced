scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -timelimit 900s -stats -spec ../svcomp15/bitvector/ALL.prp ../svcomp15/bitvector/s3_srvr_1_alt_true-unreach-call.BV.c.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-2036138883_tempdir
Undefined function __VERIFIER_assume found, first called in line 67 (CheckBindingVisitor.visit, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 67: Return type of function __VERIFIER_assume is void, but result is used as type int: __VERIFIER_assume(ag_Z != 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __VERIFIER_assume, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            16 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            16 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1 (6%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15 (94%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   15
  Times result was 'false':        11 (73%)
Number of coverage checks:         1976
  BDD entailment checks:           20
Number of SMT sat checks:          15
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          40
Number of abstraction locations:          2
Max number of predicates per location:    39
Avg number of predicates per location:    21
Total predicates per abstraction:         246
Max number of predicates per abstraction: 39
Avg number of predicates per abstraction: 16.40
Number of irrelevant predicates:          4 (2%)
Number of preds handled by boolean abs:   242 (98%)
  Total number of models for allsat:      197
  Max number of models for allsat:        125
  Avg number of models for allsat:        13.13

Number of path formula cache hits:   3726 (68%)

Time for post operator:                  0.469s
  Time for path formula creation:        0.417s
    Actual computation:                  0.389s
Time for strengthen operator:            0.139s
  Time for satisfiability checks:        0.113s
Time for prec operator:                892.314s
  Time for abstraction:                892.299s (Max:   887.405s, Count: 16)
    Boolean abstraction:               891.938s
    Solving time:                        2.537s (Max:     0.875s)
    Model enumeration time:            889.293s
    Time for BDD construction:           0.173s (Max:     0.061s)
Time for merge operator:                 0.139s
Time for coverage check:                 0.005s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):   891.943s

Number of BDD nodes:                               54462
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 575, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.102s
Automaton transfers with branching:                0
Automaton transfer successors:                         7111 (count: 7111, min: 1, max: 1, avg: 1.00) [1 x 7111]

CPA algorithm statistics
------------------------
Number of iterations:            3623
Max size of waitlist:            59
Average size of waitlist:        27
Number of computed successors:   4794
Max successors for one state:    2
Number of times merged:          978
Number of times stopped:         978
Number of times breaked:         4

Total time for CPA algorithm:       893.802s (Max:   890.899s)
  Time for choose from waitlist:      0.025s
  Time for precision adjustment:    892.391s
  Time for transfer relation:         0.918s
  Time for merge operator:            0.237s
  Time for stop operator:             0.044s
  Time for adding to reached set:     0.077s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  15 (count: 4, min: 2, max: 6, avg: 3.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.546s
  Counterexample analysis:                0.476s (Max:     0.273s, Calls: 4)
    Refinement sat check:                 0.387s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.476s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.004s
  ARG update:                                          0.045s

Length of refined path (in blocks):                      13 (count: 3, min: 3, max: 6, avg: 4.33)
Number of affected states:                               10 (count: 3, min: 2, max: 5, avg: 3.33)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        10 (count: 3, min: 2, max: 5, avg: 3.33)
Length (states) of path with itp 'false':                 0 (count: 3, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           7 (count: 3, min: 1, max: 4, avg: 2.33)
Equal non-trivial interpolants along paths:               0 (count: 3, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 1358
Max. size of reached set after ref.:  60
Avg. size of reached set before ref.: 685.25
Avg. size of reached set after ref.:  45.25

Total time for CEGAR algorithm:     894.377s
Time for refinements:                 0.574s
Average time for refinement:          0.143s
Max time for refinement:              0.313s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          640
  Total lines:            650
  Line coverage:          0.985
  Visited conditions:     190
  Total conditions:       192
  Condition coverage:     0.990

CPAchecker general statistics
-----------------------------
Number of program locations:     368
Number of CFA edges:             464
Number of relevant variables:    40
Number of functions:             2
Number of loops:                 1
Size of reached set:             1256
  Number of reached locations:   359 (98%)
    Avg states per location:     3
    Max states per location:     4 (at node N109)
  Number of reached functions:   2 (100%)
  Number of partitions:          1253
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N109 (before lines 102-664), Function ssl3_accept called from node N671, stack depth 2 [50ed3bb2], stack [main, ssl3_accept], Init])
  Number of target states:       0
  Size of final wait list        21

Time for analysis setup:          1.765s
  Time for loading CPAs:          0.386s
  Time for loading parser:        0.538s
  Time for CFA construction:      0.771s
    Time for parsing file(s):     0.329s
    Time for AST to CFA:          0.193s
    Time for CFA sanity check:    0.037s
    Time for post-processing:     0.154s
      Time for var class.:        0.000s
Time for Analysis:              894.377s
CPU time for analysis:          897.330s
Total time for CPAchecker:      896.147s
Total CPU time for CPAchecker:  900.230s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                221MB (   211 MiB) max;    215MB (   205 MiB) avg;    232MB (   221 MiB) peak
Used non-heap memory:             20MB (    19 MiB) max;     20MB (    19 MiB) avg;     20MB (    19 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13934MB ( 13288 MiB) max;  13841MB ( 13200 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
