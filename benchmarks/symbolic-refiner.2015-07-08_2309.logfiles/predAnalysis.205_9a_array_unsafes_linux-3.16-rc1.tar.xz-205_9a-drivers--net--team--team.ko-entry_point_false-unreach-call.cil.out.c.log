scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--team--team.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1801307532_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 12310: Ignoring function call through function pointer *(team->ops.port_disabled): (*(team->ops.port_disabled))(team, port); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12467: Ignoring function call through function pointer *(team->ops.port_leave): (*(team->ops.port_leave))(team, port); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10447: Ignoring function call through function pointer *(opt_inst->option->getter): tmp = (*(opt_inst->option->getter))(team, ctx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14205: Ignoring function call through function pointer *(team->ops.port_change_dev_addr): (*(team->ops.port_change_dev_addr))(team, port); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from team_option_get to team_del_slave (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from team_nl_cmd_options_get to team_nl_send_options_get (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10941: Ignoring call via function pointer __team_change_mode::exit_op for which no suitable target was found in line: (*exit_op)(team); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10941: Ignoring function call through function pointer *exit_op: (*exit_op)(team); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from team_options_change_check to __team_options_change_check (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from team_uninit to __team_change_mode (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from team_uninit to team_port_del (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10964: Ignoring function call through function pointer *(new_mode->ops->init): err = (*(new_mode->ops->init))(team); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9873: Ignoring function call through function pointer *(option->init): err = (*(option->init))(team, &(opt_inst->info)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from __team_option_inst_add to team_del_slave (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __team_option_inst_add to team_mode_option_set (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12232: Ignoring function call through function pointer *(team->ops.port_enabled): (*(team->ops.port_enabled))(team, port); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12432: Ignoring function call through function pointer *(team->ops.port_enter): err = (*(team->ops.port_enter))(team, port); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from team_port_enter to team_del_slave (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from team_port_enter to team_mode_option_set (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from team_port_enter to team_add_slave (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from team_nl_cmd_options_set to team_nl_send_event_options_get (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10468: Ignoring function call through function pointer *(opt_inst->option->setter): tmp = (*(opt_inst->option->setter))(team, ctx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from team_option_set to team_del_slave (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from team_option_set to team_mode_option_set (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from team_option_set to team_add_slave (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from team_option_set to team_nl_cmd_options_set (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13556: Ignoring function call through function pointer *(team->ops.transmit): tx_success = (*(team->ops.transmit))(team, skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from __team_option_inst_add_port to __team_option_inst_add (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from team_port_add to __team_options_change_check (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from team_port_enter to team_nl_cmd_options_set (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            104850 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            104850 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       104849 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   3
  Times result was 'false':        1 (33%)
Number of coverage checks:         420199
  BDD entailment checks:           74089
Number of SMT sat checks:          3
  trivial:                         0
  cached:                          1

Max ABE block size:                       235
Number of predicates discovered:          3
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   1 (100%)
  Total number of models for allsat:      1
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Number of path formula cache hits:   70709 (3%)

Time for post operator:                480.774s
  Time for path formula creation:      473.113s
    Actual computation:                373.317s
Time for strengthen operator:            3.433s
  Time for satisfiability checks:        0.111s
Time for prec operator:                 31.122s
  Time for abstraction:                 23.607s (Max:     1.448s, Count: 104850)
    Boolean abstraction:                 0.589s
    Solving time:                        0.569s (Max:     0.569s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.012s (Max:     0.012s)
Time for merge operator:               202.994s
Time for coverage check:                 0.783s
  Time for BDD entailment checks:        0.306s
Total time for SMT solver (w/o itp):     0.685s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           4 (count: 178949, min: 0, max: 4, avg: 0.00)
Time for BDD node cleanup:                             0.174s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.961s
  Time for transition matches:                         6.945s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      3713352 (count: 3713352, min: 1, max: 1, avg: 1.00) [1 x 3713352]

CPA algorithm statistics
------------------------
Number of iterations:            2377604
Max size of waitlist:            32047
Average size of waitlist:        14526
Number of computed successors:   2651597
Max successors for one state:    2
Number of times merged:          173055
Number of times stopped:         247144
Number of times breaked:         2

Total time for CPA algorithm:       799.685s (Max:   798.257s)
  Time for choose from waitlist:      2.950s
  Time for precision adjustment:     38.163s
  Time for transfer relation:       524.024s
  Time for merge operator:          206.338s
  Time for stop operator:             5.218s
  Time for adding to reached set:     8.027s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   4 (count: 2, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.400s
  Counterexample analysis:                0.369s (Max:     0.235s, Calls: 2)
    Refinement sat check:                 0.331s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.369s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.002s
  ARG update:                                          0.006s

Length of refined path (in blocks):                       2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of affected states:                                1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 1, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 0 (count: 1, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 1, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 679
Max. size of reached set after ref.:  155
Avg. size of reached set before ref.: 679.00
Avg. size of reached set after ref.:  78.00

Total time for CEGAR algorithm:     800.106s
Time for refinements:                 0.421s
Average time for refinement:          0.210s
Max time for refinement:              0.270s

Code Coverage
-----------------------------
  Function coverage:      0.815
  Visited lines:          10538
  Total lines:            11806
  Line coverage:          0.893
  Visited conditions:     1044
  Total conditions:       1432
  Condition coverage:     0.729

CPAchecker general statistics
-----------------------------
Number of program locations:     4192
Number of CFA edges:             6031
Number of relevant variables:    1401
Number of functions:             302
Number of loops:                 57
Size of reached set:             2403252
  Size of final wait list        26842

Time for analysis setup:          5.542s
  Time for loading CPAs:          0.550s
  Time for loading parser:        0.660s
  Time for CFA construction:      4.230s
    Time for parsing file(s):     1.452s
    Time for AST to CFA:          1.395s
    Time for CFA sanity check:    0.154s
    Time for post-processing:     1.026s
      Time for var class.:        0.000s
Time for Analysis:              800.107s
CPU time for analysis:          900.540s
Total time for CPAchecker:      805.656s
Total CPU time for CPAchecker:  910.580s

Time for Garbage Collector:      87.269s (in 41 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4883MB (  4657 MiB) max;   2663MB (  2539 MiB) avg;   6253MB (  5963 MiB) peak
Used non-heap memory:             26MB (    24 MiB) max;     24MB (    23 MiB) avg;     26MB (    25 MiB) peak
Used in PS Old Gen pool:        2461MB (  2347 MiB) max;   1073MB (  1023 MiB) avg;   2461MB (  2347 MiB) peak
Allocated heap memory:          5758MB (  5491 MiB) max;   4897MB (  4670 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:  13629MB ( 12998 MiB) max;  13603MB ( 12973 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
