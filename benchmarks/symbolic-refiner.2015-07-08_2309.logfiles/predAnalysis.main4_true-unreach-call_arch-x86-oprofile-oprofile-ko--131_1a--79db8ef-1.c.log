scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-commit-tester/ALL.prp ../svcomp15/ldv-commit-tester/main4_true-unreach-call_arch-x86-oprofile-oprofile-ko--131_1a--79db8ef-1.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1599795963_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 10247: Function pointer *(apic->read) with type u32  (*)(u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10259: Function pointer *(apic->write) with type void (*)(u32 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9388: Function pointer *(timer___0->base->get_time) with type ktime_t  (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 10363-10365: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 14086-14088: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 8424: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4069: Ignoring function call through function pointer *(oprofile_ops.stop): (*(oprofile_ops.stop))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12381: Ignoring function call through function pointer *(model->shutdown): (*(model->shutdown))((const struct op_msrs *)msrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11894: Ignoring function call through function pointer *(model->setup_ctrs): (*(model->setup_ctrs))((const struct op_x86_model_spec *)model, (const struct op_msrs *)msrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10247: Ignoring function call through function pointer *(apic->read): tmp = (*(apic->read))(reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10259: Ignoring function call through function pointer *(apic->write): (*(apic->write))(reg, val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11008: Ignoring function call through function pointer *(model->start): (*(model->start))(msrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_up (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3940: Ignoring function call through function pointer *(oprofile_ops.switch_events): tmp = (*(oprofile_ops.switch_events))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12226: Ignoring function call through function pointer *(model->fill_in_addresses): err = (*(model->fill_in_addresses))((struct op_msrs *)((__per_cpu_offset[0]) + __ptr)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from nmi_resume to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5202: Ignoring function call through function pointer *(oprofile_ops.backtrace): (*(oprofile_ops.backtrace))(regs, (unsigned int)backtrace); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12043: Ignoring function call through function pointer *(model->cpu_down): (*(model->cpu_down))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from nmi_cpu_shutdown to nmi_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11116: Ignoring function call through function pointer *(model->stop): (*(model->stop))(msrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_up (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_down (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_switch to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11565: Ignoring function call through function pointer *(model->switch_ctrl): (*(model->switch_ctrl))((const struct op_x86_model_spec *)model, (const struct op_msrs *)msrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from nmi_cpu_switch to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_down to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_switch (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            71646 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            71646 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       71646 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         303923
  BDD entailment checks:           37681
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       355
Number of predicates discovered:          0

Number of path formula cache hits:   161485 (7%)

Time for post operator:                511.244s
  Time for path formula creation:      505.762s
    Actual computation:                458.468s
Time for strengthen operator:            2.722s
Time for prec operator:                 25.987s
  Time for abstraction:                 21.586s (Max:     0.427s, Count: 71646)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:               215.696s
Time for coverage check:                 0.568s
  Time for BDD entailment checks:        0.282s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 109328, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.101s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 18.126s
  Time for transition matches:                         7.412s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      4178029 (count: 4178029, min: 1, max: 1, avg: 1.00) [1 x 4178029]

CPA algorithm statistics
------------------------
Number of iterations:            2143587
Max size of waitlist:            13303
Average size of waitlist:        6858
Number of computed successors:   2327400
Max successors for one state:    2
Number of times merged:          133121
Number of times stopped:         170802
Number of times breaked:         0

Total time for CPA algorithm:       833.982s (Max:   833.982s)
  Time for choose from waitlist:      2.396s
  Time for precision adjustment:     32.008s
  Time for transfer relation:       556.838s
  Time for merge operator:          218.478s
  Time for stop operator:             4.762s
  Time for adding to reached set:     6.480s

Predicate-Abstraction Refiner statistics
----------------------------------------
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.569
  Visited lines:          6787
  Total lines:            9247
  Line coverage:          0.734
  Visited conditions:     772
  Total conditions:       1504
  Condition coverage:     0.513

CPAchecker general statistics
-----------------------------
Number of program locations:     4483
Number of CFA edges:             6394
Number of relevant variables:    1452
Number of functions:             288
Number of loops:                 76
Size of reached set:             2156599
  Size of final wait list        13012

Time for analysis setup:          5.983s
  Time for loading CPAs:          0.676s
  Time for loading parser:        0.516s
  Time for CFA construction:      4.712s
    Time for parsing file(s):     0.967s
    Time for AST to CFA:          2.096s
    Time for CFA sanity check:    0.265s
    Time for post-processing:     1.076s
      Time for var class.:        0.000s
Time for Analysis:              833.982s
CPU time for analysis:          888.990s
Total time for CPAchecker:      839.971s
Total CPU time for CPAchecker:  900.230s

Time for Garbage Collector:      42.902s (in 46 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4948MB (  4719 MiB) max;   2603MB (  2483 MiB) avg;   5453MB (  5200 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     24MB (    23 MiB) avg;     25MB (    24 MiB) peak
Used in PS Old Gen pool:        1809MB (  1725 MiB) max;    976MB (   930 MiB) avg;   1809MB (  1725 MiB) peak
Allocated heap memory:          5716MB (  5452 MiB) max;   4938MB (  4709 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:  13613MB ( 12982 MiB) max;  13604MB ( 12974 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
