scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.4-simple/ALL.prp ../svcomp15/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mtd--devices--docprobe.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-122735970_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3644: Function pointer *initroutine with type void (*)(struct mtd_info *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 3644: Ignoring call via function pointer DoC_Probe::initroutine for which no suitable target was found in line: (*initroutine)(mtd); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3644: Ignoring function call through function pointer *initroutine: (*initroutine)(mtd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            11 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            11 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       3 (27%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8 (73%)
  Times result was 'false':        3 (27%)
Number of strengthen sat checks:   4
  Times result was 'false':        3 (75%)
Number of coverage checks:         178
  BDD entailment checks:           4
Number of SMT sat checks:          4
  trivial:                         0
  cached:                          0

Max ABE block size:                       97
Number of predicates discovered:          3
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         8
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   8 (100%)
  Total number of models for allsat:      5
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.63

Number of path formula cache hits:   313 (27%)

Time for post operator:                  0.412s
  Time for path formula creation:        0.390s
    Actual computation:                  0.373s
Time for strengthen operator:            0.188s
  Time for satisfiability checks:        0.180s
Time for prec operator:                  1.271s
  Time for abstraction:                  1.267s (Max:     0.807s, Count: 11)
    Boolean abstraction:                 1.079s
    Solving time:                        1.063s (Max:     0.695s)
    Model enumeration time:              0.012s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.253s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     1.255s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 45, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.064s
Automaton transfers with branching:                0
Automaton transfer successors:                         3557 (count: 3557, min: 1, max: 1, avg: 1.00) [1 x 3557]

CPA algorithm statistics
------------------------
Number of iterations:            1025
Max size of waitlist:            21
Average size of waitlist:        8
Number of computed successors:   1128
Max successors for one state:    2
Number of times merged:          87
Number of times stopped:         91
Number of times breaked:         1

Total time for CPA algorithm:         2.425s (Max:     2.012s)
  Time for choose from waitlist:      0.010s
  Time for precision adjustment:      1.308s
  Time for transfer relation:         0.766s
  Time for merge operator:            0.265s
  Time for stop operator:             0.024s
  Time for adding to reached set:     0.029s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   3 (count: 1, min: 3, max: 3, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.071s
  Counterexample analysis:                0.058s (Max:     0.058s, Calls: 1)
    Refinement sat check:                 0.050s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.058s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 280
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 280.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:       2.505s
Time for refinements:                 0.079s
Average time for refinement:          0.079s
Max time for refinement:              0.079s

Code Coverage
-----------------------------
  Function coverage:      0.625
  Visited lines:          2833
  Total lines:            2877
  Line coverage:          0.985
  Visited conditions:     74
  Total conditions:       84
  Condition coverage:     0.881

CPAchecker general statistics
-----------------------------
Number of program locations:     337
Number of CFA edges:             441
Number of relevant variables:    225
Number of functions:             16
Number of loops:                 3
Size of reached set:             756
  Number of reached locations:   287 (85%)
    Avg states per location:     2
    Max states per location:     31 (at node N0)
  Number of reached functions:   10 (63%)
  Number of partitions:          756
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.268s
  Time for loading CPAs:          0.444s
  Time for loading parser:        0.531s
  Time for CFA construction:      1.228s
    Time for parsing file(s):     0.541s
    Time for AST to CFA:          0.327s
    Time for CFA sanity check:    0.042s
    Time for post-processing:     0.186s
      Time for var class.:        0.000s
Time for Analysis:                2.505s
CPU time for analysis:            3.140s
Total time for CPAchecker:        4.778s
Total CPU time for CPAchecker:    6.860s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                222MB (   212 MiB) max;    160MB (   153 MiB) avg;    222MB (   212 MiB) peak
Used non-heap memory:             20MB (    19 MiB) max;     16MB (    15 MiB) avg;     20MB (    19 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13687MB ( 13053 MiB) max;  13607MB ( 12977 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
