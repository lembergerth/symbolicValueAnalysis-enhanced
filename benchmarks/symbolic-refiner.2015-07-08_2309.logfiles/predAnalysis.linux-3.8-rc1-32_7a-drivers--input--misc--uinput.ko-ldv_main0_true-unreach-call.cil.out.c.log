scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/linux-3.8-rc1-32_7a-drivers--input--misc--uinput.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1733890983_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4053: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 3988: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4053: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            32 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            32 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1 (3%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      31 (97%)
  Times result was 'false':        5 (16%)
Number of strengthen sat checks:   35
  Times result was 'false':        34 (97%)
Number of coverage checks:         693
  BDD entailment checks:           17
Number of SMT sat checks:          35
  trivial:                         0
  cached:                          1

Max ABE block size:                       153
Number of predicates discovered:          6
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         186
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 6.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   186 (100%)
  Total number of models for allsat:      26
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.84

Number of path formula cache hits:   69 (2%)

Time for post operator:                  1.115s
  Time for path formula creation:        1.080s
    Actual computation:                  1.028s
Time for strengthen operator:            1.440s
  Time for satisfiability checks:        1.427s
Time for prec operator:                  4.505s
  Time for abstraction:                  4.497s (Max:     3.096s, Count: 32)
    Boolean abstraction:                 4.099s
    Solving time:                        4.024s (Max:     2.879s)
    Model enumeration time:              0.036s
    Time for BDD construction:           0.016s (Max:     0.010s)
Time for merge operator:                 0.642s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     5.485s

Number of BDD nodes:                               230
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 172, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.106s
Automaton transfers with branching:                0
Automaton transfer successors:                         6218 (count: 6218, min: 1, max: 1, avg: 1.00) [1 x 6218]

CPA algorithm statistics
------------------------
Number of iterations:            2951
Max size of waitlist:            33
Average size of waitlist:        20
Number of computed successors:   3320
Max successors for one state:    2
Number of times merged:          338
Number of times stopped:         355
Number of times breaked:         1

Total time for CPA algorithm:         8.337s (Max:     8.131s)
  Time for choose from waitlist:      0.022s
  Time for precision adjustment:      4.559s
  Time for transfer relation:         2.842s
  Time for merge operator:            0.690s
  Time for stop operator:             0.038s
  Time for adding to reached set:     0.080s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.037s
  Counterexample analysis:                0.019s (Max:     0.019s, Calls: 1)
    Refinement sat check:                 0.016s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.019s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 67
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 67.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:       8.380s
Time for refinements:                 0.043s
Average time for refinement:          0.043s
Max time for refinement:              0.043s

Code Coverage
-----------------------------
  Function coverage:      0.648
  Visited lines:          4392
  Total lines:            4693
  Line coverage:          0.936
  Visited conditions:     326
  Total conditions:       418
  Condition coverage:     0.780

CPAchecker general statistics
-----------------------------
Number of program locations:     1282
Number of CFA edges:             1731
Number of relevant variables:    423
Number of functions:             108
Number of loops:                 9
Size of reached set:             2895
  Number of reached locations:   928 (72%)
    Avg states per location:     3
    Max states per location:     52 (at node N1684)
  Number of reached functions:   70 (65%)
  Number of partitions:          2895
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.268s
  Time for loading CPAs:          0.501s
  Time for loading parser:        0.558s
  Time for CFA construction:      2.107s
    Time for parsing file(s):     0.638s
    Time for AST to CFA:          0.816s
    Time for CFA sanity check:    0.105s
    Time for post-processing:     0.386s
      Time for var class.:        0.000s
Time for Analysis:                8.380s
CPU time for analysis:           10.460s
Total time for CPAchecker:       11.654s
Total CPU time for CPAchecker:   16.060s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                305MB (   291 MiB) max;    235MB (   224 MiB) avg;    305MB (   291 MiB) peak
Used non-heap memory:             21MB (    20 MiB) max;     19MB (    18 MiB) avg;     21MB (    20 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13788MB ( 13149 MiB) max;  13643MB ( 13011 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
