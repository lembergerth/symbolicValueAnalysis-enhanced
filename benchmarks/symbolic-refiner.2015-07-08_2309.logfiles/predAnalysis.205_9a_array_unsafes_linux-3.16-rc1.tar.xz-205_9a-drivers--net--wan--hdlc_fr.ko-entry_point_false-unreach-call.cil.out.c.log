scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--wan--hdlc_fr.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_238727716_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9250: Function pointer *(hdlc->attach) with type int (*)(struct net_device *, unsigned short, unsigned short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            141941 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            141941 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       141941 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1425203
  BDD entailment checks:           84001
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       561
Number of predicates discovered:          0

Number of path formula cache hits:   5056469 (68%)

Time for post operator:                341.614s
  Time for path formula creation:      327.466s
    Actual computation:                301.060s
Time for strengthen operator:            7.320s
Time for prec operator:                 42.236s
  Time for abstraction:                 33.050s (Max:     2.104s, Count: 141941)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                86.966s
Time for coverage check:                 1.422s
  Time for BDD entailment checks:        0.297s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 225943, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.177s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 40.049s
  Time for transition matches:                        15.731s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     10737598 (count: 10737598, min: 1, max: 1, avg: 1.00) [1 x 10737598]

CPA algorithm statistics
------------------------
Number of iterations:            6123660
Max size of waitlist:            56610
Average size of waitlist:        29011
Number of computed successors:   6934850
Max successors for one state:    2
Number of times merged:          670601
Number of times stopped:         754602
Number of times breaked:         0

Total time for CPA algorithm:       726.015s (Max:   726.015s)
  Time for choose from waitlist:      5.607s
  Time for precision adjustment:     60.530s
  Time for transfer relation:       509.072s
  Time for merge operator:           93.833s
  Time for stop operator:            10.107s
  Time for adding to reached set:    16.659s

Predicate-Abstraction Refiner statistics
----------------------------------------
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.439
  Visited lines:          6569
  Total lines:            7492
  Line coverage:          0.877
  Visited conditions:     338
  Total conditions:       652
  Condition coverage:     0.518

CPAchecker general statistics
-----------------------------
Number of program locations:     1762
Number of CFA edges:             2534
Number of relevant variables:    539
Number of functions:             98
Number of loops:                 18
Size of reached set:             6180249
  Size of final wait list        56589

Time for analysis setup:          4.167s
  Time for loading CPAs:          0.588s
  Time for loading parser:        0.538s
  Time for CFA construction:      2.978s
    Time for parsing file(s):     1.018s
    Time for AST to CFA:          1.231s
    Time for CFA sanity check:    0.089s
    Time for post-processing:     0.493s
      Time for var class.:        0.000s
Time for Analysis:              726.015s
CPU time for analysis:          892.440s
Total time for CPAchecker:      730.188s
Total CPU time for CPAchecker:  900.070s

Time for Garbage Collector:     161.227s (in 54 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6196MB (  5909 MiB) max;   3257MB (  3106 MiB) avg;   7855MB (  7491 MiB) peak
Used non-heap memory:             25MB (    23 MiB) max;     22MB (    21 MiB) avg;     25MB (    24 MiB) peak
Used in PS Old Gen pool:        3893MB (  3712 MiB) max;   1862MB (  1776 MiB) avg;   3947MB (  3764 MiB) peak
Allocated heap memory:          8507MB (  8113 MiB) max;   5717MB (  5452 MiB) avg
Allocated non-heap memory:        47MB (    45 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  13685MB ( 13051 MiB) max;  13624MB ( 12993 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
