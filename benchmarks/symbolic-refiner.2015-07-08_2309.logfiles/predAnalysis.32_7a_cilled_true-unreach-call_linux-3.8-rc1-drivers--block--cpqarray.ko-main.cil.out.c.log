scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--cpqarray.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_786176585_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5614: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5661: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5463: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5372-5373: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5504: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5418: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 6741: Ignoring function call through function pointer *((hba[i])->access.set_intr_mask): (*((hba[i])->access.set_intr_mask))(hba[i], 0UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5614: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 5372-5373: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544UL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8784: Ignoring function call through function pointer *(info_p->access.set_intr_mask): (*(info_p->access.set_intr_mask))(info_p, 0UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8791: Ignoring function call through function pointer *(info_p->access.fifo_full): temp = (*(info_p->access.fifo_full))(info_p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8816: Ignoring function call through function pointer *(info_p->access.submit_command): (*(info_p->access.submit_command))(info_p, c); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9012: Ignoring function call through function pointer *((hba[ctlr])->access.command_completed): tmp = (*((hba[ctlr])->access.command_completed))(hba[ctlr]); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5418: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5661: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6843: Ignoring function call through function pointer *((hba[i])->access.set_intr_mask): (*((hba[i])->access.set_intr_mask))(hba[i], 1UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8931: Ignoring function call through function pointer *(host->access.set_intr_mask): (*(host->access.set_intr_mask))(host, 0UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8935: Ignoring function call through function pointer *(host->access.set_intr_mask): (*(host->access.set_intr_mask))(host, 1UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5847: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

The void * pointer dma_map_single_attrs::ptr to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 5370:	N229 -{tmp___2 = __phys_addr((unsigned long)ptr);}-> N235) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

line 7846: Ignoring function call through function pointer *(h->access.fifo_full): tmp = (*(h->access.fifo_full))(h); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7859: Ignoring function call through function pointer *(h->access.submit_command): (*(h->access.submit_command))(h, c); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Destroying the void * pointer  ida_ctlr_ioctl::p produces garbage! (in the following line(s):
 lines 8221-8222:	N1858 -{error = ida_ctlr_ioctl(host, (int)((((long)drv) - ((long)(&(host->drv)))) / 24L), my_io);}-> N1862) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            946 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            946 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       463 (49%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         28 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      455 (48%)
  Times result was 'false':        137 (14%)
Number of strengthen sat checks:   29
  Times result was 'false':        28 (97%)
Number of coverage checks:         28755
  BDD entailment checks:           531
Number of SMT sat checks:          29
  trivial:                         0
  cached:                          0

Max ABE block size:                       404
Number of predicates discovered:          8
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         3640
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 8.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   3640 (100%)
  Total number of models for allsat:      318
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.70

Number of path formula cache hits:   35044 (21%)

Time for post operator:                 22.812s
  Time for path formula creation:       22.353s
    Actual computation:                 19.548s
Time for strengthen operator:            4.434s
  Time for satisfiability checks:        4.232s
Time for prec operator:                294.117s
  Time for abstraction:                293.911s (Max:    33.206s, Count: 946)
    Boolean abstraction:               260.000s
    Solving time:                      258.358s (Max:    32.536s)
    Model enumeration time:              1.291s
    Time for BDD construction:           0.046s (Max:     0.001s)
Time for merge operator:                 7.931s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):   263.881s

Number of BDD nodes:                               248
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                          44 (count: 2854, min: 0, max: 44, avg: 0.02)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.916s
  Time for transition matches:                         0.400s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       229514 (count: 229514, min: 1, max: 1, avg: 1.00) [1 x 229514]

CPA algorithm statistics
------------------------
Number of iterations:            151439
Max size of waitlist:            832
Average size of waitlist:        102
Number of computed successors:   166229
Max successors for one state:    2
Number of times merged:          14112
Number of times stopped:         14643
Number of times breaked:         1

Total time for CPA algorithm:       335.187s (Max:   310.499s)
  Time for choose from waitlist:      0.225s
  Time for precision adjustment:    294.597s
  Time for transfer relation:        30.041s
  Time for merge operator:            8.371s
  Time for stop operator:             0.379s
  Time for adding to reached set:     0.508s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   4 (count: 1, min: 4, max: 4, avg: 4.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.521s
  Counterexample analysis:                0.130s (Max:     0.130s, Calls: 1)
    Refinement sat check:                 0.112s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.130s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 78655
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 78655.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     335.782s
Time for refinements:                 0.594s
Average time for refinement:          0.594s
Max time for refinement:              0.594s

Code Coverage
-----------------------------
  Function coverage:      0.706
  Visited lines:          6643
  Total lines:            7130
  Line coverage:          0.932
  Visited conditions:     766
  Total conditions:       972
  Condition coverage:     0.788

CPAchecker general statistics
-----------------------------
Number of program locations:     2650
Number of CFA edges:             3771
Number of relevant variables:    762
Number of functions:             163
Number of loops:                 29
Size of reached set:             72796
  Number of reached locations:   2044 (77%)
    Avg states per location:     35
    Max states per location:     1562 (at node N80)
  Number of reached functions:   115 (71%)
  Number of partitions:          72796
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.415s
  Time for loading CPAs:          0.557s
  Time for loading parser:        0.553s
  Time for CFA construction:      3.240s
    Time for parsing file(s):     0.903s
    Time for AST to CFA:          1.278s
    Time for CFA sanity check:    0.116s
    Time for post-processing:     0.721s
      Time for var class.:        0.000s
Time for Analysis:              335.782s
CPU time for analysis:          354.490s
Total time for CPAchecker:      340.202s
Total CPU time for CPAchecker:  362.420s

Time for Garbage Collector:       0.598s (in 4 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               2038MB (  1944 MiB) max;   1046MB (   998 MiB) avg;   2117MB (  2019 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     24MB (    23 MiB) avg;     25MB (    24 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          3611MB (  3444 MiB) max;   3492MB (  3330 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:  14089MB ( 13436 MiB) max;  13799MB ( 13160 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
