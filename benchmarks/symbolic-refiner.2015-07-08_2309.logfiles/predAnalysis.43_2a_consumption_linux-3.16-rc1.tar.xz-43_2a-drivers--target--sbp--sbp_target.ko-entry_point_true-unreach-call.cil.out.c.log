scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--target--sbp--sbp_target.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1177162588_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 13295: Ignoring function call through function pointer *(dev->transport->get_device_type): tmp___6 = (*(dev->transport->get_device_type))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8900: Function pointer kref_sub::release points to fw_card_release, but no corresponding call edge was created during preprocessing. Ignoring function pointer call: (*release)(kref); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8900: Ignoring function call through function pointer *release: (*release)(kref); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            217 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            217 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       110 (51%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         32 (15%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      75 (35%)
  Times result was 'false':        20 (9%)
Number of strengthen sat checks:   21
  Times result was 'false':        20 (95%)
Number of coverage checks:         2482
  BDD entailment checks:           124
Number of SMT sat checks:          21
  trivial:                         0
  cached:                          5

Max ABE block size:                       232
Number of predicates discovered:          3
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         75
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   75 (100%)
  Total number of models for allsat:      59
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.79

Number of path formula cache hits:   2913 (17%)

Time for post operator:                  4.889s
  Time for path formula creation:        4.764s
    Actual computation:                  4.437s
Time for strengthen operator:            0.164s
  Time for satisfiability checks:        0.112s
Time for prec operator:                 45.062s
  Time for abstraction:                 45.026s (Max:    33.134s, Count: 217)
    Boolean abstraction:                42.935s
    Solving time:                       42.831s (Max:    32.753s)
    Model enumeration time:              0.082s
    Time for BDD construction:           0.006s (Max:     0.001s)
Time for merge operator:                 0.759s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):    43.025s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 541, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.197s
Automaton transfers with branching:                0
Automaton transfer successors:                        27228 (count: 27228, min: 1, max: 1, avg: 1.00) [1 x 27228]

CPA algorithm statistics
------------------------
Number of iterations:            15683
Max size of waitlist:            56
Average size of waitlist:        32
Number of computed successors:   17057
Max successors for one state:    2
Number of times merged:          1179
Number of times stopped:         1303
Number of times breaked:         1

Total time for CPA algorithm:        52.356s (Max:    46.910s)
  Time for choose from waitlist:      0.078s
  Time for precision adjustment:     45.224s
  Time for transfer relation:         5.747s
  Time for merge operator:            0.838s
  Time for stop operator:             0.091s
  Time for adding to reached set:     0.124s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   3 (count: 1, min: 3, max: 3, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.266s
  Counterexample analysis:                0.159s (Max:     0.159s, Calls: 1)
    Refinement sat check:                 0.136s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.159s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 8405
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 8405.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      52.654s
Time for refinements:                 0.297s
Average time for refinement:          0.297s
Max time for refinement:              0.297s

Code Coverage
-----------------------------
  Function coverage:      0.625
  Visited lines:          9755
  Total lines:            11398
  Line coverage:          0.856
  Visited conditions:     537
  Total conditions:       890
  Condition coverage:     0.603

CPAchecker general statistics
-----------------------------
Number of program locations:     2805
Number of CFA edges:             4142
Number of relevant variables:    897
Number of functions:             176
Number of loops:                 16
Size of reached set:             7331
  Number of reached locations:   1553 (55%)
    Avg states per location:     4
    Max states per location:     161 (at node N283)
  Number of reached functions:   110 (63%)
  Number of partitions:          7331
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.106s
  Time for loading CPAs:          0.551s
  Time for loading parser:        0.645s
  Time for CFA construction:      3.844s
    Time for parsing file(s):     1.464s
    Time for AST to CFA:          1.177s
    Time for CFA sanity check:    0.162s
    Time for post-processing:     0.785s
      Time for var class.:        0.000s
Time for Analysis:               52.654s
CPU time for analysis:           60.090s
Total time for CPAchecker:       57.765s
Total CPU time for CPAchecker:   69.390s

Time for Garbage Collector:       0.139s (in 1 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                529MB (   504 MiB) max;    287MB (   273 MiB) avg;    583MB (   556 MiB) peak
Used non-heap memory:             24MB (    23 MiB) max;     23MB (    21 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        26MB (    25 MiB) max;     26MB (    24 MiB) avg
Total process virtual memory:  13954MB ( 13307 MiB) max;  13806MB ( 13167 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
