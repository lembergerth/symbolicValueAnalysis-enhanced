scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.4-simple/ALL.prp ../svcomp15/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--input--touchscreen--wacom_w8001.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1570693949_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 2514: Function pointer *__cil_tmp12 with type int (*)(struct serio *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 2514: Ignoring call via function pointer serio_write::__cil_tmp12 for which no suitable target was found in line: tmp = (*__cil_tmp12)(serio, __cil_tmp14); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2514: Ignoring function call through function pointer *__cil_tmp12: tmp = (*__cil_tmp12)(serio, __cil_tmp14); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            8 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       3 (38%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5 (63%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   2
  Times result was 'false':        1 (50%)
Number of coverage checks:         244
  BDD entailment checks:           4
Number of SMT sat checks:          2
  trivial:                         0
  cached:                          0

Max ABE block size:                       197
Number of predicates discovered:          3
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         5
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   5 (100%)
  Total number of models for allsat:      5
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Number of path formula cache hits:   519 (36%)

Time for post operator:                  0.770s
  Time for path formula creation:        0.741s
    Actual computation:                  0.688s
Time for strengthen operator:            0.013s
  Time for satisfiability checks:        0.005s
Time for prec operator:                  7.390s
  Time for abstraction:                  7.383s (Max:     6.587s, Count: 8)
    Boolean abstraction:                 6.583s
    Solving time:                        6.524s (Max:     5.843s)
    Model enumeration time:              0.057s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.462s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     6.586s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 33, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.107s
Automaton transfers with branching:                0
Automaton transfer successors:                         5919 (count: 5919, min: 1, max: 1, avg: 1.00) [1 x 5919]

CPA algorithm statistics
------------------------
Number of iterations:            1254
Max size of waitlist:            20
Average size of waitlist:        11
Number of computed successors:   1384
Max successors for one state:    2
Number of times merged:          120
Number of times stopped:         124
Number of times breaked:         1

Total time for CPA algorithm:         9.016s (Max:     8.160s)
  Time for choose from waitlist:      0.014s
  Time for precision adjustment:      7.417s
  Time for transfer relation:         1.022s
  Time for merge operator:            0.477s
  Time for stop operator:             0.021s
  Time for adding to reached set:     0.021s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.030s
  Counterexample analysis:                0.010s (Max:     0.010s, Calls: 1)
    Refinement sat check:                 0.008s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.010s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 440
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 440.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:       9.056s
Time for refinements:                 0.039s
Average time for refinement:          0.039s
Max time for refinement:              0.039s

Code Coverage
-----------------------------
  Function coverage:      0.763
  Visited lines:          4252
  Total lines:            4302
  Line coverage:          0.988
  Visited conditions:     144
  Total conditions:       152
  Condition coverage:     0.947

CPAchecker general statistics
-----------------------------
Number of program locations:     619
Number of CFA edges:             807
Number of relevant variables:    926
Number of functions:             38
Number of loops:                 2
Size of reached set:             822
  Number of reached locations:   560 (90%)
    Avg states per location:     1
    Max states per location:     12 (at node N45)
  Number of reached functions:   29 (76%)
  Number of partitions:          822
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.217s
  Time for loading CPAs:          0.547s
  Time for loading parser:        0.537s
  Time for CFA construction:      2.054s
    Time for parsing file(s):     0.745s
    Time for AST to CFA:          0.646s
    Time for CFA sanity check:    0.092s
    Time for post-processing:     0.411s
      Time for var class.:        0.000s
Time for Analysis:                9.056s
CPU time for analysis:           10.200s
Total time for CPAchecker:       12.278s
Total CPU time for CPAchecker:   15.840s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                284MB (   271 MiB) max;    233MB (   222 MiB) avg;    295MB (   281 MiB) peak
Used non-heap memory:             21MB (    20 MiB) max;     19MB (    18 MiB) avg;     21MB (    20 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  14192MB ( 13535 MiB) max;  13850MB ( 13209 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
