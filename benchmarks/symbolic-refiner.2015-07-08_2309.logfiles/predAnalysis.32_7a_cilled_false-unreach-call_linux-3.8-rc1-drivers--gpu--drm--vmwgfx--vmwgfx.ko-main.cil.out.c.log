scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_false-unreach-call_linux-3.8-rc1-drivers--gpu--drm--vmwgfx--vmwgfx.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_935268161_tempdir
line 9753: Dereferencing of non-pointer type vmw_cmd_func  in expression *(vmw_cmd_funcs[cmd_id]) (ASTConverter.convert, WARNING)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 24249: Ignoring function call through function pointer *(res->func->unbind): (*(res->func->unbind))(res, 0, &val_buf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 24270: Ignoring function call through function pointer *(res->hw_destroy): (*(res->hw_destroy))(res); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from vmw_fence_obj_unreference to kref_put (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Extern function ns_to_timespec(0LL) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

line 35547: Ignoring function call through function pointer *(action->seq_passed): (*(action->seq_passed))(action); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from vmw_fences_perform_actions to vmw_pm_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_execbuf_fence_commands to vmw_fifo_send_fence (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_seqno_passed to vmw_update_seqno (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_sou_crtc_destroy to vmw_sou_destroy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_framebuffer_surface_destroy to vmw_surface_unreference (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 35162: Ignoring function call through function pointer *(fence->destroy): (*(fence->destroy))(fence); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from vmw_fence_obj_destroy_locked to vmw_fence_obj_destroy_locked (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_sou_connector_destroy to vmw_sou_destroy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_fence_obj_destroy_locked to vmw_sou_encoder_destroy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_ldu_destroy to vmw_display_unit_cleanup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_fence_obj_destroy_locked to vmw_resource_release (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_user_surface_base_release to vmw_resource_unreference (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_user_context_base_release to vmw_resource_unreference (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_user_stream_base_release to vmw_resource_unreference (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_resource_release to vmw_sou_encoder_destroy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_resource_release to vmw_resource_release (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 24279: Ignoring function call through function pointer *(res->res_free): (*(res->res_free))(res); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from vmw_fence_obj_destroy_locked to vmw_sync_obj_unref (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_fifo_init to vmw_fifo_send_fence (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_fence_obj_signaled to vmw_fences_update (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_fence_fifo_down to vmw_fences_perform_actions (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_fence_fifo_down to kref_put (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_hw_context_destroy to vmw_execbuf_release_pinned_bo (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_resource_unreference to kref_put (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_event_fence_action_cleanup to vmw_fence_obj_unreference (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_user_fence_base_release to vmw_fence_obj_unreference (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 30843: Ignoring function call through function pointer *(ld->fb->unpin): (*(ld->fb->unpin))(ld->fb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from vmw_ldu_add_active to vmw_ldu_crtc_set_config (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 30850: Ignoring function call through function pointer *(vfb->pin): (*(vfb->pin))(vfb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 30789: Ignoring function call through function pointer *(ld->fb->unpin): (*(ld->fb->unpin))(ld->fb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from vmw_ldu_del_active to vmw_ldu_crtc_set_config (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_sou_destroy to vmw_display_unit_cleanup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_ldu_encoder_destroy to vmw_ldu_destroy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_fence_obj_destroy_locked to vmw_ldu_crtc_destroy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_ldu_connector_destroy to vmw_ldu_destroy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from vmw_resource_release to vmw_ldu_crtc_destroy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 24514: Ignoring function call through function pointer *(converter->base_obj_to_res): res = (*(converter->base_obj_to_res))(base); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from vmw_display_unit_cleanup to vmw_surface_unreference (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1101 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1101 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1 (0%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         56 (5%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1044 (95%)
  Times result was 'false':        797 (72%)
Number of strengthen sat checks:   1952
  Times result was 'false':        1949 (100%)
Number of coverage checks:         13641
  BDD entailment checks:           167
Number of SMT sat checks:          1952
  trivial:                         0
  cached:                          106

Max ABE block size:                       1401
Number of predicates discovered:          33
Number of abstraction locations:          3
Max number of predicates per location:    32
Avg number of predicates per location:    31
Total predicates per abstraction:         31516
Max number of predicates per abstraction: 32
Avg number of predicates per abstraction: 30.19
Number of irrelevant predicates:          193 (1%)
Number of preds handled by boolean abs:   31323 (99%)
  Total number of models for allsat:      273
  Max number of models for allsat:        5
  Avg number of models for allsat:        0.26

Number of path formula cache hits:   13613 (9%)

Time for post operator:                 39.720s
  Time for path formula creation:       39.313s
    Actual computation:                 32.997s
Time for strengthen operator:           94.115s
  Time for satisfiability checks:       93.922s
Time for prec operator:                663.387s
  Time for abstraction:                663.215s (Max:   113.444s, Count: 1101)
    Boolean abstraction:               608.621s
    Solving time:                      598.591s (Max:   112.671s)
    Model enumeration time:              9.322s
    Time for BDD construction:           0.116s (Max:     0.012s)
Time for merge operator:                43.144s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):   701.819s

Number of BDD nodes:                               2692
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                        1122 (count: 4810, min: 0, max: 430, avg: 0.23)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.142s
  Time for transition matches:                         0.431s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                       212613 (count: 212613, min: 1, max: 1, avg: 1.00) [1 x 212613]

CPA algorithm statistics
------------------------
Number of iterations:            139051
Max size of waitlist:            207
Average size of waitlist:        91
Number of computed successors:   147245
Max successors for one state:    2
Number of times merged:          6737
Number of times stopped:         6903
Number of times breaked:         3

Total time for CPA algorithm:       851.816s (Max:   337.708s)
  Time for choose from waitlist:      0.190s
  Time for precision adjustment:    663.871s
  Time for transfer relation:       142.439s
  Time for merge operator:           43.425s
  Time for stop operator:             0.344s
  Time for adding to reached set:     0.532s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  35 (count: 3, min: 2, max: 19, avg: 11.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.638s
  Counterexample analysis:                8.285s (Max:     3.715s, Calls: 3)
    Refinement sat check:                 7.054s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   8.285s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.003s
  ARG update:                                          0.271s

Length of refined path (in blocks):                       4 (count: 2, min: 2, max: 2, avg: 2.00)
Number of affected states:                                2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 2, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 33679
Max. size of reached set after ref.:  7
Avg. size of reached set before ref.: 17135.00
Avg. size of reached set after ref.:  5.00

Total time for CEGAR algorithm:     860.536s
Time for refinements:                 8.707s
Average time for refinement:          2.902s
Max time for refinement:              3.969s

Code Coverage
-----------------------------
  Function coverage:      0.255
  Visited lines:          11748
  Total lines:            23800
  Line coverage:          0.494
  Visited conditions:     1070
  Total conditions:       4876
  Condition coverage:     0.219

CPAchecker general statistics
-----------------------------
Number of program locations:     14843
Number of CFA edges:             22157
Number of relevant variables:    4529
Number of functions:             946
Number of loops:                 104
Size of reached set:             88155
  Number of reached locations:   3326 (22%)
    Avg states per location:     26
    Max states per location:     1923 (at node N19009)
  Number of reached functions:   241 (25%)
  Number of partitions:          87723
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N12122 (before line 29529), Function vmw_fallback_wait called from node N11780, stack depth 16 [439ae31a], stack [main, ldv_main_exported_5, vmw_sou_encoder_destroy, vmw_sou_destroy, vmw_display_unit_cleanup, vmw_surface_unreference, vmw_resource_unreference, kref_put, kref_sub, vmw_resource_release, vmw_pm_complete, vmw_3d_resource_inc, vmw_request_device, vmw_fifo_init, vmw_fifo_send_fence, vmw_fallback_wait], ABS443, Init])
  Number of target states:       0
  Size of final wait list        77

Time for analysis setup:         12.656s
  Time for loading CPAs:          0.922s
  Time for loading parser:        0.535s
  Time for CFA construction:     11.123s
    Time for parsing file(s):     2.478s
    Time for AST to CFA:          5.381s
    Time for CFA sanity check:    0.273s
    Time for post-processing:     2.747s
      Time for var class.:        0.000s
Time for Analysis:              860.536s
CPU time for analysis:          876.270s
Total time for CPAchecker:      873.198s
Total CPU time for CPAchecker:  900.600s

Time for Garbage Collector:       2.149s (in 18 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               2383MB (  2273 MiB) max;    585MB (   558 MiB) avg;   2517MB (  2400 MiB) peak
Used non-heap memory:             27MB (    26 MiB) max;     26MB (    25 MiB) avg;     27MB (    26 MiB) peak
Used in PS Old Gen pool:         208MB (   198 MiB) max;     78MB (    74 MiB) avg;    208MB (   198 MiB) peak
Allocated heap memory:          3737MB (  3564 MiB) max;   2488MB (  2373 MiB) avg
Allocated non-heap memory:        29MB (    27 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:  14396MB ( 13729 MiB) max;  14132MB ( 13477 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
