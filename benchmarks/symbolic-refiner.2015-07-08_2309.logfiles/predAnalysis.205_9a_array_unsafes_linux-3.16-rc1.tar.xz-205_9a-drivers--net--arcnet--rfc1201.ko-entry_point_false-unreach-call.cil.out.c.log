scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--arcnet--rfc1201.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-404017442_tempdir
line 6917: Function pointer *(lp->hw.copy_to_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6919: Function pointer *(lp->hw.copy_to_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6909: Function pointer *(lp->hw.copy_to_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6741-6742: Function pointer *(lp->hw.copy_from_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6480-6481: Function pointer *(lp->hw.copy_from_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6409: Function pointer *(lp->hw.copy_from_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 6409: Ignoring function call through function pointer *(lp->hw.copy_from_card): (*(lp->hw.copy_from_card))(dev, bufnum, 512 - length, (void *)soft, 16); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 6741-6742: Ignoring function call through function pointer *(lp->hw.copy_from_card): (*(lp->hw.copy_from_card))(dev, bufnum, ofs + 4, __CPAchecker_TMP_41 + __CPAchecker_TMP_42, length + -4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 6480-6481: Ignoring function call through function pointer *(lp->hw.copy_from_card): (*(lp->hw.copy_from_card))(dev, bufnum, (int)(((unsigned int)ofs) + 16U), ((void *)(&(pkt->soft.raw))) + 16U, (int)(((unsigned int)length) - 16U)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6909: Ignoring function call through function pointer *(lp->hw.copy_to_card): (*(lp->hw.copy_to_card))(dev, bufnum, ofs + -4, (void *)(&excsoft), 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6917: Ignoring function call through function pointer *(lp->hw.copy_to_card): (*(lp->hw.copy_to_card))(dev, bufnum, 0, (void *)hard, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6919: Ignoring function call through function pointer *(lp->hw.copy_to_card): (*(lp->hw.copy_to_card))(dev, bufnum, ofs, (void *)soft, softlen); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            60 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            60 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       36 (60%)
  Times precision was {false}:     13 (22%)
  Times result was cached:         5 (8%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6 (10%)
  Times result was 'false':        7 (12%)
Number of strengthen sat checks:   9
  Times result was 'false':        4 (44%)
Number of coverage checks:         995
  BDD entailment checks:           27
Number of SMT sat checks:          9
  trivial:                         0
  cached:                          2

Max ABE block size:                       84
Number of predicates discovered:          4
Number of abstraction locations:          4
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         23
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 1.21
Number of irrelevant predicates:          13 (57%)
Number of preds handled by boolean abs:   10 (43%)
  Total number of models for allsat:      10
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.67

Number of path formula cache hits:   1878 (34%)

Time for post operator:                  1.220s
  Time for path formula creation:        1.176s
    Actual computation:                  1.211s
Time for strengthen operator:            0.972s
  Time for satisfiability checks:        0.949s
Time for prec operator:                  1.627s
  Time for abstraction:                  1.619s (Max:     0.440s, Count: 60)
    Boolean abstraction:                 0.779s
    Solving time:                        1.270s (Max:     0.322s)
    Model enumeration time:              0.120s
    Time for BDD construction:           0.009s (Max:     0.008s)
Time for merge operator:                 0.420s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     2.339s

Number of BDD nodes:                               207
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 146, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.091s
Automaton transfers with branching:                0
Automaton transfer successors:                         8003 (count: 8003, min: 1, max: 1, avg: 1.00) [1 x 8003]

CPA algorithm statistics
------------------------
Number of iterations:            3549
Max size of waitlist:            26
Average size of waitlist:        12
Number of computed successors:   4099
Max successors for one state:    2
Number of times merged:          484
Number of times stopped:         506
Number of times breaked:         5

Total time for CPA algorithm:         4.871s (Max:     2.359s)
  Time for choose from waitlist:      0.034s
  Time for precision adjustment:      1.686s
  Time for transfer relation:         2.486s
  Time for merge operator:            0.465s
  Time for stop operator:             0.046s
  Time for adding to reached set:     0.072s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  17 (count: 5, min: 2, max: 5, avg: 3.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  13.919s
  Counterexample analysis:               13.042s (Max:    12.489s, Calls: 5)
    Refinement sat check:                12.310s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.835s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                  13.042s
  Extracting precise counterexample:                   0.835s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.001s
  Precision update:                                    0.003s
  ARG update:                                          0.025s

Length of refined path (in blocks):                       6 (count: 3, min: 2, max: 2, avg: 2.00)
Number of affected states:                                3 (count: 3, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         3 (count: 3, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 2 (count: 3, min: 0, max: 1, avg: 0.67)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 3, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 1581
Max. size of reached set after ref.:  37
Avg. size of reached set before ref.: 739.80
Avg. size of reached set after ref.:  28.00

Total time for CEGAR algorithm:      18.821s
Time for refinements:                13.949s
Average time for refinement:          2.789s
Max time for refinement:             13.338s

Code Coverage
-----------------------------
  Function coverage:      0.583
  Visited lines:          6037
  Total lines:            6118
  Line coverage:          0.987
  Visited conditions:     184
  Total conditions:       198
  Condition coverage:     0.929

CPAchecker general statistics
-----------------------------
Number of program locations:     604
Number of CFA edges:             758
Number of relevant variables:    200
Number of functions:             48
Number of loops:                 5
Size of reached set:             1581
  Number of reached locations:   496 (82%)
    Avg states per location:     3
    Max states per location:     12 (at node N78)
  Number of reached functions:   28 (58%)
  Number of partitions:          1579
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N660 (before line 7120), Function main called from node N621, stack depth 1 [9b962c9], stack [main], Init])
  Number of target states:       1
  Size of final wait list        12

Time for analysis setup:          3.142s
  Time for loading CPAs:          0.510s
  Time for loading parser:        0.511s
  Time for CFA construction:      2.053s
    Time for parsing file(s):     0.861s
    Time for AST to CFA:          0.608s
    Time for CFA sanity check:    0.084s
    Time for post-processing:     0.282s
      Time for var class.:        0.000s
Time for Analysis:               18.821s
CPU time for analysis:           21.050s
Total time for CPAchecker:       21.968s
Total CPU time for CPAchecker:   26.580s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                348MB (   332 MiB) max;    277MB (   264 MiB) avg;    348MB (   332 MiB) peak
Used non-heap memory:             22MB (    21 MiB) max;     20MB (    19 MiB) avg;     22MB (    21 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13756MB ( 13119 MiB) max;  13654MB ( 13022 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 6132) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
