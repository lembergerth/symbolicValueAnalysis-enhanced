scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/linux-3.8-rc1-32_7a-drivers--usb--serial--usbserial.ko-ldv_main0_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_589722987_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6112: Function pointer *(port->serial->type->set_termios) with type void (*)(struct tty_struct *, struct usb_serial_port *, struct ktermios *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 8031: Ignoring function call through function pointer *(serial->type->disconnect): (*(serial->type->disconnect))(serial); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 10431-10432: Ignoring function call through function pointer *(port->serial->type->prepare_write_buffer): count = (*(port->serial->type->prepare_write_buffer))(port, urb->transfer_buffer, __CPAchecker_TMP_0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5391: Ignoring function call through function pointer *(serial->type->release): (*(serial->type->release))(serial); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from destroy_serial to serial_cleanup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from destroy_serial to destroy_serial (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6003: Ignoring function call through function pointer *(port->serial->type->unthrottle): (*(port->serial->type->unthrottle))(tty); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from serial_unthrottle to serial_cleanup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_unthrottle to destroy_serial (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_unthrottle to serial_unthrottle (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5961: Ignoring function call through function pointer *(port->serial->type->throttle): (*(port->serial->type->throttle))(tty); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from serial_throttle to serial_cleanup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_throttle to destroy_serial (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_throttle to serial_unthrottle (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_throttle to serial_throttle (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_throttle to usb_serial_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10996: Ignoring function call through function pointer *(port->serial->type->process_read_urb): (*(port->serial->type->process_read_urb))(urb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from usb_serial_generic_read_bulk_callback to serial_cleanup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_serial_generic_read_bulk_callback to destroy_serial (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_serial_generic_read_bulk_callback to serial_unthrottle (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_serial_generic_read_bulk_callback to serial_throttle (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_serial_generic_read_bulk_callback to usb_serial_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_serial_generic_read_bulk_callback to usb_serial_generic_read_bulk_callback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5633: Ignoring function call through function pointer *(drv->close): (*(drv->close))(port); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from serial_port_shutdown to serial_cleanup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_port_shutdown to destroy_serial (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_port_shutdown to serial_unthrottle (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_port_shutdown to serial_throttle (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_port_shutdown to usb_serial_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_port_shutdown to usb_serial_generic_read_bulk_callback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_port_shutdown to serial_port_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_serial_generic_read_bulk_callback to serial_port_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_unthrottle to usb_serial_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_throttle to usb_serial_generic_read_bulk_callback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_throttle to serial_port_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_unthrottle to serial_throttle (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_unthrottle to usb_serial_generic_read_bulk_callback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_unthrottle to serial_port_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from destroy_serial to usb_serial_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from kref_sub to destroy_serial (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from destroy_serial to serial_unthrottle (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from destroy_serial to serial_throttle (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from destroy_serial to usb_serial_generic_read_bulk_callback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from destroy_serial to serial_port_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_serial_disconnect to usb_serial_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            19935 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            19935 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       4 (0%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         16990 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2941 (15%)
  Times result was 'false':        3 (0%)
Number of strengthen sat checks:   861
  Times result was 'false':        860 (100%)
Number of coverage checks:         107653
  BDD entailment checks:           13167
Number of SMT sat checks:          861
  trivial:                         0
  cached:                          455

Max ABE block size:                       140
Number of predicates discovered:          8
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         23528
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 8.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   23528 (100%)
  Total number of models for allsat:      2938
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Number of path formula cache hits:   595316 (77%)

Time for post operator:                 31.749s
  Time for path formula creation:       29.872s
    Actual computation:                 23.070s
Time for strengthen operator:           19.214s
  Time for satisfiability checks:       18.248s
Time for prec operator:                788.788s
  Time for abstraction:                787.415s (Max:    77.599s, Count: 19935)
    Boolean abstraction:               691.251s
    Solving time:                      686.753s (Max:    77.896s)
    Model enumeration time:              3.990s
    Time for BDD construction:           0.238s (Max:     0.001s)
Time for merge operator:                11.289s
Time for coverage check:                 0.241s
  Time for BDD entailment checks:        0.104s
Total time for SMT solver (w/o itp):   708.985s

Number of BDD nodes:                               254
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                        2666 (count: 24970, min: 0, max: 194, avg: 0.11)
Time for BDD node cleanup:                             0.045s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.305s
  Time for transition matches:                         2.103s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                       995817 (count: 995817, min: 1, max: 1, avg: 1.00) [1 x 995817]

CPA algorithm statistics
------------------------
Number of iterations:            662085
Max size of waitlist:            1178
Average size of waitlist:        451
Number of computed successors:   722906
Max successors for one state:    2
Number of times merged:          47243
Number of times stopped:         60410
Number of times breaked:         1

Total time for CPA algorithm:       875.202s (Max:   874.187s)
  Time for choose from waitlist:      0.824s
  Time for precision adjustment:    791.169s
  Time for transfer relation:        62.813s
  Time for merge operator:           12.120s
  Time for stop operator:             1.472s
  Time for adding to reached set:     1.746s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   4 (count: 1, min: 4, max: 4, avg: 4.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.230s
  Counterexample analysis:                0.206s (Max:     0.206s, Calls: 1)
    Refinement sat check:                 0.180s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.206s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 232
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 232.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     875.440s
Time for refinements:                 0.238s
Average time for refinement:          0.238s
Max time for refinement:              0.238s

Code Coverage
-----------------------------
  Function coverage:      0.357
  Visited lines:          5137
  Total lines:            7537
  Line coverage:          0.682
  Visited conditions:     468
  Total conditions:       1424
  Condition coverage:     0.329

CPAchecker general statistics
-----------------------------
Number of program locations:     3839
Number of CFA edges:             5673
Number of relevant variables:    1029
Number of functions:             224
Number of loops:                 44
Size of reached set:             662262
  Number of reached locations:   1270 (33%)
    Avg states per location:     521
    Max states per location:     13509 (at node N3205)
  Number of reached functions:   80 (36%)
  Number of partitions:          662262
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        397

Time for analysis setup:          4.776s
  Time for loading CPAs:          0.652s
  Time for loading parser:        0.651s
  Time for CFA construction:      3.404s
    Time for parsing file(s):     0.972s
    Time for AST to CFA:          1.195s
    Time for CFA sanity check:    0.133s
    Time for post-processing:     0.888s
      Time for var class.:        0.000s
Time for Analysis:              875.440s
CPU time for analysis:          891.710s
Total time for CPAchecker:      880.222s
Total CPU time for CPAchecker:  900.440s

Time for Garbage Collector:       4.443s (in 24 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                919MB (   876 MiB) max;    578MB (   552 MiB) avg;   1206MB (  1150 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     24MB (    23 MiB) avg;     25MB (    24 MiB) peak
Used in PS Old Gen pool:         548MB (   522 MiB) max;    274MB (   262 MiB) avg;    565MB (   539 MiB) peak
Allocated heap memory:          2047MB (  1952 MiB) max;   1931MB (  1842 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     27MB (    25 MiB) avg
Total process virtual memory:  13958MB ( 13311 MiB) max;  13824MB ( 13183 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
