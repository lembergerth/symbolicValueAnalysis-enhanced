scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -timelimit 900s -stats -spec ../svcomp15/floats-cbmc-regression/ALL.prp ../svcomp15/floats-cbmc-regression/float3_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1808129558_tempdir
Error: Parsing failed (line 25: Unrecognized C code (Void function f1 used in assignment): __CPAchecker_TMP_1 = f1(); (line was originally (void) f1();)) (CFACreator.createCFA, SEVERE)

CPAchecker general statistics
-----------------------------

Time for analysis setup:          1.010s
  Time for loading CPAs:          0.000s
  Time for loading parser:        0.568s
  Time for CFA construction:      0.412s
    Time for parsing file(s):     0.239s
    Time for AST to CFA:          0.112s
    Time for CFA sanity check:    0.003s
    Time for post-processing:     0.049s
      Time for var class.:        0.000s
Time for Analysis:                0.000s
CPU time for analysis:            0.000s
Total time for CPAchecker:        1.014s
Total CPU time for CPAchecker:    0.650s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                 95MB (    90 MiB) max;     70MB (    67 MiB) avg;     95MB (    90 MiB) peak
Used non-heap memory:             12MB (    12 MiB) max;     10MB (     9 MiB) avg;     13MB (    13 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

More details about the verification run can be found in the directory "./output".
