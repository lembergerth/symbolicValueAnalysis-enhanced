scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.12-rc1/ALL.prp ../svcomp15/ldv-linux-3.12-rc1/linux-3.12-rc1.tar.xz-144_2a-drivers--staging--gdm72xx--gdmwm.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1105964290_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 10529: Function pointer *rcv_cb with type void (*)(struct net_device *, u16 , void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

lines 8551-8552: Ignoring function call through function pointer *(nic->phy_dev->send_func): (*(nic->phy_dev->send_func))(nic->phy_dev->priv_dev, (void *)pkt, 12, (void (*)(void *))0, (void *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15335: Ignoring call via function pointer completeFnInt for which no suitable target was found in line: (*completeFnInt)(usb_urb); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15335: Ignoring function call through function pointer *completeFnInt: (*completeFnInt)(usb_urb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10529: Ignoring call via function pointer rcv_cb for which no suitable target was found in line: (*rcv_cb)(dev, __CPAchecker_TMP_2, msg, (int)mlen); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10529: Ignoring function call through function pointer *rcv_cb: (*rcv_cb)(dev, __CPAchecker_TMP_2, msg, (int)mlen); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12888: Ignoring function call through function pointer *(t->callback): (*(t->callback))(t->cb_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from __gdm_usb_send_complete to gdm_usb_send_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ldv_usb_submit_urb_26 to ldv_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from do_pm_control to __gdm_usb_send_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ldv_usb_submit_urb_21 to ldv_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13272: Ignoring function call through function pointer *(r->callback): (*(r->callback))(r->cb_data, __CPAchecker_TMP_3, __CPAchecker_TMP_4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 8417-8418: Ignoring function call through function pointer *(nic->phy_dev->send_func): ret = (*(nic->phy_dev->send_func))(nic->phy_dev->priv_dev, __CPAchecker_TMP_0, __CPAchecker_TMP_1, &tx_complete, (void *)nic); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from gdm_wimax_send_tx to gdm_usb_send (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9472: Ignoring function call through function pointer *(nic->phy_dev->rcv_func): (*(nic->phy_dev->rcv_func))(nic->phy_dev->priv_dev, &rx_complete, (void *)nic); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ldv_usb_submit_urb_23 to ldv_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 9502-9503: Ignoring function call through function pointer *(nic->phy_dev->rcv_func): (*(nic->phy_dev->rcv_func))(nic->phy_dev->priv_dev, &prepare_rx_complete, (void *)nic); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9491: Ignoring function call through function pointer *(nic->phy_dev->rcv_func): (*(nic->phy_dev->rcv_func))(nic->phy_dev->priv_dev, &rx_complete, (void *)nic); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from gdm_usb_send_complete to __gdm_usb_send_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __gdm_usb_send_complete to do_pm_control (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15344: Ignoring call via function pointer completeFnBulk for which no suitable target was found in line: (*completeFnBulk)(usb_urb); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15344: Ignoring function call through function pointer *completeFnBulk: (*completeFnBulk)(usb_urb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2993 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2993 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       2 (0%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         1866 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1125 (38%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   26
  Times result was 'false':        25 (96%)
Number of coverage checks:         41464
  BDD entailment checks:           1582
Number of SMT sat checks:          26
  trivial:                         0
  cached:                          0

Max ABE block size:                       251
Number of predicates discovered:          7
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         7875
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 7.00
Number of irrelevant predicates:          850 (11%)
Number of preds handled by boolean abs:   7025 (89%)
  Total number of models for allsat:      1418
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.26

Number of path formula cache hits:   890 (0%)

Time for post operator:                 47.257s
  Time for path formula creation:       46.595s
    Actual computation:                 40.458s
Time for strengthen operator:            1.668s
  Time for satisfiability checks:        1.290s
Time for prec operator:                796.483s
  Time for abstraction:                796.043s (Max:    52.422s, Count: 2993)
    Boolean abstraction:               743.966s
    Solving time:                      580.826s (Max:    40.622s)
    Model enumeration time:            163.199s
    Time for BDD construction:           0.147s (Max:     0.010s)
Time for merge operator:                17.812s
Time for coverage check:                 0.067s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):   745.316s

Number of BDD nodes:                               239
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                        1208 (count: 6123, min: 0, max: 125, avg: 0.20)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.687s
  Time for transition matches:                         0.731s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       401678 (count: 401678, min: 1, max: 1, avg: 1.00) [1 x 401678]

CPA algorithm statistics
------------------------
Number of iterations:            276962
Max size of waitlist:            1035
Average size of waitlist:        648
Number of computed successors:   299548
Max successors for one state:    2
Number of times merged:          19941
Number of times stopped:         21523
Number of times breaked:         1

Total time for CPA algorithm:       873.354s (Max:   871.171s)
  Time for choose from waitlist:      0.301s
  Time for precision adjustment:    797.450s
  Time for transfer relation:        53.707s
  Time for merge operator:           18.431s
  Time for stop operator:             0.596s
  Time for adding to reached set:     0.944s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.255s
  Counterexample analysis:                0.234s (Max:     0.234s, Calls: 1)
    Refinement sat check:                 0.198s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.234s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 781
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 781.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     873.621s
Time for refinements:                 0.267s
Average time for refinement:          0.267s
Max time for refinement:              0.267s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          8762
  Total lines:            10162
  Line coverage:          0.862
  Visited conditions:     418
  Total conditions:       836
  Condition coverage:     0.500

CPAchecker general statistics
-----------------------------
Number of program locations:     2873
Number of CFA edges:             4050
Number of relevant variables:    1066
Number of functions:             202
Number of loops:                 41
Size of reached set:             277245
  Number of reached locations:   1554 (54%)
    Avg states per location:     178
    Max states per location:     3778 (at node N89)
  Number of reached functions:   131 (65%)
  Number of partitions:          277245
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1027

Time for analysis setup:          6.198s
  Time for loading CPAs:          0.629s
  Time for loading parser:        0.668s
  Time for CFA construction:      4.816s
    Time for parsing file(s):     1.466s
    Time for AST to CFA:          2.141s
    Time for CFA sanity check:    0.234s
    Time for post-processing:     0.765s
      Time for var class.:        0.000s
Time for Analysis:              873.621s
CPU time for analysis:          888.940s
Total time for CPAchecker:      879.825s
Total CPU time for CPAchecker:  900.530s

Time for Garbage Collector:       3.242s (in 23 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                685MB (   654 MiB) max;    424MB (   404 MiB) avg;    962MB (   917 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     25MB (    24 MiB) avg;     26MB (    25 MiB) peak
Used in PS Old Gen pool:         330MB (   315 MiB) max;    153MB (   146 MiB) avg;    330MB (   315 MiB) peak
Allocated heap memory:          2028MB (  1935 MiB) max;   1933MB (  1844 MiB) avg
Allocated non-heap memory:        28MB (    26 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:  13880MB ( 13237 MiB) max;  13782MB ( 13143 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
