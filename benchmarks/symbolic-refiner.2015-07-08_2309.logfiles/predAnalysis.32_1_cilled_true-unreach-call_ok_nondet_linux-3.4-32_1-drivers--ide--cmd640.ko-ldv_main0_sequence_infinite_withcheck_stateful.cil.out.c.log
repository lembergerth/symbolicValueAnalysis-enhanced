scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.4-simple/ALL.prp ../svcomp15/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--ide--cmd640.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1631037521_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4957: Function pointer *__cil_tmp2 with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 4957: Ignoring call via function pointer slow_down_io::__cil_tmp2 for which no suitable target was found in line: (*__cil_tmp2)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4957: Ignoring function call through function pointer *__cil_tmp2: (*__cil_tmp2)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5529: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: b = (*__get_cmd640_reg)(reg); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5529: Ignoring function call through function pointer *__get_cmd640_reg: b = (*__get_cmd640_reg)(reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6555: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: tmp___9 = (*__get_cmd640_reg)(__cil_tmp45); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6555: Ignoring function call through function pointer *__get_cmd640_reg: tmp___9 = (*__get_cmd640_reg)(__cil_tmp45); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6575: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp53, setup_count); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6575: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp53, setup_count); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6587: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp57, tmp___10); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6587: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp57, tmp___10); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6123: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: b = (*__get_cmd640_reg)(__cil_tmp13); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6123: Ignoring function call through function pointer *__get_cmd640_reg: b = (*__get_cmd640_reg)(__cil_tmp13); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6165: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp27, b); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6165: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp27, b); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5569: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(reg, val); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5569: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(reg, val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            184 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            184 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       139 (76%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         6 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      39 (21%)
  Times result was 'false':        8 (4%)
Number of strengthen sat checks:   15
  Times result was 'false':        14 (93%)
Number of coverage checks:         1909
  BDD entailment checks:           107
Number of SMT sat checks:          15
  trivial:                         0
  cached:                          2

Max ABE block size:                       198
Number of predicates discovered:          2
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         78
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   78 (100%)
  Total number of models for allsat:      31
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.79

Number of path formula cache hits:   7745 (23%)

Time for post operator:                  4.648s
  Time for path formula creation:        4.459s
    Actual computation:                  4.043s
Time for strengthen operator:            0.539s
  Time for satisfiability checks:        0.457s
Time for prec operator:                 29.257s
  Time for abstraction:                 29.213s (Max:    12.567s, Count: 184)
    Boolean abstraction:                27.568s
    Solving time:                       27.454s (Max:    12.210s)
    Model enumeration time:              0.103s
    Time for BDD construction:           0.005s (Max:     0.001s)
Time for merge operator:                 1.143s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):    28.014s

Number of BDD nodes:                               203
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 409, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.352s
Automaton transfers with branching:                0
Automaton transfer successors:                        62735 (count: 62735, min: 1, max: 1, avg: 1.00) [1 x 62735]

CPA algorithm statistics
------------------------
Number of iterations:            32665
Max size of waitlist:            137
Average size of waitlist:        54
Number of computed successors:   33719
Max successors for one state:    2
Number of times merged:          901
Number of times stopped:         1008
Number of times breaked:         1

Total time for CPA algorithm:        38.023s (Max:    30.245s)
  Time for choose from waitlist:      0.103s
  Time for precision adjustment:     29.485s
  Time for transfer relation:         6.350s
  Time for merge operator:            1.217s
  Time for stop operator:             0.102s
  Time for adding to reached set:     0.260s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   3 (count: 1, min: 3, max: 3, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.486s
  Counterexample analysis:                0.201s (Max:     0.201s, Calls: 1)
    Refinement sat check:                 0.171s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.201s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 23231
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 23231.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      38.566s
Time for refinements:                 0.542s
Average time for refinement:          0.542s
Max time for refinement:              0.542s

Code Coverage
-----------------------------
  Function coverage:      0.837
  Visited lines:          5544
  Total lines:            5588
  Line coverage:          0.992
  Visited conditions:     202
  Total conditions:       222
  Condition coverage:     0.910

CPAchecker general statistics
-----------------------------
Number of program locations:     783
Number of CFA edges:             1091
Number of relevant variables:    566
Number of functions:             49
Number of loops:                 5
Size of reached set:             9474
  Number of reached locations:   714 (91%)
    Avg states per location:     13
    Max states per location:     304 (at node N0)
  Number of reached functions:   41 (84%)
  Number of partitions:          9456
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1693 (before lines 8029-8095), Function main called from node N1677, stack depth 1 [7f7c3215], stack [main], Init])
  Number of target states:       0

Time for analysis setup:          3.305s
  Time for loading CPAs:          0.520s
  Time for loading parser:        0.567s
  Time for CFA construction:      2.129s
    Time for parsing file(s):     0.809s
    Time for AST to CFA:          0.665s
    Time for CFA sanity check:    0.089s
    Time for post-processing:     0.372s
      Time for var class.:        0.000s
Time for Analysis:               38.566s
CPU time for analysis:           46.800s
Total time for CPAchecker:       41.875s
Total CPU time for CPAchecker:   52.530s

Time for Garbage Collector:       0.175s (in 1 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                528MB (   503 MiB) max;    260MB (   248 MiB) avg;    584MB (   557 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     22MB (    21 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        26MB (    25 MiB) max;     26MB (    24 MiB) avg
Total process virtual memory:  13923MB ( 13278 MiB) max;  13768MB ( 13130 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
