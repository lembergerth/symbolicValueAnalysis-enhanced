scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.0/ALL.prp ../svcomp15/ldv-linux-3.0/module_get_put-drivers-bluetooth-btmrvl.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1192653568_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7147: Function pointer *(priv->hw_host_to_card) with type int (*)(struct btmrvl_private *, u8 *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 8223: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7734: Ignoring function call through function pointer *(priv->hw_wakeup_firmware): (*(priv->hw_wakeup_firmware))(priv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from btmrvl_service_main_thread to btmrvl_service_main_thread (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7717: Ignoring function call through function pointer *(priv->hw_process_int_status): (*(priv->hw_process_int_status))(priv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7147: Ignoring function call through function pointer *(priv->hw_host_to_card): ret = (*(priv->hw_host_to_card))(priv, skb->data, (u16 )((int)__CPAchecker_TMP_3)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            40 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            40 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       20 (50%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         2 (5%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      18 (45%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   8
  Times result was 'false':        7 (88%)
Number of coverage checks:         1458
  BDD entailment checks:           26
Number of SMT sat checks:          8
  trivial:                         0
  cached:                          0

Max ABE block size:                       136
Number of predicates discovered:          2
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         36
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   36 (100%)
  Total number of models for allsat:      18
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Number of path formula cache hits:   3340 (52%)

Time for post operator:                  1.335s
  Time for path formula creation:        1.248s
    Actual computation:                  1.151s
Time for strengthen operator:            0.050s
  Time for satisfiability checks:        0.027s
Time for prec operator:                 35.162s
  Time for abstraction:                 35.151s (Max:    31.993s, Count: 40)
    Boolean abstraction:                34.475s
    Solving time:                       34.418s (Max:    31.713s)
    Model enumeration time:              0.049s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.939s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):    34.494s

Number of BDD nodes:                               203
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 125, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.119s
Automaton transfers with branching:                0
Automaton transfer successors:                        11147 (count: 11147, min: 1, max: 1, avg: 1.00) [1 x 11147]

CPA algorithm statistics
------------------------
Number of iterations:            5244
Max size of waitlist:            42
Average size of waitlist:        25
Number of computed successors:   5992
Max successors for one state:    2
Number of times merged:          716
Number of times stopped:         742
Number of times breaked:         1

Total time for CPA algorithm:        38.412s (Max:    35.495s)
  Time for choose from waitlist:      0.042s
  Time for precision adjustment:     35.250s
  Time for transfer relation:         1.774s
  Time for merge operator:            1.037s
  Time for stop operator:             0.065s
  Time for adding to reached set:     0.110s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   3 (count: 1, min: 3, max: 3, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.160s
  Counterexample analysis:                0.122s (Max:     0.122s, Calls: 1)
    Refinement sat check:                 0.105s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.122s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 2592
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 2592.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      38.587s
Time for refinements:                 0.175s
Average time for refinement:          0.175s
Max time for refinement:              0.175s

Code Coverage
-----------------------------
  Function coverage:      0.662
  Visited lines:          6346
  Total lines:            7093
  Line coverage:          0.895
  Visited conditions:     352
  Total conditions:       476
  Condition coverage:     0.739

CPAchecker general statistics
-----------------------------
Number of program locations:     1355
Number of CFA edges:             1742
Number of relevant variables:    545
Number of functions:             71
Number of loops:                 4
Size of reached set:             2660
  Number of reached locations:   932 (69%)
    Avg states per location:     2
    Max states per location:     18 (at node N21)
  Number of reached functions:   47 (66%)
  Number of partitions:          2660
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.077s
  Time for loading CPAs:          0.505s
  Time for loading parser:        0.505s
  Time for CFA construction:      3.002s
    Time for parsing file(s):     1.003s
    Time for AST to CFA:          1.058s
    Time for CFA sanity check:    0.213s
    Time for post-processing:     0.523s
      Time for var class.:        0.000s
Time for Analysis:               38.587s
CPU time for analysis:           41.040s
Total time for CPAchecker:       42.669s
Total CPU time for CPAchecker:   48.300s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                412MB (   393 MiB) max;    379MB (   361 MiB) avg;    423MB (   403 MiB) peak
Used non-heap memory:             22MB (    21 MiB) max;     21MB (    20 MiB) avg;     22MB (    21 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13810MB ( 13170 MiB) max;  13753MB ( 13116 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
