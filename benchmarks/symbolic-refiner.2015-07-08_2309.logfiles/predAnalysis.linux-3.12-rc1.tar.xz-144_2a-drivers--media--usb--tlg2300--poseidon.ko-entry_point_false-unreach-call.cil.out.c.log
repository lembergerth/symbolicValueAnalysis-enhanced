scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.12-rc1/ALL.prp ../svcomp15/ldv-linux-3.12-rc1/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--tlg2300--poseidon.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_454957448_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 18982: Ignoring call via function pointer completeFnInt for which no suitable target was found in line: (*completeFnInt)(usb_urb); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 18982: Ignoring function call through function pointer *completeFnInt: (*completeFnInt)(usb_urb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ldv_usb_submit_urb_25 to ldv_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ldv_usb_submit_urb_18 to ldv_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ldv_usb_submit_urb_2 to ldv_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17857: Ignoring function call through function pointer *(pd->pm_resume): (*(pd->pm_resume))(pd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___0 produces garbage! (in the following line(s):
 line 18501:	N6039 -{ldv_main_exported_4();}-> N6041) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___1 produces garbage! (in the following line(s):
 line 18501:	N6039 -{ldv_main_exported_4();}-> N6041) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___3 produces garbage! (in the following line(s):
 line 18501:	N6039 -{ldv_main_exported_4();}-> N6041) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___4 produces garbage! (in the following line(s):
 line 18501:	N6039 -{ldv_main_exported_4();}-> N6041) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___7 produces garbage! (in the following line(s):
 line 18501:	N6039 -{ldv_main_exported_4();}-> N6041) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

line 17799: Ignoring function call through function pointer *(pd->pm_resume): tmp___1 = (*(pd->pm_resume))(pd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from poseidon_resume to poseidon_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17722: Ignoring function call through function pointer *(pd->pm_suspend): tmp___2 = (*(pd->pm_suspend))(pd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

The void * pointer check_firmware::buf to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 17886:	N5680 -{ret = usb_control_msg(udev, tmp | 2147483776U, 130, 192, 0, 0, buf, 8, 5000);}-> N5681) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

Destroying the void * pointer  check_firmware::buf produces garbage! (in the following line(s):
 line 17927:	N5705 -{ret = check_firmware(udev);}-> N5706) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_8::tmp___3 produces garbage! (in the following line(s):
 line 18379:	N5957 -{ldv_main_exported_8();}-> N5959) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___0 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___1 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___11 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___13 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___14 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___15 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___17 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___18 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___19 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___20 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___21 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___24 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___25 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___26 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___28 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___30 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___31 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___33 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___4 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___7 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___9 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___10 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Skipping recursive function call from iso_bubble_handler to start_video_stream (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 18991: Ignoring call via function pointer completeFnBulk for which no suitable target was found in line: (*completeFnBulk)(usb_urb); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 18991: Ignoring function call through function pointer *completeFnBulk: (*completeFnBulk)(usb_urb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4719 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            4719 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       73 (2%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         801 (17%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3845 (81%)
  Times result was 'false':        3327 (71%)
Number of strengthen sat checks:   362
  Times result was 'false':        346 (96%)
Number of coverage checks:         28521
  BDD entailment checks:           775
Number of SMT sat checks:          362
  trivial:                         0
  cached:                          3

Max ABE block size:                       400
Number of predicates discovered:          22
Number of abstraction locations:          7
Max number of predicates per location:    20
Avg number of predicates per location:    10
Total predicates per abstraction:         30202
Max number of predicates per abstraction: 20
Avg number of predicates per abstraction: 7.85
Number of irrelevant predicates:          2610 (9%)
Number of preds handled by boolean abs:   27592 (91%)
  Total number of models for allsat:      745
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.19

Number of path formula cache hits:   129197 (72%)

Time for post operator:                152.684s
  Time for path formula creation:      152.326s
    Actual computation:                149.759s
Time for strengthen operator:            1.730s
  Time for satisfiability checks:        1.517s
Time for prec operator:                666.175s
  Time for abstraction:                665.871s (Max:    44.806s, Count: 4719)
    Boolean abstraction:               601.862s
    Solving time:                      553.355s (Max:    37.983s)
    Model enumeration time:             47.626s
    Time for BDD construction:           0.099s (Max:     0.002s)
Time for merge operator:                10.595s
Time for coverage check:                 0.073s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):   602.494s

Number of BDD nodes:                               870
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                        2059 (count: 16827, min: 0, max: 241, avg: 0.12)
Time for BDD node cleanup:                             0.033s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.552s
  Time for transition matches:                         0.677s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       356649 (count: 356649, min: 1, max: 1, avg: 1.00) [1 x 356649]

CPA algorithm statistics
------------------------
Number of iterations:            150814
Max size of waitlist:            116
Average size of waitlist:        35
Number of computed successors:   169912
Max successors for one state:    2
Number of times merged:          13873
Number of times stopped:         14539
Number of times breaked:         16

Total time for CPA algorithm:       837.949s (Max:   150.042s)
  Time for choose from waitlist:      0.188s
  Time for precision adjustment:    666.698s
  Time for transfer relation:       158.167s
  Time for merge operator:           10.947s
  Time for stop operator:             0.371s
  Time for adding to reached set:     0.566s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                 136 (count: 16, min: 3, max: 14, avg: 8.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  36.224s
  Counterexample analysis:               35.807s (Max:     7.980s, Calls: 16)
    Refinement sat check:                30.631s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                  35.861s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.003s
  Precision update:                                    0.007s
  ARG update:                                          0.288s

Length of refined path (in blocks):                      41 (count: 14, min: 2, max: 7, avg: 2.93)
Number of affected states:                               24 (count: 14, min: 1, max: 6, avg: 1.71)
Length (states) of path with itp 'true':                  3 (count: 14, min: 0, max: 3, avg: 0.21)
Length (states) of path with itp non-trivial itp:        24 (count: 14, min: 1, max: 6, avg: 1.71)
Length (states) of path with itp 'false':                14 (count: 14, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 14, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              10 (count: 14, min: 0, max: 5, avg: 0.71)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 13424
Max. size of reached set after ref.:  10127
Avg. size of reached set before ref.: 10173.31
Avg. size of reached set after ref.:  715.07

Total time for CEGAR algorithm:     874.206s
Time for refinements:                36.249s
Average time for refinement:          2.265s
Max time for refinement:              7.991s

Code Coverage
-----------------------------
  Function coverage:      0.842
  Visited lines:          11649
  Total lines:            12576
  Line coverage:          0.926
  Visited conditions:     1192
  Total conditions:       1414
  Condition coverage:     0.843

CPAchecker general statistics
-----------------------------
Number of program locations:     4119
Number of CFA edges:             5834
Number of relevant variables:    1196
Number of functions:             259
Number of loops:                 30
Size of reached set:             13424
  Number of reached locations:   3299 (80%)
    Avg states per location:     4
    Max states per location:     173 (at node N5060)
  Number of reached functions:   218 (84%)
  Number of partitions:          13413
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N796 (before line 9146), Function alloc_bulk_urbs_generic called from node N834, stack depth 6 [6b343726], stack [main, ldv_main_exported_13, pd_buf_setup, start_video_stream, prepare_bulk_urb, alloc_bulk_urbs_generic], Init])
  Number of target states:       1
  Size of final wait list        81

Time for analysis setup:          5.830s
  Time for loading CPAs:          0.568s
  Time for loading parser:        0.531s
  Time for CFA construction:      4.666s
    Time for parsing file(s):     1.602s
    Time for AST to CFA:          1.591s
    Time for CFA sanity check:    0.173s
    Time for post-processing:     1.080s
      Time for var class.:        0.000s
Time for Analysis:              874.206s
CPU time for analysis:          890.710s
Total time for CPAchecker:      880.041s
Total CPU time for CPAchecker:  901.400s

Time for Garbage Collector:       2.214s (in 23 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3422MB (  3263 MiB) max;    986MB (   941 MiB) avg;   3515MB (  3352 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     25MB (    24 MiB) avg;     26MB (    25 MiB) peak
Used in PS Old Gen pool:          96MB (    92 MiB) max;     66MB (    62 MiB) avg;     96MB (    92 MiB) peak
Allocated heap memory:          4834MB (  4611 MiB) max;   3777MB (  3602 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:  15205MB ( 14500 MiB) max;  13989MB ( 13341 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
