scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--caif--caif_virtio.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-2136841217_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8259: Function pointer *(vdev->vringh_config->find_vrhs) with type int (*)(struct virtio_device *, unsigned int, struct vringh **, vrh_callback_t **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8268: Function pointer *(vdev->config->find_vqs) with type int (*)(struct virtio_device *, unsigned int, struct virtqueue **, vq_callback_t **, const char **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6435: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6482: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7199: Function pointer *(vdev->config->get) with type void (*)(struct virtio_device *, unsigned int, void *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7211: Function pointer *(vdev->config->get) with type void (*)(struct virtio_device *, unsigned int, void *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7223: Function pointer *(vdev->config->get) with type void (*)(struct virtio_device *, unsigned int, void *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7187: Function pointer *(vdev->config->get) with type void (*)(struct virtio_device *, unsigned int, void *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 6435: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6482: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8598: Ignoring function call through function pointer *(vdev->config->reset): (*(vdev->config->reset))(vdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from cfv_remove to cfv_remove (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8600: Ignoring function call through function pointer *(vdev->vringh_config->del_vrhs): (*(vdev->vringh_config->del_vrhs))(cfv->vdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8604: Ignoring function call through function pointer *(vdev->config->del_vqs): (*(vdev->config->del_vqs))(cfv->vdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8259: Ignoring function call through function pointer *(vdev->vringh_config->find_vrhs): err = (*(vdev->vringh_config->find_vrhs))(vdev, 1U, &(cfv->vr_rx), &vrh_cbs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8268: Ignoring function call through function pointer *(vdev->config->find_vqs): err = (*(vdev->config->find_vqs))(vdev, 1U, &(cfv->vq_tx), &vq_cbs, &names); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7199: Ignoring function call through function pointer *(vdev->config->get): (*(vdev->config->get))(vdev, offset, (void *)(&ret), 2U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7211: Ignoring function call through function pointer *(vdev->config->get): (*(vdev->config->get))(vdev, offset, (void *)(&ret), 4U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8560: Ignoring function call through function pointer *(vdev->vringh_config->del_vrhs): (*(vdev->vringh_config->del_vrhs))(cfv->vdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8567: Ignoring function call through function pointer *(vdev->config->del_vqs): (*(vdev->config->del_vqs))(cfv->vdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            27299 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            27299 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1851 (7%)
  Times precision was {false}:     519 (2%)
  Times result was cached:         22111 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2818 (10%)
  Times result was 'false':        444 (2%)
Number of strengthen sat checks:   89
  Times result was 'false':        74 (83%)
Number of coverage checks:         140855
  BDD entailment checks:           27393
Number of SMT sat checks:          89
  trivial:                         0
  cached:                          50

Max ABE block size:                       163
Number of predicates discovered:          12
Number of abstraction locations:          10
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         9127
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 2.74
Number of irrelevant predicates:          2919 (32%)
Number of preds handled by boolean abs:   6208 (68%)
  Total number of models for allsat:      4595
  Max number of models for allsat:        41
  Avg number of models for allsat:        1.63

Number of path formula cache hits:   814900 (86%)

Time for post operator:                 34.941s
  Time for path formula creation:       33.475s
    Actual computation:                 25.711s
Time for strengthen operator:            1.652s
  Time for satisfiability checks:        0.636s
Time for prec operator:                498.679s
  Time for abstraction:                497.280s (Max:    12.667s, Count: 27299)
    Boolean abstraction:               386.260s
    Solving time:                      336.756s (Max:     3.977s)
    Model enumeration time:             76.953s
    Time for BDD construction:           0.223s (Max:     0.003s)
Time for merge operator:                 4.937s
Time for coverage check:                 0.261s
  Time for BDD entailment checks:        0.147s
Total time for SMT solver (w/o itp):   414.345s

Number of BDD nodes:                               1371
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                        3134 (count: 42391, min: 0, max: 776, avg: 0.07)
Time for BDD node cleanup:                             0.040s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.513s
  Time for transition matches:                         1.851s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1209088 (count: 1209088, min: 1, max: 1, avg: 1.00) [1 x 1209088]

CPA algorithm statistics
------------------------
Number of iterations:            803753
Max size of waitlist:            507
Average size of waitlist:        174
Number of computed successors:   879757
Max successors for one state:    2
Number of times merged:          56731
Number of times stopped:         74024
Number of times breaked:         15

Total time for CPA algorithm:       563.470s (Max:   253.154s)
  Time for choose from waitlist:      0.837s
  Time for precision adjustment:    500.878s
  Time for transfer relation:        47.982s
  Time for merge operator:            5.721s
  Time for stop operator:             1.524s
  Time for adding to reached set:     1.835s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                 105 (count: 15, min: 2, max: 11, avg: 7.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  13.571s
  Counterexample analysis:               12.187s (Max:     2.339s, Calls: 15)
    Refinement sat check:                10.048s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                  12.187s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.005s
  ARG update:                                          1.331s

Length of refined path (in blocks):                      78 (count: 14, min: 2, max: 11, avg: 5.57)
Number of affected states:                               64 (count: 14, min: 1, max: 10, avg: 4.57)
Length (states) of path with itp 'true':                  0 (count: 14, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        64 (count: 14, min: 1, max: 10, avg: 4.57)
Length (states) of path with itp 'false':                 7 (count: 14, min: 0, max: 1, avg: 0.50)
Different non-trivial interpolants along paths:           5 (count: 14, min: 0, max: 2, avg: 0.36)
Equal non-trivial interpolants along paths:              45 (count: 14, min: 0, max: 9, avg: 3.21)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 118991
Max. size of reached set after ref.:  24
Avg. size of reached set before ref.: 45860.33
Avg. size of reached set after ref.:  22.47

Total time for CEGAR algorithm:     577.268s
Time for refinements:                13.797s
Average time for refinement:          0.919s
Max time for refinement:              2.580s

Code Coverage
-----------------------------
  Function coverage:      0.700
  Visited lines:          6477
  Total lines:            6786
  Line coverage:          0.954
  Visited conditions:     250
  Total conditions:       316
  Condition coverage:     0.791

CPAchecker general statistics
-----------------------------
Number of program locations:     1191
Number of CFA edges:             1578
Number of relevant variables:    394
Number of functions:             100
Number of loops:                 12
Size of reached set:             117722
  Number of reached locations:   914 (77%)
    Avg states per location:     128
    Max states per location:     2145 (at node N273)
  Number of reached functions:   70 (70%)
  Number of partitions:          117712
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N1445 (before line 8719), Function main called from node N1430, stack depth 1 [245f1abb], stack [main], Init])
  Number of target states:       0

Time for analysis setup:          3.435s
  Time for loading CPAs:          0.552s
  Time for loading parser:        0.550s
  Time for CFA construction:      2.270s
    Time for parsing file(s):     0.882s
    Time for AST to CFA:          0.760s
    Time for CFA sanity check:    0.082s
    Time for post-processing:     0.376s
      Time for var class.:        0.000s
Time for Analysis:              577.268s
CPU time for analysis:          594.170s
Total time for CPAchecker:      580.709s
Total CPU time for CPAchecker:  600.170s

Time for Garbage Collector:       2.063s (in 10 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               1142MB (  1089 MiB) max;    540MB (   515 MiB) avg;   1241MB (  1183 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     24MB (    23 MiB) avg;     25MB (    24 MiB) peak
Used in PS Old Gen pool:          81MB (    77 MiB) max;     16MB (    15 MiB) avg;     81MB (    77 MiB) peak
Allocated heap memory:          2553MB (  2435 MiB) max;   2487MB (  2372 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     27MB (    25 MiB) avg
Total process virtual memory:  14037MB ( 13387 MiB) max;  13739MB ( 13103 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
