scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--isdn--i4l--isdn.ko-ldv_main3_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_760075339_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 34594: Function pointer *(compressor->compress) with type int (*)(void *, struct sk_buff *, struct sk_buff *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 34514: Function pointer *(ipc->incomp) with type void (*)(void *, struct sk_buff *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 34469: Function pointer *(ipc->decompress) with type int (*)(void *, struct sk_buff *, struct sk_buff *, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 34797-34799: Function pointer *(is->link_compressor->reset) with type void (*)(void *, unsigned char, unsigned char, unsigned char *, unsigned int, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 34790-34792: Function pointer *(mis->compressor->reset) with type void (*)(void *, unsigned char, unsigned char, unsigned char *, unsigned int, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 34761-34763: Function pointer *(is->link_decompressor->reset) with type void (*)(void *, unsigned char, unsigned char, unsigned char *, unsigned int, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 34747-34749: Function pointer *(mis->decompressor->reset) with type void (*)(void *, unsigned char, unsigned char, unsigned char *, unsigned int, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 35016: Function pointer *(is->link_compressor->reset) with type void (*)(void *, unsigned char, unsigned char, unsigned char *, unsigned int, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 35006: Function pointer *(is->compressor->reset) with type void (*)(void *, unsigned char, unsigned char, unsigned char *, unsigned int, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 35130: Function pointer *(ipc->init) with type int (*)(void *, struct isdn_ppp_comp_data *, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 26047-26048: Function pointer *(((dev->drv)[drvidx])->interface->readstat) with type int (*)(u_char *, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 23225-23226: Function pointer *(((dev->drv)[c->driver])->interface->writebuf_skb) with type int (*)(int, int, int, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 23097-23098: Function pointer *(((dev->drv)[c->driver])->interface->writebuf_skb) with type int (*)(int, int, int, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 26196-26198: Function pointer *(((dev->drv)[drvidx])->interface->writecmd) with type int (*)(u_char *, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 28341-28342: Function pointer *(((dev->drv)[drvidx])->interface->writebuf_skb) with type int (*)(int, int, int, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 28329-28330: Function pointer *(((dev->drv)[drvidx])->interface->writebuf_skb) with type int (*)(int, int, int, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28309: Function pointer *(((dev->drv)[drvidx])->interface->writebuf_skb) with type int (*)(int, int, int, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28236: Function pointer *(((dev->drv)[drvidx])->interface->writebuf_skb) with type int (*)(int, int, int, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 7765: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 35126: Ignoring function call through function pointer *(ipc->alloc): stat = (*(ipc->alloc))(data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 35130: Ignoring function call through function pointer *(ipc->init): ret = (*(ipc->init))(stat, data, is->unit, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 35169: Ignoring function call through function pointer *(is->compressor->free): (*(is->compressor->free))(is->comp_stat); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from isdn_tty_cmd_ATA to isdn_tty_modem_result (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 24373: Ignoring function call through function pointer *(((dev->drv)[cmd->driver])->interface->command): tmp___0 = (*(((dev->drv)[cmd->driver])->interface->command))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8786: Ignoring function call through function pointer *(cprot->pops->restart): (*(cprot->pops->restart))(cprot, dev___0, dops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10599: Ignoring function call through function pointer *(cprot->pops->close): (*(cprot->pops->close))(cprot); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from isdn_net_close to isdn_net_close (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_net_hangup to isdn_net_hangup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9859: Ignoring function call through function pointer *(pops->disconn_ind): (*(pops->disconn_ind))(cprot); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from isdn_net_hangup to isdn_net_close (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_net_hangup to isdn_concap_dl_disconn_req (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_net_hangup to isdn_command (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 35936: Ignoring function call through function pointer *(cprot->dops->disconn_req): (*(cprot->dops->disconn_req))(cprot); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from isdn_x25iface_connect_ind to isdn_net_close (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_x25iface_connect_ind to isdn_concap_dl_disconn_req (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_x25iface_connect_ind to isdn_command (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_x25iface_connect_ind to isdn_x25iface_connect_ind (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_all_eaz to isdn_command (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_net_close to isdn_command (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_net_hangup to isdn_x25iface_connect_ind (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_concap_dl_disconn_req to isdn_net_hangup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_net_close to isdn_concap_dl_disconn_req (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_net_close to isdn_net_hangup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_net_close to isdn_x25iface_connect_ind (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_command to isdn_command (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            415 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            415 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       109 (26%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         7 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      299 (72%)
  Times result was 'false':        273 (66%)
Number of strengthen sat checks:   80
  Times result was 'false':        79 (99%)
Number of coverage checks:         5879
  BDD entailment checks:           85
Number of SMT sat checks:          80
  trivial:                         0
  cached:                          0

Max ABE block size:                       412
Number of predicates discovered:          12
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         3588
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 12.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   3588 (100%)
  Total number of models for allsat:      26
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.09

Number of path formula cache hits:   1013 (4%)

Time for post operator:                 12.777s
  Time for path formula creation:       12.664s
    Actual computation:                 11.851s
Time for strengthen operator:           67.828s
  Time for satisfiability checks:       67.785s
Time for prec operator:                780.395s
  Time for abstraction:                780.355s (Max:     7.442s, Count: 415)
    Boolean abstraction:               630.330s
    Solving time:                      630.094s (Max:     6.992s)
    Model enumeration time:              0.216s
    Time for BDD construction:           0.010s (Max:     0.001s)
Time for merge operator:                 7.699s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):   698.095s

Number of BDD nodes:                               318
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                         117 (count: 1437, min: 0, max: 115, avg: 0.08)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.264s
Automaton transfers with branching:                0
Automaton transfer successors:                        41847 (count: 41847, min: 1, max: 1, avg: 1.00) [1 x 41847]

CPA algorithm statistics
------------------------
Number of iterations:            23617
Max size of waitlist:            115
Average size of waitlist:        85
Number of computed successors:   27005
Max successors for one state:    2
Number of times merged:          2897
Number of times stopped:         2982
Number of times breaked:         1

Total time for CPA algorithm:       870.501s (Max:   866.493s)
  Time for choose from waitlist:      0.057s
  Time for precision adjustment:    780.563s
  Time for transfer relation:        81.451s
  Time for merge operator:            7.866s
  Time for stop operator:             0.104s
  Time for adding to reached set:     0.151s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   7 (count: 1, min: 7, max: 7, avg: 7.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.700s
  Counterexample analysis:                0.650s (Max:     0.650s, Calls: 1)
    Refinement sat check:                 0.574s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.650s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 1946
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 1946.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     871.215s
Time for refinements:                 0.714s
Average time for refinement:          0.714s
Max time for refinement:              0.714s

Code Coverage
-----------------------------
  Function coverage:      0.214
  Visited lines:          8744
  Total lines:            26740
  Line coverage:          0.327
  Visited conditions:     596
  Total conditions:       6210
  Condition coverage:     0.096

CPAchecker general statistics
-----------------------------
Number of program locations:     14200
Number of CFA edges:             20880
Number of relevant variables:    3261
Number of functions:             509
Number of loops:                 181
Size of reached set:             21805
  Number of reached locations:   1531 (11%)
    Avg states per location:     14
    Max states per location:     235 (at node N320)
  Number of reached functions:   109 (21%)
  Number of partitions:          21805
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        97

Time for analysis setup:         10.088s
  Time for loading CPAs:          0.806s
  Time for loading parser:        0.528s
  Time for CFA construction:      8.689s
    Time for parsing file(s):     2.664s
    Time for AST to CFA:          3.133s
    Time for CFA sanity check:    0.246s
    Time for post-processing:     2.427s
      Time for var class.:        0.000s
Time for Analysis:              871.215s
CPU time for analysis:          881.180s
Total time for CPAchecker:      881.309s
Total CPU time for CPAchecker:  900.160s

Time for Garbage Collector:       1.233s (in 9 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                604MB (   576 MiB) max;    336MB (   320 MiB) avg;    684MB (   653 MiB) peak
Used non-heap memory:             26MB (    24 MiB) max;     25MB (    24 MiB) avg;     26MB (    25 MiB) peak
Used in PS Old Gen pool:          84MB (    80 MiB) max;     42MB (    40 MiB) avg;     84MB (    80 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   1956MB (  1865 MiB) avg
Allocated non-heap memory:        28MB (    26 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:  14678MB ( 13998 MiB) max;  14220MB ( 13562 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
