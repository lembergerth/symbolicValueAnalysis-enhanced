scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--char--ipmi--ipmi_msghandler.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_2130360291_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5409: Function pointer *(w->new_smi) with type void (*)(int, struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11138: Function pointer *(intf->handlers->sender) with type void (*)(void *, struct ipmi_smi_msg *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9894: Function pointer *(handlers->sender) with type void (*)(void *, struct ipmi_smi_msg *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7617: Function pointer *(handlers->sender) with type void (*)(void *, struct ipmi_smi_msg *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6039: Function pointer *(intf->handlers->inc_usecount) with type int (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5307: Function pointer *(watcher->new_smi) with type void (*)(int, struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9712: Function pointer *(w->smi_gone) with type void (*)(int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6478: Function pointer *(intf->handlers->set_maintenance_mode) with type void (*)(void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12027: Function pointer *(intf->handlers->set_run_to_completion) with type void (*)(void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11752: Function pointer *(intf->handlers->set_run_to_completion) with type void (*)(void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 11538: Ignoring function call through function pointer *(msg->done): (*(msg->done))(msg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6478: Ignoring function call through function pointer *(intf->handlers->set_maintenance_mode): (*(intf->handlers->set_maintenance_mode))(intf->send_info, intf->maintenance_mode_enable); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7617: Ignoring function call through function pointer *(handlers->sender): (*(handlers->sender))(intf->send_info, smi_msg, priority); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4934: Ignoring function call through function pointer *(msg->done): (*(msg->done))(msg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from free_smi_msg_list to ipmi_free_smi_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_free_recv_msg to intf_free (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11368: Ignoring function call through function pointer *(handlers->request_events): (*(handlers->request_events))(intf->send_info); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ipmi_request_event to intf_free (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_request_event to ipmi_timeout (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5650: Ignoring function call through function pointer *(user->handler->ipmi_recv_hndl): (*(user->handler->ipmi_recv_hndl))(msg, user->handler_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from send_channel_info_cmd to i_ipmi_request (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5637: Ignoring function call through function pointer *(intf->null_user_handler): (*(intf->null_user_handler))(intf, msg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from deliver_response to ipmi_free_recv_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_bmc_rsp to ipmi_free_recv_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9894: Ignoring function call through function pointer *(handlers->sender): (*(handlers->sender))(intf->send_info, msg, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10872: Ignoring function call through function pointer *(user->handler->ipmi_watchdog_pretimeout): (*(user->handler->ipmi_watchdog_pretimeout))(user->handler_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from handle_new_recv_msgs to intf_free (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_new_recv_msgs to ipmi_timeout (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_new_recv_msgs to smi_recv_tasklet (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_new_recv_msgs to ipmi_free_smi_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from check_msg_timeout to ipmi_free_smi_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11138: Ignoring function call through function pointer *(intf->handlers->sender): (*(intf->handlers->sender))(intf->send_info, smi_msg, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ipmi_request_event to smi_recv_tasklet (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_free_recv_msg to ipmi_timeout (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            356 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            356 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1 (0%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         45 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      310 (87%)
  Times result was 'false':        11 (3%)
Number of strengthen sat checks:   11
  Times result was 'false':        10 (91%)
Number of coverage checks:         10070
  BDD entailment checks:           218
Number of SMT sat checks:          11
  trivial:                         0
  cached:                          0

Max ABE block size:                       125
Number of predicates discovered:          16
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         4960
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 16.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   4960 (100%)
  Total number of models for allsat:      298
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.96

Number of path formula cache hits:   243 (1%)

Time for post operator:                 16.020s
  Time for path formula creation:       15.860s
    Actual computation:                 15.158s
Time for strengthen operator:            0.442s
  Time for satisfiability checks:        0.371s
Time for prec operator:                847.024s
  Time for abstraction:                846.977s (Max:   113.547s, Count: 356)
    Boolean abstraction:               827.861s
    Solving time:                      827.028s (Max:   113.194s)
    Model enumeration time:              1.041s
    Time for BDD construction:           0.070s (Max:     0.010s)
Time for merge operator:                16.199s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):   828.441s

Number of BDD nodes:                               322
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                         354 (count: 1505, min: 0, max: 99, avg: 0.24)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.309s
Automaton transfers with branching:                0
Automaton transfer successors:                        50573 (count: 50573, min: 1, max: 1, avg: 1.00) [1 x 50573]

CPA algorithm statistics
------------------------
Number of iterations:            29463
Max size of waitlist:            82
Average size of waitlist:        54
Number of computed successors:   34673
Max successors for one state:    2
Number of times merged:          4926
Number of times stopped:         5144
Number of times breaked:         1

Total time for CPA algorithm:       881.864s (Max:   881.499s)
  Time for choose from waitlist:      0.093s
  Time for precision adjustment:    847.202s
  Time for transfer relation:        17.411s
  Time for merge operator:           16.463s
  Time for stop operator:             0.144s
  Time for adding to reached set:     0.148s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.095s
  Counterexample analysis:                0.061s (Max:     0.061s, Calls: 1)
    Refinement sat check:                 0.052s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.061s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 187
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 187.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     881.967s
Time for refinements:                 0.103s
Average time for refinement:          0.103s
Max time for refinement:              0.103s

Code Coverage
-----------------------------
  Function coverage:      0.369
  Visited lines:          5634
  Total lines:            8099
  Line coverage:          0.696
  Visited conditions:     704
  Total conditions:       1380
  Condition coverage:     0.510

CPAchecker general statistics
-----------------------------
Number of program locations:     4158
Number of CFA edges:             5899
Number of relevant variables:    1177
Number of functions:             271
Number of loops:                 49
Size of reached set:             29332
  Number of reached locations:   1830 (44%)
    Avg states per location:     16
    Max states per location:     321 (at node N85)
  Number of reached functions:   100 (37%)
  Number of partitions:          29332
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        51

Time for analysis setup:          5.097s
  Time for loading CPAs:          0.615s
  Time for loading parser:        0.520s
  Time for CFA construction:      3.894s
    Time for parsing file(s):     1.176s
    Time for AST to CFA:          1.362s
    Time for CFA sanity check:    0.152s
    Time for post-processing:     0.964s
      Time for var class.:        0.000s
Time for Analysis:              881.968s
CPU time for analysis:          891.650s
Total time for CPAchecker:      887.070s
Total CPU time for CPAchecker:  900.800s

Time for Garbage Collector:       1.279s (in 11 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                577MB (   550 MiB) max;    338MB (   322 MiB) avg;    646MB (   616 MiB) peak
Used non-heap memory:             24MB (    23 MiB) max;     23MB (    22 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:          66MB (    63 MiB) max;     26MB (    25 MiB) avg;     66MB (    63 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   1950MB (  1859 MiB) avg
Allocated non-heap memory:        26MB (    25 MiB) max;     26MB (    24 MiB) avg
Total process virtual memory:  14000MB ( 13351 MiB) max;  13866MB ( 13223 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
