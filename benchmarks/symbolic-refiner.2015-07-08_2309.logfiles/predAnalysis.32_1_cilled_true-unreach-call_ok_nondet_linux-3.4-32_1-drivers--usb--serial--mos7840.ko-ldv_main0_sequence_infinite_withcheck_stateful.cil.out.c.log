scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.4-simple/ALL.prp ../svcomp15/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--serial--mos7840.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1070940187_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

The void * pointer kmalloc::__retval__ to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 13441:	N5206 -{*((void **)__cil_tmp68) = kmalloc(__cil_tmp69, 208U);}-> N5207) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer kmalloc::__retval__ to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 9708:	N3118 -{*((void **)__cil_tmp65) = kmalloc(__cil_tmp66, 208U);}-> N3119) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            96 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            96 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       39 (41%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         4 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      53 (55%)
  Times result was 'false':        3 (3%)
Number of strengthen sat checks:   3
  Times result was 'false':        2 (67%)
Number of coverage checks:         3399
  BDD entailment checks:           55
Number of SMT sat checks:          3
  trivial:                         0
  cached:                          0

Max ABE block size:                       503
Number of predicates discovered:          2
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0
Total predicates per abstraction:         106
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.00
Number of irrelevant predicates:          0 (0%)
Number of preds handled by boolean abs:   106 (100%)
  Total number of models for allsat:      50
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.94

Number of path formula cache hits:   8821 (52%)

Time for post operator:                  2.770s
  Time for path formula creation:        2.652s
    Actual computation:                  2.506s
Time for strengthen operator:           27.863s
  Time for satisfiability checks:       27.823s
Time for prec operator:                777.511s
  Time for abstraction:                777.478s (Max:   706.923s, Count: 96)
    Boolean abstraction:               772.935s
    Solving time:                      772.548s (Max:   705.136s)
    Model enumeration time:              0.371s
    Time for BDD construction:           0.004s (Max:     0.001s)
Time for merge operator:                 2.230s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.013s
Total time for SMT solver (w/o itp):   800.742s

Number of BDD nodes:                               203
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 313, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.272s
Automaton transfers with branching:                0
Automaton transfer successors:                        50454 (count: 50454, min: 1, max: 1, avg: 1.00) [1 x 50454]

CPA algorithm statistics
------------------------
Number of iterations:            14183
Max size of waitlist:            36
Average size of waitlist:        26
Number of computed successors:   15934
Max successors for one state:    2
Number of times merged:          1672
Number of times stopped:         1727
Number of times breaked:         1

Total time for CPA algorithm:       812.122s (Max:   778.326s)
  Time for choose from waitlist:      0.047s
  Time for precision adjustment:    777.708s
  Time for transfer relation:        31.409s
  Time for merge operator:            2.375s
  Time for stop operator:             0.118s
  Time for adding to reached set:     0.140s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                   3 (count: 1, min: 3, max: 3, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.917s
  Counterexample analysis:                1.827s (Max:     1.827s, Calls: 1)
    Refinement sat check:                 1.554s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   1.827s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 7095
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 7095.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     814.071s
Time for refinements:                 1.949s
Average time for refinement:          1.949s
Max time for refinement:              1.949s

Code Coverage
-----------------------------
  Function coverage:      0.811
  Visited lines:          15479
  Total lines:            16146
  Line coverage:          0.959
  Visited conditions:     912
  Total conditions:       998
  Condition coverage:     0.914

CPAchecker general statistics
-----------------------------
Number of program locations:     3408
Number of CFA edges:             4245
Number of relevant variables:    2892
Number of functions:             74
Number of loops:                 16
Size of reached set:             7111
  Number of reached locations:   3131 (92%)
    Avg states per location:     2
    Max states per location:     77 (at node N333)
  Number of reached functions:   60 (81%)
  Number of partitions:          7111
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          6.516s
  Time for loading CPAs:          0.588s
  Time for loading parser:        0.531s
  Time for CFA construction:      5.330s
    Time for parsing file(s):     1.810s
    Time for AST to CFA:          1.318s
    Time for CFA sanity check:    0.679s
    Time for post-processing:     1.209s
      Time for var class.:        0.000s
Time for Analysis:              814.071s
CPU time for analysis:          821.970s
Total time for CPAchecker:      820.592s
Total CPU time for CPAchecker:  834.050s

Time for Garbage Collector:       0.092s (in 1 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                528MB (   503 MiB) max;    414MB (   395 MiB) avg;    585MB (   558 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     23MB (    22 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        26MB (    25 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:  15176MB ( 14473 MiB) max;  14980MB ( 14286 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
