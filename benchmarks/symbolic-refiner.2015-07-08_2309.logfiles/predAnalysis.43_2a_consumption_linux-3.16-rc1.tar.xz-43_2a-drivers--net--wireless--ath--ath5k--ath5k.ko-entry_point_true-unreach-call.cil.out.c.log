scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--wireless--ath--ath5k--ath5k.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_354519437_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 31777: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 31597-31598: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31644: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 32518-32521: Function pointer *((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *))it_func) with type void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 45587: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 40948-40949: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): turned %s", "ath5k_ani_set_cck_weak_signal_detection", 339, __CPAchecker_TMP_0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 41655-41656: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): ANI auto\n", "ath5k_ani_init", 822) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 40698-40699: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): new level %d", "ath5k_ani_set_noise_immunity_level", 236, level) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 40661-40662: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "noise immunity level %d out of range", level) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 40761-40762: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): new level %d", "ath5k_ani_set_spur_immunity_level", 261, level) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 40739-40740: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "spur immunity level %d out of range", level) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 40814-40815: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): new level %d", "ath5k_ani_set_firstep_level", 283, level) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 40792-40793: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "firstep level %d out of range", level) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 40916-40917: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): turned %s", "ath5k_ani_set_ofdm_weak_signal_detection", 323, __CPAchecker_TMP_0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 41632-41633: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): ANI manual high -> low sensitivity\n", "ath5k_ani_init", 813) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 41609-41610: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): ANI manual low -> high sensitivity\n", "ath5k_ani_init", 805) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 41596-41597: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): ANI off\n", "ath5k_ani_init", 802) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 41569-41570: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "ANI mode %d out of range", (unsigned int)mode) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 11190: Ignoring function call through function pointer *(common->bus_ops->eeprom_read): tmp___0 = (*(common->bus_ops->eeprom_read))(common, off, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 31644: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 21459-21460: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): mode %d\n", "ath5k_hw_set_opmode", 1015, (unsigned int)op_mode) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 33714-33716: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): mode setup opmode %d (%s)\n", "ath5k_update_bssid_mask_and_opmode", 688, __CPAchecker_TMP_1, tmp___0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 33759-33760: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): RX filter 0x%x\n", "ath5k_update_bssid_mask_and_opmode", 707, rfilt) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 43461-43462: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): add interface mode %d\n", "ath5k_add_interface", 249, __CPAchecker_TMP_10) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 43420: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "Only one single ad-hoc interface is allowed.\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 32518-32521: Ignoring call via function pointer trace_ath5k_tx::it_func for which no suitable target was found in line: (*((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *))it_func))(__data, priv, skb, q); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 32518-32521: Ignoring function call through function pointer *((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *))it_func): (*((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *))it_func))(__data, priv, skb, q); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 31597-31598: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)-24189255811072L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 31672: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 32377: Ignoring function call through function pointer *(common->bus_ops->read_cachesize): (*(common->bus_ops->read_cachesize))(common, csz); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 36747-36748: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\f", "intval %u is too low, min 15\n", intval) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 36806-36807: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): need to wait for HW TSF sync\n", "ath5k_beacon_update_timers", 2204) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 36856-36857: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): updated timers based on beacon TSF\n", "ath5k_beacon_update_timers", 2235) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 36845-36846: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): reset HW TSF and timers\n", "ath5k_beacon_update_timers", 2232) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 36832-36833: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): reconfigured timers based on HW TSF\n", "ath5k_beacon_update_timers", 2229) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 36867-36869: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): bc_tsf %llx hw_tsf %llx bc_tu %u hw_tu %u nexttbtt %u\n", "ath5k_beacon_update_timers", 2240, bc_tsf, hw_tsf, bc_tu, hw_tu, nexttbtt) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 36878-36880: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): intval %u %s %s\n", "ath5k_beacon_update_timers", 2244, intval & 65535U, __CPAchecker_TMP_3, __CPAchecker_TMP_4) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 29058: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "invalid radio frequency mode\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 28990: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "failed to warm reset the MAC Chip\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 28964: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "failed to resume the MAC Chip\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 28946: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "failed to reset the MAC Chip\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 28893: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "failed to wakeup the MAC Chip\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 30386: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "Couldn\'t identify radio revision.\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 30114: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "POST Failed !!!\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 30073: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "POST Failed !!!\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 11485-11486: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "Invalid EEPROM checksum: 0x%04x eep_max: 0x%04x (%s)\n", cksum, eep_max, __CPAchecker_TMP_0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 11428-11429: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "Invalid max custom EEPROM size: %d (0x%04x) max expected: %d (0x%04x)\n", eep_max, eep_max, 2496, 2496) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            36137 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            36137 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       36137 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         346452
  BDD entailment checks:           18138
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       676
Number of predicates discovered:          0

Number of path formula cache hits:   2008441 (91%)

Time for post operator:                324.064s
  Time for path formula creation:      319.665s
    Actual computation:                248.575s
Time for strengthen operator:            2.468s
Time for prec operator:                192.546s
  Time for abstraction:                187.640s (Max:     0.394s, Count: 36137)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:               133.070s
Time for coverage check:                 0.522s
  Time for BDD entailment checks:        0.176s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 54276, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.055s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.987s
  Time for transition matches:                         5.105s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      2728933 (count: 2728933, min: 1, max: 1, avg: 1.00) [1 x 2728933]

CPA algorithm statistics
------------------------
Number of iterations:            1808800
Max size of waitlist:            36995
Average size of waitlist:        18072
Number of computed successors:   2028087
Max successors for one state:    2
Number of times merged:          164157
Number of times stopped:         182295
Number of times breaked:         0

Total time for CPA algorithm:       839.753s (Max:   839.753s)
  Time for choose from waitlist:      2.019s
  Time for precision adjustment:    197.757s
  Time for transfer relation:       482.881s
  Time for merge operator:          135.676s
  Time for stop operator:             3.997s
  Time for adding to reached set:     5.795s

Predicate-Abstraction Refiner statistics
----------------------------------------
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.211
  Visited lines:          16436
  Total lines:            32225
  Line coverage:          0.510
  Visited conditions:     1409
  Total conditions:       5676
  Condition coverage:     0.248

CPAchecker general statistics
-----------------------------
Number of program locations:     15612
Number of CFA edges:             22978
Number of relevant variables:    5432
Number of functions:             721
Number of loops:                 137
Size of reached set:             1845793
  Size of final wait list        36993

Time for analysis setup:         17.186s
  Time for loading CPAs:          0.719s
  Time for loading parser:        0.511s
  Time for CFA construction:     15.887s
    Time for parsing file(s):     3.333s
    Time for AST to CFA:          6.512s
    Time for CFA sanity check:    1.120s
    Time for post-processing:     4.597s
      Time for var class.:        0.000s
Time for Analysis:              839.753s
CPU time for analysis:          866.280s
Total time for CPAchecker:      856.944s
Total CPU time for CPAchecker:  899.970s

Time for Garbage Collector:      14.578s (in 69 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4736MB (  4517 MiB) max;   2168MB (  2067 MiB) avg;   4827MB (  4604 MiB) peak
Used non-heap memory:             27MB (    26 MiB) max;     27MB (    26 MiB) avg;     28MB (    26 MiB) peak
Used in PS Old Gen pool:        1299MB (  1239 MiB) max;    589MB (   561 MiB) avg;   1299MB (  1239 MiB) peak
Allocated heap memory:          4871MB (  4646 MiB) max;   4541MB (  4330 MiB) avg
Allocated non-heap memory:        29MB (    28 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:  13685MB ( 13051 MiB) max;  13630MB ( 12999 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
