scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -predicateAnalysis-bitprecise -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--net--ethernet--chelsio--cxgb4--cxgb4.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1694712059_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 32701: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 32748: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 32481: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 32390-32391: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 32566: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 32522: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 32436: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16396: Function pointer *((ulds[uld]).add) with type void * (*)(const struct cxgb4_lld_info *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker
 cpa.value.symbolic.handlePointers 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 26045: Ignoring function call through function pointer *(acts->int_handler): (*(acts->int_handler))(adapter); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16218: Ignoring function call through function pointer *((ulds[0]).control): (*((ulds[0]).control))((adap->uld_handle)[0], cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 32390-32391: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544UL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 32593: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 32593: Return type of function t4_eth_xmit is netdev_tx_t , but result is used as type int: tmp___0 = t4_eth_xmit(dev, dma_addr); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from dma_mapping_error to t4_eth_xmit (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 33064: Ignoring function call through function pointer *(skb->destructor): (*(skb->destructor))(skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 32436: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 32701: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 32748: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16545: Ignoring function call through function pointer *((ulds[i]).state_change): (*((ulds[i]).state_change))((adap->uld_handle)[i], new_state); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16545: Return type of function eeh_err_detected is pci_ers_result_t , but result is used as type int: eeh_err_detected((adap->uld_handle)[i], new_state); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from notify_ulds to eeh_err_detected (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 36667: Ignoring function call through function pointer *(q->handler): ret = (*(q->handler))(q, (__be64 *)rc, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 36664: Ignoring function call through function pointer *(q->handler): ret = (*(q->handler))(q, q->cur_desc, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 32522: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 32566: Ignoring function call through function pointer *(ops->sync_single_for_cpu): (*(ops->sync_single_for_cpu))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 36643: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)(si.va)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 36647: Ignoring function call through function pointer *(q->handler): ret = (*(q->handler))(q, q->cur_desc, (const struct pkt_gl *)(&si)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from t4_eth_xmit to map_skb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16490: Ignoring function call through function pointer *((ulds[i]).state_change): (*((ulds[i]).state_change))((adap->uld_handle)[i], 3); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5726 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            5726 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       2637 (46%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         1159 (20%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1930 (34%)
  Times result was 'false':        1848 (32%)
Number of strengthen sat checks:   93
  Times result was 'false':        85 (91%)
Number of coverage checks:         42338
  BDD entailment checks:           2038
Number of SMT sat checks:          93
  trivial:                         0
  cached:                          3

Max ABE block size:                       1087
Number of predicates discovered:          15
Number of abstraction locations:          7
Max number of predicates per location:    14
Avg number of predicates per location:    9
Total predicates per abstraction:         16299
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 8.45
Number of irrelevant predicates:          832 (5%)
Number of preds handled by boolean abs:   15467 (95%)
  Total number of models for allsat:      358
  Max number of models for allsat:        3
  Avg number of models for allsat:        0.19

Number of path formula cache hits:   243119 (50%)

Time for post operator:                157.045s
  Time for path formula creation:      156.109s
    Actual computation:                151.340s
Time for strengthen operator:           24.863s
  Time for satisfiability checks:       24.285s
Time for prec operator:                425.219s
  Time for abstraction:                424.596s (Max:    33.891s, Count: 5726)
    Boolean abstraction:               363.093s
    Solving time:                      355.558s (Max:    33.295s)
    Model enumeration time:              6.951s
    Time for BDD construction:           0.075s (Max:     0.001s)
Time for merge operator:                18.769s
Time for coverage check:                 0.079s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):   386.793s

Number of BDD nodes:                               436
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                         756 (count: 12604, min: 0, max: 177, avg: 0.06)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.993s
  Time for transition matches:                         1.259s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       775757 (count: 775757, min: 1, max: 1, avg: 1.00) [1 x 775757]

CPA algorithm statistics
------------------------
Number of iterations:            444293
Max size of waitlist:            1184
Average size of waitlist:        292
Number of computed successors:   470300
Max successors for one state:    2
Number of times merged:          20150
Number of times stopped:         22185
Number of times breaked:         8

Total time for CPA algorithm:       643.279s (Max:   370.976s)
  Time for choose from waitlist:      0.508s
  Time for precision adjustment:    426.480s
  Time for transfer relation:       192.204s
  Time for merge operator:           19.237s
  Time for stop operator:             0.804s
  Time for adding to reached set:     1.473s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  44 (count: 8, min: 3, max: 9, avg: 5.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 218.438s
  Counterexample analysis:              217.326s (Max:   206.937s, Calls: 8)
    Refinement sat check:               213.197s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                 217.402s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.002s
  Precision update:                                    0.003s
  ARG update:                                          0.383s

Length of refined path (in blocks):                      12 (count: 6, min: 2, max: 2, avg: 2.00)
Number of affected states:                                6 (count: 6, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         6 (count: 6, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 6, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 190779
Max. size of reached set after ref.:  7
Avg. size of reached set before ref.: 55788.88
Avg. size of reached set after ref.:  6.14

Total time for CEGAR algorithm:     861.846s
Time for refinements:               218.566s
Average time for refinement:         27.320s
Max time for refinement:            206.956s

Code Coverage
-----------------------------
  Function coverage:      0.492
  Visited lines:          14307
  Total lines:            22389
  Line coverage:          0.639
  Visited conditions:     1355
  Total conditions:       3238
  Condition coverage:     0.418

CPAchecker general statistics
-----------------------------
Number of program locations:     10399
Number of CFA edges:             15025
Number of relevant variables:    3909
Number of functions:             626
Number of loops:                 173
Size of reached set:             45862
  Number of reached locations:   4074 (39%)
    Avg states per location:     11
    Max states per location:     1237 (at node N232)
  Number of reached functions:   308 (49%)
  Number of partitions:          45813
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N16820 (exit of function t4_intr_handler in lines 36868-36889), Function t4_intr_handler called from node N5109, stack depth 3 [440f1ebd], stack [main, cxgb_netpoll, t4_intr_handler], ABS5310, Init])
  Number of target states:       1
  Size of final wait list        75

Time for analysis setup:          9.882s
  Time for loading CPAs:          0.718s
  Time for loading parser:        0.574s
  Time for CFA construction:      8.516s
    Time for parsing file(s):     2.377s
    Time for AST to CFA:          3.001s
    Time for CFA sanity check:    0.330s
    Time for post-processing:     2.406s
      Time for var class.:        0.000s
Time for Analysis:              861.846s
CPU time for analysis:          884.350s
Total time for CPAchecker:      871.734s
Total CPU time for CPAchecker:  902.730s

Time for Garbage Collector:       3.521s (in 23 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3400MB (  3242 MiB) max;   1053MB (  1004 MiB) avg;   3555MB (  3390 MiB) peak
Used non-heap memory:             27MB (    26 MiB) max;     26MB (    25 MiB) avg;     27MB (    26 MiB) peak
Used in PS Old Gen pool:         267MB (   254 MiB) max;    226MB (   216 MiB) avg;    267MB (   254 MiB) peak
Allocated heap memory:          4755MB (  4535 MiB) max;   3755MB (  3581 MiB) avg
Allocated non-heap memory:        29MB (    28 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:  16859MB ( 16078 MiB) max;  14917MB ( 14226 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
