scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/ntdrivers/ALL.prp ../svcomp15/ntdrivers/floppy_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_317800387_tempdir
ValueAnalysisCPA statistics
---------------------------
Number of variables:                                  37958 (count: 2708, min: 0, max: 18, avg: 14.02)
Number of global variables:                           35061 (count: 2708, min: 0, max: 13, avg: 12.95)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                   15158
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.231s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.210s
Automaton transfers with branching:                0
Automaton transfer successors:                        24653 (count: 24653, min: 1, max: 1, avg: 1.00) [1 x 24653]

CPA algorithm statistics
------------------------
Number of iterations:            13426
Max size of waitlist:            48
Average size of waitlist:        22
Number of computed successors:   15158
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         1512
Number of times breaked:         33

Total time for CPA algorithm:         2.296s (Max:     0.416s)
  Time for choose from waitlist:      0.094s
  Time for precision adjustment:      0.480s
  Time for transfer relation:         1.129s
  Time for stop operator:             0.160s
  Time for adding to reached set:     0.107s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             33
Total number of targets found:           33
Time for completing refinement:           1.421s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 2780
Max. size of reached set after ref.:  2744
Avg. size of reached set before ref.: 1582.15
Avg. size of reached set after ref.:  1205.13

Total time for CEGAR algorithm:       4.501s
Time for refinements:                 2.169s
Average time for refinement:          0.065s
Max time for refinement:              0.238s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         4.238s

Code Coverage
-----------------------------
  Function coverage:      0.402
  Visited lines:          3144
  Total lines:            5847
  Line coverage:          0.538
  Visited conditions:     342
  Total conditions:       1098
  Condition coverage:     0.311

CPAchecker general statistics
-----------------------------
Number of program locations:     2483
Number of CFA edges:             3350
Number of relevant variables:    546
Number of functions:             97
Number of loops:                 19
Size of reached set:             2708
  Number of reached locations:   847 (34%)
    Avg states per location:     3
    Max states per location:     42 (at node N4138)
  Number of reached functions:   39 (40%)
  Number of partitions:          1850
    Avg size of partitions:      1
    Max size of partitions:      20 (with key [N3713 (before line 7145), Function main called from node N3696, stack depth 1 [299049c8], stack [main], Init])
  Number of target states:       1
  Size of final wait list        26

Time for analysis setup:          3.826s
  Time for loading CPAs:          0.517s
  Time for loading parser:        0.526s
  Time for CFA construction:      2.715s
    Time for parsing file(s):     0.671s
    Time for AST to CFA:          0.985s
    Time for CFA sanity check:    0.105s
    Time for post-processing:     0.709s
      Time for var class.:        0.000s
Time for Analysis:                8.745s
CPU time for analysis:           13.630s
Total time for CPAchecker:       12.577s
Total CPU time for CPAchecker:   20.280s

Time for Garbage Collector:       0.160s (in 1 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                521MB (   497 MiB) max;    261MB (   249 MiB) avg;    560MB (   534 MiB) peak
Used non-heap memory:             25MB (    23 MiB) max;     20MB (    19 MiB) avg;     25MB (    24 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        25MB (    24 MiB) max;     25MB (    23 MiB) avg
Total process virtual memory:  13707MB ( 13072 MiB) max;  13616MB ( 12985 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 2100) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
