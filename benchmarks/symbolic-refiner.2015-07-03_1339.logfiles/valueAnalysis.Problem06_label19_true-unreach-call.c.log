scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem06_label19_true-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-940372685_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               75087962 (count: 3264696, min: 0, max: 23, avg: 23.00)
Number of global variables:                        75087962 (count: 3264696, min: 0, max: 23, avg: 23.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 8359392
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               60.302s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                149.682s
  Time for transition matches:                        59.685s
  Time for transition assertions:                      0.011s
  Time for transition actions:                         0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                      8603667 (count: 8605267, min: 0, max: 1, avg: 1.00) [0 x 1600, 1 x 8603667]

CPA algorithm statistics
------------------------
Number of iterations:            7412343
Max size of waitlist:            2176
Average size of waitlist:        888
Number of computed successors:   8359392
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         940164
Number of times breaked:         25

Total time for CPA algorithm:       715.057s (Max:   314.202s)
  Time for choose from waitlist:     25.551s
  Time for precision adjustment:    138.296s
  Time for transfer relation:       305.146s
  Time for stop operator:            52.976s
  Time for adding to reached set:    57.986s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             25
Total number of targets found:           25
Time for completing refinement:          39.425s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 3046324
Max. size of reached set after ref.:  14554
Avg. size of reached set before ref.: 166768.96
Avg. size of reached set after ref.:  587.64

Total time for CEGAR algorithm:     755.002s
Time for refinements:                39.930s
Average time for refinement:          1.597s
Max time for refinement:             16.365s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          6791
  Total lines:            9151
  Line coverage:          0.742
  Visited conditions:     29326
  Total conditions:       31852
  Condition coverage:     0.921

CPAchecker general statistics
-----------------------------
Number of program locations:     17295
Number of CFA edges:             33225
Number of relevant variables:    36
Number of functions:             6
Number of loops:                 1
Size of reached set:             3264696
  Size of final wait list        2172

Time for analysis setup:          8.156s
  Time for loading CPAs:          0.892s
  Time for loading parser:        0.577s
  Time for CFA construction:      6.545s
    Time for parsing file(s):     1.453s
    Time for AST to CFA:          2.076s
    Time for CFA sanity check:    0.385s
    Time for post-processing:     2.401s
      Time for var class.:        0.000s
Time for Analysis:              755.002s
CPU time for analysis:          887.820s
Total time for CPAchecker:      763.166s
Total CPU time for CPAchecker:  902.270s

Time for Garbage Collector:     125.203s (in 39 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5460MB (  5207 MiB) max;   2928MB (  2792 MiB) avg;   8195MB (  7815 MiB) peak
Used non-heap memory:             24MB (    22 MiB) max;     22MB (    21 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:        3603MB (  3436 MiB) max;   1425MB (  1359 MiB) avg;   3960MB (  3776 MiB) peak
Allocated heap memory:          7246MB (  6911 MiB) max;   5528MB (  5272 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:  13580MB ( 12951 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
