scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop analysis.checkCounterexamples=false -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.4-simple/ALL.prp ../svcomp15/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--irda--mcp2120-sir.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1804836301_tempdir
The following configuration options were specified but are not used:
 counterexample.checker
 counterexample.checker.config 
 (CPAchecker.printConfigurationWarnings, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                    186 (count: 188, min: 0, max: 1, avg: 0.99)
Number of global variables:                             186 (count: 188, min: 0, max: 1, avg: 0.99)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                     427
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.011s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.059s
Automaton transfers with branching:                0
Automaton transfer successors:                         2415 (count: 2415, min: 1, max: 1, avg: 1.00) [1 x 2415]

CPA algorithm statistics
------------------------
Number of iterations:            371
Max size of waitlist:            13
Average size of waitlist:        6
Number of computed successors:   427
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         53
Number of times breaked:         1

Total time for CPA algorithm:         0.205s (Max:     0.107s)
  Time for choose from waitlist:      0.009s
  Time for precision adjustment:      0.033s
  Time for transfer relation:         0.130s
  Time for stop operator:             0.007s
  Time for adding to reached set:     0.012s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              1
Total number of targets found:            1
Time for completing refinement:           0.072s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 189
Max. size of reached set after ref.:  2
Avg. size of reached set before ref.: 189.00
Avg. size of reached set after ref.:  2.00

Total time for CEGAR algorithm:       0.380s
Time for refinements:                 0.174s
Average time for refinement:          0.174s
Max time for refinement:              0.174s

Code Coverage
-----------------------------
  Function coverage:      0.444
  Visited lines:          5114
  Total lines:            5162
  Line coverage:          0.991
  Visited conditions:     57
  Total conditions:       78
  Condition coverage:     0.731

CPAchecker general statistics
-----------------------------
Number of program locations:     265
Number of CFA edges:             318
Number of relevant variables:    75
Number of functions:             18
Number of loops:                 1
Size of reached set:             188
  Number of reached locations:   188 (71%)
    Avg states per location:     1
    Max states per location:     1 (at node N0)
  Number of reached functions:   8 (44%)
  Number of partitions:          188
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.856s
  Time for loading CPAs:          0.486s
  Time for loading parser:        0.683s
  Time for CFA construction:      1.606s
    Time for parsing file(s):     0.747s
    Time for AST to CFA:          0.482s
    Time for CFA sanity check:    0.034s
    Time for post-processing:     0.162s
      Time for var class.:        0.000s
Time for Analysis:                0.381s
CPU time for analysis:            0.630s
Total time for CPAchecker:        3.243s
Total CPU time for CPAchecker:    5.480s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                211MB (   202 MiB) max;    126MB (   120 MiB) avg;    222MB (   212 MiB) peak
Used non-heap memory:             20MB (    20 MiB) max;     13MB (    12 MiB) avg;     21MB (    20 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
