scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--wireless--rsi--rsi_91x.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1905650449_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 13743: Function pointer *(adapter->host_intf_write_pkt) with type int (*)(struct rsi_hw *, u8 *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13898: Function pointer *(adapter->host_intf_write_pkt) with type int (*)(struct rsi_hw *, u8 *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13816: Function pointer *(adapter->host_intf_write_pkt) with type int (*)(struct rsi_hw *, u8 *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8853: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(4U, "%s: Module init called\n", "rsi_91x_hal_module_init") (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12413: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(8U, "%s: Sending VAP capabilities frame\n", "rsi_set_vap_capabilities") (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8865: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(4U, "%s: Module exit called\n", "rsi_91x_hal_module_exit") (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Infeasible counterexample found, but could not remove it from the ARG. Therefore, we cannot prove safety. (CounterexampleCheckAlgorithm.checkCounterexample, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

line 8853: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(4U, "%s: Module init called\n", "rsi_91x_hal_module_init") (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12413: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(8U, "%s: Sending VAP capabilities frame\n", "rsi_set_vap_capabilities") (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8865: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(4U, "%s: Module exit called\n", "rsi_91x_hal_module_exit") (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

line 8853: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(4U, "%s: Module init called\n", "rsi_91x_hal_module_init") (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12413: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(8U, "%s: Sending VAP capabilities frame\n", "rsi_set_vap_capabilities") (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8865: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(4U, "%s: Module exit called\n", "rsi_91x_hal_module_exit") (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

line 8853: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(4U, "%s: Module init called\n", "rsi_91x_hal_module_init") (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12413: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(8U, "%s: Sending VAP capabilities frame\n", "rsi_set_vap_capabilities") (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8865: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(4U, "%s: Module exit called\n", "rsi_91x_hal_module_exit") (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

line 8853: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(4U, "%s: Module init called\n", "rsi_91x_hal_module_init") (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12413: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(8U, "%s: Sending VAP capabilities frame\n", "rsi_set_vap_capabilities") (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8865: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(4U, "%s: Module exit called\n", "rsi_91x_hal_module_exit") (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

line 8853: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(4U, "%s: Module init called\n", "rsi_91x_hal_module_init") (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12413: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(8U, "%s: Sending VAP capabilities frame\n", "rsi_set_vap_capabilities") (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 10374-10375: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(2U, "%s: Changed Association status: %d\n", "rsi_mac80211_bss_info_changed", __CPAchecker_TMP_1) (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12207: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(8U, "%s: Sending sta notify frame\n", "rsi_hal_send_sta_notify_frame") (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 11951: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(2U, "%s: Sending rate symbol req frame\n", "rsi_load_radio_caps") (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 8865: Ignoring parameters passed as varargs to function rsi_dbg: rsi_dbg(4U, "%s: Module exit called\n", "rsi_91x_hal_module_exit") (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                7665066 (count: 1010135, min: 0, max: 9, avg: 7.59)
Number of global variables:                         6060789 (count: 1010135, min: 0, max: 6, avg: 6.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 2020263
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                5.114s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.691s
  Time for transition matches:                         5.265s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      3299869 (count: 3299869, min: 1, max: 1, avg: 1.00) [1 x 3299869]

CPA algorithm statistics
------------------------
Number of iterations:            1779800
Max size of waitlist:            74
Average size of waitlist:        32
Number of computed successors:   2020263
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         240446
Number of times breaked:         33

Total time for CPA algorithm:       826.802s (Max:   701.769s)
  Time for choose from waitlist:      1.773s
  Time for precision adjustment:     12.412s
  Time for transfer relation:        34.307s
  Time for stop operator:           763.065s
  Time for adding to reached set:     4.854s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             33
Total number of targets found:           33
Time for completing refinement:           4.365s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 528136
Max. size of reached set after ref.:  500924
Avg. size of reached set before ref.: 133290.73
Avg. size of reached set after ref.:  104831.96

Total time for CEGAR algorithm:     832.475s
Time for refinements:                 5.490s
Average time for refinement:          0.166s
Max time for refinement:              1.887s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    6
Number of infeasible paths:         6 (100%)
Time for counterexample checks:        32.102s

Code Coverage
-----------------------------
  Function coverage:      0.343
  Visited lines:          8522
  Total lines:            10322
  Line coverage:          0.826
  Visited conditions:     395
  Total conditions:       748
  Condition coverage:     0.528

CPAchecker general statistics
-----------------------------
Number of program locations:     2429
Number of CFA edges:             3301
Number of relevant variables:    801
Number of functions:             175
Number of loops:                 39
Size of reached set:             1010135
  Size of final wait list        29

Time for analysis setup:          5.105s
  Time for loading CPAs:          0.567s
  Time for loading parser:        0.533s
  Time for CFA construction:      3.933s
    Time for parsing file(s):     1.231s
    Time for AST to CFA:          1.595s
    Time for CFA sanity check:    0.159s
    Time for post-processing:     0.698s
      Time for var class.:        0.000s
Time for Analysis:              864.962s
CPU time for analysis:          891.240s
Total time for CPAchecker:      870.073s
Total CPU time for CPAchecker:  900.550s

Time for Garbage Collector:      11.388s (in 53 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3920MB (  3739 MiB) max;   2103MB (  2006 MiB) avg;   4381MB (  4178 MiB) peak
Used non-heap memory:             28MB (    26 MiB) max;     28MB (    26 MiB) avg;     28MB (    27 MiB) peak
Used in PS Old Gen pool:        1127MB (  1074 MiB) max;    850MB (   811 MiB) avg;   1127MB (  1074 MiB) peak
Allocated heap memory:          4693MB (  4476 MiB) max;   3911MB (  3730 MiB) avg
Allocated non-heap memory:        28MB (    27 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:  15226MB ( 14521 MiB) max;  13677MB ( 13043 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
