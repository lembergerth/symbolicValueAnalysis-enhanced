scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem06_label22_true-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_932301141_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               160977046 (count: 6999004, min: 0, max: 23, avg: 23.00)
Number of global variables:                        160977046 (count: 6999004, min: 0, max: 23, avg: 23.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 8953636
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               54.093s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 48.605s
  Time for transition matches:                        18.561s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                      9174379 (count: 9175706, min: 0, max: 1, avg: 1.00) [0 x 1327, 1 x 9174379]

CPA algorithm statistics
------------------------
Number of iterations:            8078332
Max size of waitlist:            4726
Average size of waitlist:        1991
Number of computed successors:   8953636
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         868603
Number of times breaked:         25

Total time for CPA algorithm:       583.750s (Max:   541.190s)
  Time for choose from waitlist:      8.719s
  Time for precision adjustment:    111.258s
  Time for transfer relation:       324.123s
  Time for stop operator:            63.011s
  Time for adding to reached set:    25.766s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             25
Total number of targets found:           25
Time for completing refinement:          23.154s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 248573
Max. size of reached set after ref.:  6026
Avg. size of reached set before ref.: 43687.20
Avg. size of reached set after ref.:  246.00

Total time for CEGAR algorithm:     607.221s
Time for refinements:                23.464s
Average time for refinement:          0.938s
Max time for refinement:              2.309s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          7122
  Total lines:            9151
  Line coverage:          0.778
  Visited conditions:     29702
  Total conditions:       31852
  Condition coverage:     0.933

CPAchecker general statistics
-----------------------------
Number of program locations:     17295
Number of CFA edges:             33225
Number of relevant variables:    36
Number of functions:             6
Number of loops:                 1
Size of reached set:             6999004
  Size of final wait list        4723

Time for analysis setup:          7.323s
  Time for loading CPAs:          0.622s
  Time for loading parser:        0.580s
  Time for CFA construction:      6.033s
    Time for parsing file(s):     1.423s
    Time for AST to CFA:          1.795s
    Time for CFA sanity check:    0.350s
    Time for post-processing:     2.226s
      Time for var class.:        0.000s
Time for Analysis:              607.221s
CPU time for analysis:          888.630s
Total time for CPAchecker:      614.551s
Total CPU time for CPAchecker:  901.960s

Time for Garbage Collector:     276.980s (in 44 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6495MB (  6194 MiB) max;   3199MB (  3051 MiB) avg;   8940MB (  8525 MiB) peak
Used non-heap memory:             24MB (    23 MiB) max;     22MB (    21 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:        4673MB (  4456 MiB) max;   1823MB (  1738 MiB) avg;   4673MB (  4456 MiB) peak
Allocated heap memory:          9240MB (  8812 MiB) max;   5886MB (  5613 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
