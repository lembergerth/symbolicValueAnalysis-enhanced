scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/loops/ALL.prp ../svcomp15/loops/bubble_sort_false-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_87144479_tempdir
Infeasible counterexample found, but could not remove it from the ARG. Therefore, we cannot prove safety. (CounterexampleCheckAlgorithm.checkCounterexample, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                      0 (count: 84, min: 0, max: 0, avg: 0.00)
Number of global variables:                               0 (count: 84, min: 0, max: 0, avg: 0.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                      92
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.004s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                          336 (count: 337, min: 0, max: 1, avg: 1.00) [0, 1 x 336]

CPA algorithm statistics
------------------------
Number of iterations:            86
Max size of waitlist:            2
Average size of waitlist:        1
Number of computed successors:   92
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         1
Number of times breaked:         5

Total time for CPA algorithm:         0.064s (Max:     0.051s)
  Time for choose from waitlist:      0.004s
  Time for precision adjustment:      0.014s
  Time for transfer relation:         0.041s
  Time for stop operator:             0.000s
  Time for adding to reached set:     0.002s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              5
Total number of targets found:            5
Time for completing refinement:           0.147s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     0
Number of failed refinements:         0
Max. size of reached set before ref.: 84
Max. size of reached set after ref.:  0
Avg. size of reached set before ref.: 66.60
Avg. size of reached set after ref.:  NaN

Total time for CEGAR algorithm:       0.307s
Time for refinements:                 0.243s
Average time for refinement:          0.048s
Max time for refinement:              0.076s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    5
Number of infeasible paths:         4 (80%)
Time for counterexample checks:         1.104s

Code Coverage
-----------------------------
  Function coverage:      0.538
  Visited lines:          288
  Total lines:            700
  Line coverage:          0.411
  Visited conditions:     14
  Total conditions:       48
  Condition coverage:     0.292

CPAchecker general statistics
-----------------------------
Number of program locations:     242
Number of CFA edges:             299
Number of relevant variables:    198
Number of functions:             13
Number of loops:                 6
Size of reached set:             84
  Number of reached locations:   76 (31%)
    Avg states per location:     1
    Max states per location:     5 (at node N1)
  Number of reached functions:   7 (54%)
  Number of partitions:          84
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        2

Time for analysis setup:          1.889s
  Time for loading CPAs:          0.420s
  Time for loading parser:        0.653s
  Time for CFA construction:      0.737s
    Time for parsing file(s):     0.289s
    Time for AST to CFA:          0.203s
    Time for CFA sanity check:    0.033s
    Time for post-processing:     0.159s
      Time for var class.:        0.000s
Time for Analysis:                1.413s
CPU time for analysis:            2.380s
Total time for CPAchecker:        3.308s
Total CPU time for CPAchecker:    5.430s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                254MB (   242 MiB) max;    139MB (   132 MiB) avg;    254MB (   242 MiB) peak
Used non-heap memory:             21MB (    20 MiB) max;     16MB (    15 MiB) avg;     21MB (    20 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13665MB ( 13032 MiB) max;  13612MB ( 12981 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 35) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
