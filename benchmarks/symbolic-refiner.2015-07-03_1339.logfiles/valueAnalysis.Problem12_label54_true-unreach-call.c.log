scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem12_label54_true-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_312501464_tempdir
Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               34415245 (count: 6883051, min: 0, max: 5, avg: 5.00)
Number of global variables:                        34415245 (count: 6883051, min: 0, max: 5, avg: 5.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 7843096
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               13.676s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 35.909s
  Time for transition matches:                        13.957s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                      8017670 (count: 8019569, min: 0, max: 1, avg: 1.00) [0 x 1899, 1 x 8017670]

CPA algorithm statistics
------------------------
Number of iterations:            7241609
Max size of waitlist:            21304
Average size of waitlist:        10304
Number of computed successors:   7843096
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         578697
Number of times breaked:         5

Total time for CPA algorithm:       705.157s (Max:   689.795s)
  Time for choose from waitlist:      6.994s
  Time for precision adjustment:     36.585s
  Time for transfer relation:        95.092s
  Time for stop operator:           505.731s
  Time for adding to reached set:    23.534s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              5
Total number of targets found:            5
Time for completing refinement:           3.825s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 329226
Max. size of reached set after ref.:  2
Avg. size of reached set before ref.: 76271.80
Avg. size of reached set after ref.:  2.00

Total time for CEGAR algorithm:     709.119s
Time for refinements:                 3.962s
Average time for refinement:          0.792s
Max time for refinement:              1.800s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          3944
  Total lines:            3979
  Line coverage:          0.991
  Visited conditions:     13251
  Total conditions:       13318
  Condition coverage:     0.995

CPAchecker general statistics
-----------------------------
Number of program locations:     7552
Number of CFA edges:             14214
Number of relevant variables:    10
Number of functions:             5
Number of loops:                 1
Size of reached set:             6883051
  Size of final wait list        21302

Time for analysis setup:          5.839s
  Time for loading CPAs:          0.537s
  Time for loading parser:        0.557s
  Time for CFA construction:      4.660s
    Time for parsing file(s):     0.964s
    Time for AST to CFA:          1.412s
    Time for CFA sanity check:    0.299s
    Time for post-processing:     1.776s
      Time for var class.:        0.000s
Time for Analysis:              709.119s
CPU time for analysis:          889.510s
Total time for CPAchecker:      714.965s
Total CPU time for CPAchecker:  900.130s

Time for Garbage Collector:     178.774s (in 66 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6694MB (  6383 MiB) max;   3937MB (  3754 MiB) avg;   8002MB (  7631 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:        4329MB (  4128 MiB) max;   2558MB (  2439 MiB) avg;   4429MB (  4223 MiB) peak
Allocated heap memory:          8461MB (  8069 MiB) max;   6247MB (  5958 MiB) avg
Allocated non-heap memory:        46MB (    43 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
