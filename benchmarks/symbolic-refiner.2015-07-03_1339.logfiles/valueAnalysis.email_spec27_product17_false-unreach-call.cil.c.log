scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/product-lines/ALL.prp ../svcomp15/product-lines/email_spec27_product17_false-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1862403487_tempdir
line 1626: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                4529097 (count: 105292, min: 0, max: 67, avg: 43.01)
Number of global variables:                         3102829 (count: 105292, min: 0, max: 31, avg: 29.47)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 7611943
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               52.179s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 57.707s
  Time for transition matches:                        23.057s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                     10567945 (count: 10567945, min: 1, max: 1, avg: 1.00) [1 x 10567945]

CPA algorithm statistics
------------------------
Number of iterations:            6498816
Max size of waitlist:            1822
Average size of waitlist:        435
Number of computed successors:   7611943
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         1107021
Number of times breaked:         349

Total time for CPA algorithm:       440.539s (Max:    46.890s)
  Time for choose from waitlist:      8.356s
  Time for precision adjustment:     76.624s
  Time for transfer relation:       113.383s
  Time for stop operator:           178.722s
  Time for adding to reached set:    16.704s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:            349
Total number of targets found:          349
Time for completing refinement:          31.861s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                349
Number of successful refinements:     348
Number of failed refinements:         0
Max. size of reached set before ref.: 825281
Max. size of reached set after ref.:  366846
Avg. size of reached set before ref.: 226012.91
Avg. size of reached set after ref.:  207970.06

Total time for CEGAR algorithm:     496.579s
Time for refinements:                33.432s
Average time for refinement:          0.095s
Max time for refinement:              2.392s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         0.799s

Code Coverage
-----------------------------
  Function coverage:      0.611
  Visited lines:          780
  Total lines:            1631
  Line coverage:          0.478
  Visited conditions:     155
  Total conditions:       488
  Condition coverage:     0.318

CPAchecker general statistics
-----------------------------
Number of program locations:     1136
Number of CFA edges:             1506
Number of relevant variables:    383
Number of functions:             108
Number of loops:                 4
Size of reached set:             105292
  Number of reached locations:   554 (49%)
    Avg states per location:     190
    Max states per location:     1168 (at node N1414)
  Number of reached functions:   66 (61%)
  Number of partitions:          82192
    Avg size of partitions:      1
    Max size of partitions:      838 (with key [N442 (before lines 1135-1357), Function test called from node N281, stack depth 2 [170316d8], stack [main, test], Init])
  Number of target states:       1
  Size of final wait list        841

Time for analysis setup:          2.732s
  Time for loading CPAs:          0.526s
  Time for loading parser:        0.572s
  Time for CFA construction:      1.523s
    Time for parsing file(s):     0.428s
    Time for AST to CFA:          0.458s
    Time for CFA sanity check:    0.091s
    Time for post-processing:     0.357s
      Time for var class.:        0.000s
Time for Analysis:              497.458s
CPU time for analysis:          520.930s
Total time for CPAchecker:      500.197s
Total CPU time for CPAchecker:  525.610s

Time for Garbage Collector:      15.012s (in 32 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4176MB (  3982 MiB) max;   2076MB (  1979 MiB) avg;   4668MB (  4452 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     22MB (    21 MiB) avg;     24MB (    22 MiB) peak
Used in PS Old Gen pool:        1196MB (  1141 MiB) max;    630MB (   600 MiB) avg;   1312MB (  1251 MiB) peak
Allocated heap memory:          4711MB (  4493 MiB) max;   4317MB (  4117 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:  13665MB ( 13032 MiB) max;  13580MB ( 12950 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 1375) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
