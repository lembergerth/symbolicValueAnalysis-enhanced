scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem13_label16_false-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-169174664_tempdir
Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               68565071 (count: 8564049, min: 0, max: 9, avg: 8.01)
Number of global variables:                        51384282 (count: 8564049, min: 0, max: 6, avg: 6.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                11116659
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               24.564s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 50.389s
  Time for transition matches:                        20.784s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     11280764 (count: 11282484, min: 0, max: 1, avg: 1.00) [0 x 1720, 1 x 11280764]

CPA algorithm statistics
------------------------
Number of iterations:            10571798
Max size of waitlist:            14828
Average size of waitlist:        6314
Number of computed successors:   11116659
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         525734
Number of times breaked:         8

Total time for CPA algorithm:       649.408s (Max:   577.942s)
  Time for choose from waitlist:     10.756s
  Time for precision adjustment:     62.603s
  Time for transfer relation:       174.347s
  Time for stop operator:           312.932s
  Time for adding to reached set:    30.477s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              8
Total number of targets found:            8
Time for completing refinement:           9.091s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 1298040
Max. size of reached set after ref.:  165894
Avg. size of reached set before ref.: 274099.13
Avg. size of reached set after ref.:  20739.50

Total time for CEGAR algorithm:     658.692s
Time for refinements:                 9.244s
Average time for refinement:          1.155s
Max time for refinement:              3.410s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          2674
  Total lines:            4769
  Line coverage:          0.561
  Visited conditions:     13176
  Total conditions:       15642
  Condition coverage:     0.842

CPAchecker general statistics
-----------------------------
Number of program locations:     8994
Number of CFA edges:             16818
Number of relevant variables:    11
Number of functions:             5
Number of loops:                 1
Size of reached set:             8564049
  Size of final wait list        14826

Time for analysis setup:          5.895s
  Time for loading CPAs:          0.544s
  Time for loading parser:        0.490s
  Time for CFA construction:      4.782s
    Time for parsing file(s):     1.159s
    Time for AST to CFA:          1.603s
    Time for CFA sanity check:    0.224s
    Time for post-processing:     1.546s
      Time for var class.:        0.000s
Time for Analysis:              658.692s
CPU time for analysis:          889.270s
Total time for CPAchecker:      664.593s
Total CPU time for CPAchecker:  900.180s

Time for Garbage Collector:     229.931s (in 69 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               7142MB (  6811 MiB) max;   3767MB (  3593 MiB) avg;   9685MB (  9236 MiB) peak
Used non-heap memory:             24MB (    22 MiB) max;     21MB (    20 MiB) avg;     24MB (    22 MiB) peak
Used in PS Old Gen pool:        5659MB (  5397 MiB) max;   2510MB (  2394 MiB) avg;   5901MB (  5627 MiB) peak
Allocated heap memory:          9184MB (  8759 MiB) max;   6165MB (  5879 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  13580MB ( 12951 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
