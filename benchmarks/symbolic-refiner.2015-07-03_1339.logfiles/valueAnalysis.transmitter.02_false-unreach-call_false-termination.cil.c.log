scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/systemc/ALL.prp ../svcomp15/systemc/transmitter.02_false-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1359114536_tempdir
ValueAnalysisCPA statistics
---------------------------
Number of variables:                                   5667 (count: 459, min: 0, max: 15, avg: 12.35)
Number of global variables:                            5484 (count: 459, min: 0, max: 12, avg: 11.95)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                    8360
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.144s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.141s
Automaton transfers with branching:                0
Automaton transfer successors:                        12003 (count: 12003, min: 1, max: 1, avg: 1.00) [1 x 12003]

CPA algorithm statistics
------------------------
Number of iterations:            7521
Max size of waitlist:            24
Average size of waitlist:        9
Number of computed successors:   8360
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         649
Number of times breaked:         20

Total time for CPA algorithm:         1.748s (Max:     0.156s)
  Time for choose from waitlist:      0.065s
  Time for precision adjustment:      0.340s
  Time for transfer relation:         0.822s
  Time for stop operator:             0.133s
  Time for adding to reached set:     0.173s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             20
Total number of targets found:           20
Time for completing refinement:           1.531s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     19
Number of failed refinements:         0
Max. size of reached set before ref.: 1033
Max. size of reached set after ref.:  721
Avg. size of reached set before ref.: 579.15
Avg. size of reached set after ref.:  203.74

Total time for CEGAR algorithm:       3.485s
Time for refinements:                 1.728s
Average time for refinement:          0.086s
Max time for refinement:              0.301s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         0.635s

Code Coverage
-----------------------------
  Function coverage:      0.857
  Visited lines:          248
  Total lines:            298
  Line coverage:          0.832
  Visited conditions:     58
  Total conditions:       92
  Condition coverage:     0.630

CPAchecker general statistics
-----------------------------
Number of program locations:     270
Number of CFA edges:             353
Number of relevant variables:    34
Number of functions:             21
Number of loops:                 2
Size of reached set:             459
  Number of reached locations:   196 (73%)
    Avg states per location:     2
    Max states per location:     9 (at node N217)
  Number of reached functions:   18 (86%)
  Number of partitions:          362
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N217, Function eval called from node N371, stack depth 3 [b326f69], stack [main, start_simulation, eval], Init])
  Number of target states:       1
  Size of final wait list        12

Time for analysis setup:          1.718s
  Time for loading CPAs:          0.412s
  Time for loading parser:        0.584s
  Time for CFA construction:      0.638s
    Time for parsing file(s):     0.305s
    Time for AST to CFA:          0.162s
    Time for CFA sanity check:    0.027s
    Time for post-processing:     0.110s
      Time for var class.:        0.000s
Time for Analysis:                4.123s
CPU time for analysis:            7.830s
Total time for CPAchecker:        5.847s
Total CPU time for CPAchecker:   10.660s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                285MB (   272 MiB) max;    174MB (   166 MiB) avg;    296MB (   282 MiB) peak
Used non-heap memory:             22MB (    21 MiB) max;     18MB (    17 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13665MB ( 13032 MiB) max;  13588MB ( 12958 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 11) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
