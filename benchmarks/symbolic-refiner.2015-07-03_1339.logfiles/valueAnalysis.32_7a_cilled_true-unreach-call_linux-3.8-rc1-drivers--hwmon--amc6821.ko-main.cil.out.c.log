scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--amc6821.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_159974151_tempdir
ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 161352 (count: 10091, min: 0, max: 16, avg: 15.99)
Number of global variables:                          161352 (count: 10091, min: 0, max: 16, avg: 15.99)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                   13671
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.222s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.219s
Automaton transfers with branching:                0
Automaton transfer successors:                        23016 (count: 23016, min: 1, max: 1, avg: 1.00) [1 x 23016]

CPA algorithm statistics
------------------------
Number of iterations:            11654
Max size of waitlist:            43
Average size of waitlist:        21
Number of computed successors:   13671
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         1519
Number of times breaked:         16

Total time for CPA algorithm:         2.266s (Max:     1.469s)
  Time for choose from waitlist:      0.082s
  Time for precision adjustment:      0.654s
  Time for transfer relation:         0.931s
  Time for stop operator:             0.116s
  Time for adding to reached set:     0.170s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             16
Total number of targets found:           16
Time for completing refinement:           0.785s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 162
Max. size of reached set after ref.:  7
Avg. size of reached set before ref.: 135.38
Avg. size of reached set after ref.:  6.50

Total time for CEGAR algorithm:       3.744s
Time for refinements:                 1.476s
Average time for refinement:          0.092s
Max time for refinement:              0.213s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.615
  Visited lines:          4943
  Total lines:            5157
  Line coverage:          0.959
  Visited conditions:     519
  Total conditions:       638
  Condition coverage:     0.813

CPAchecker general statistics
-----------------------------
Number of program locations:     1685
Number of CFA edges:             2275
Number of relevant variables:    512
Number of functions:             91
Number of loops:                 4
Size of reached set:             10091
  Number of reached locations:   1352 (80%)
    Avg states per location:     7
    Max states per location:     84 (at node N2607)
  Number of reached functions:   56 (62%)
  Number of partitions:          9638
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1169 (before line 5027), Function main called from node N1096, stack depth 1 [7ded679d], stack [main], Init])
  Number of target states:       0

Time for analysis setup:          3.448s
  Time for loading CPAs:          0.560s
  Time for loading parser:        0.694s
  Time for CFA construction:      2.110s
    Time for parsing file(s):     0.609s
    Time for AST to CFA:          0.740s
    Time for CFA sanity check:    0.088s
    Time for post-processing:     0.516s
      Time for var class.:        0.000s
Time for Analysis:                3.790s
CPU time for analysis:            6.990s
Total time for CPAchecker:        7.244s
Total CPU time for CPAchecker:   12.790s

Time for Garbage Collector:       0.146s (in 1 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                529MB (   504 MiB) max;    247MB (   236 MiB) avg;    562MB (   536 MiB) peak
Used non-heap memory:             22MB (    21 MiB) max;     17MB (    16 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
