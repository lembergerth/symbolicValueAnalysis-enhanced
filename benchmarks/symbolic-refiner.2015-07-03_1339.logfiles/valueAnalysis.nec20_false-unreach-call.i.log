scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/loops/ALL.prp ../svcomp15/loops/nec20_false-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1496114425_tempdir
ValueAnalysisCPA statistics
---------------------------
Number of variables:                                     28 (count: 22, min: 0, max: 2, avg: 1.27)
Number of global variables:                               0 (count: 22, min: 0, max: 0, avg: 0.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                      33
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.004s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                           67 (count: 67, min: 1, max: 1, avg: 1.00) [1 x 67]

CPA algorithm statistics
------------------------
Number of iterations:            29
Max size of waitlist:            3
Average size of waitlist:        1
Number of computed successors:   33
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         1
Number of times breaked:         2

Total time for CPA algorithm:         0.046s (Max:     0.040s)
  Time for choose from waitlist:      0.001s
  Time for precision adjustment:      0.008s
  Time for transfer relation:         0.032s
  Time for stop operator:             0.000s
  Time for adding to reached set:     0.001s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              2
Total number of targets found:            2
Time for completing refinement:           0.041s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 22
Max. size of reached set after ref.:  7
Avg. size of reached set before ref.: 20.00
Avg. size of reached set after ref.:  7.00

Total time for CEGAR algorithm:       0.097s
Time for refinements:                 0.051s
Average time for refinement:          0.025s
Max time for refinement:              0.028s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1
Number of infeasible paths:         0 (0%)
Time for counterexample checks:         0.190s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          17
  Total lines:            23
  Line coverage:          0.739
  Visited conditions:     6
  Total conditions:       10
  Condition coverage:     0.600

CPAchecker general statistics
-----------------------------
Number of program locations:     26
Number of CFA edges:             31
Number of relevant variables:    6
Number of functions:             2
Number of loops:                 1
Size of reached set:             22
  Number of reached locations:   18 (69%)
    Avg states per location:     1
    Max states per location:     3 (at node N23)
  Number of reached functions:   2 (100%)
  Number of partitions:          18
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N23 (before line 24), Function main called from node N9, stack depth 1 [64555d1a], stack [main], Init])
  Number of target states:       1
  Size of final wait list        3

Time for analysis setup:          1.515s
  Time for loading CPAs:          0.398s
  Time for loading parser:        0.574s
  Time for CFA construction:      0.467s
    Time for parsing file(s):     0.259s
    Time for AST to CFA:          0.113s
    Time for CFA sanity check:    0.004s
    Time for post-processing:     0.067s
      Time for var class.:        0.000s
Time for Analysis:                0.288s
CPU time for analysis:            0.350s
Total time for CPAchecker:        1.808s
Total CPU time for CPAchecker:    2.780s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                159MB (   152 MiB) max;     95MB (    91 MiB) avg;    159MB (   152 MiB) peak
Used non-heap memory:             20MB (    19 MiB) max;     13MB (    12 MiB) avg;     21MB (    20 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13665MB ( 13032 MiB) max;  13584MB ( 12955 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 5) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
