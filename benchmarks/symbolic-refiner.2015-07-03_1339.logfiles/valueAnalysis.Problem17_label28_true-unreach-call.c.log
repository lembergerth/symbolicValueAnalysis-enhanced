scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem17_label28_true-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1504374506_tempdir
Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               25700365 (count: 5140075, min: 0, max: 5, avg: 5.00)
Number of global variables:                        25700365 (count: 5140075, min: 0, max: 5, avg: 5.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 7276787
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               23.886s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 30.303s
  Time for transition matches:                        11.896s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.029s
Automaton transfers with branching:                0
Automaton transfer successors:                      7455272 (count: 7460530, min: 0, max: 1, avg: 1.00) [0 x 5258, 1 x 7455272]

CPA algorithm statistics
------------------------
Number of iterations:            6388310
Max size of waitlist:            24253
Average size of waitlist:        10107
Number of computed successors:   7276787
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         853973
Number of times breaked:         5

Total time for CPA algorithm:       759.029s (Max:   708.888s)
  Time for choose from waitlist:      5.849s
  Time for precision adjustment:     43.614s
  Time for transfer relation:        82.940s
  Time for stop operator:           580.383s
  Time for adding to reached set:    14.199s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              5
Total number of targets found:            5
Time for completing refinement:           6.758s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 500524
Max. size of reached set after ref.:  2
Avg. size of reached set before ref.: 256550.00
Avg. size of reached set after ref.:  2.00

Total time for CEGAR algorithm:     765.923s
Time for refinements:                 6.894s
Average time for refinement:          1.378s
Max time for refinement:              2.427s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          1338
  Total lines:            2167
  Line coverage:          0.617
  Visited conditions:     6486
  Total conditions:       7756
  Condition coverage:     0.836

CPAchecker general statistics
-----------------------------
Number of program locations:     4535
Number of CFA edges:             8414
Number of relevant variables:    8
Number of functions:             3
Number of loops:                 1
Size of reached set:             5140075
  Size of final wait list        24251

Time for analysis setup:          4.486s
  Time for loading CPAs:          0.491s
  Time for loading parser:        0.536s
  Time for CFA construction:      3.379s
    Time for parsing file(s):     0.791s
    Time for AST to CFA:          1.070s
    Time for CFA sanity check:    0.262s
    Time for post-processing:     1.078s
      Time for var class.:        0.000s
Time for Analysis:              765.923s
CPU time for analysis:          893.370s
Total time for CPAchecker:      770.414s
Total CPU time for CPAchecker:  901.280s

Time for Garbage Collector:     123.347s (in 69 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6144MB (  5860 MiB) max;   3399MB (  3241 MiB) avg;   6995MB (  6671 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     20MB (    19 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:        3407MB (  3249 MiB) max;   1952MB (  1862 MiB) avg;   3444MB (  3284 MiB) peak
Allocated heap memory:          7448MB (  7103 MiB) max;   5766MB (  5499 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  13580MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
