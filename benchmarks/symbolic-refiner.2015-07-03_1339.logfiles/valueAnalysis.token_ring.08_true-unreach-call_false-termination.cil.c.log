scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/systemc/ALL.prp ../svcomp15/systemc/token_ring.08_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_2045634513_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               98948865 (count: 4302138, min: 0, max: 23, avg: 23.00)
Number of global variables:                        98948865 (count: 4302138, min: 0, max: 23, avg: 23.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                15567981
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               72.247s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 76.513s
  Time for transition matches:                        30.191s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     23420436 (count: 23420436, min: 1, max: 1, avg: 1.00) [1 x 23420436]

CPA algorithm statistics
------------------------
Number of iterations:            13486535
Max size of waitlist:            8688
Average size of waitlist:        2378
Number of computed successors:   15567981
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         2084366
Number of times breaked:         28

Total time for CPA algorithm:       766.344s (Max:   305.510s)
  Time for choose from waitlist:     11.441s
  Time for precision adjustment:    127.465s
  Time for transfer relation:       195.496s
  Time for stop operator:           261.966s
  Time for adding to reached set:   107.759s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             28
Total number of targets found:           28
Time for completing refinement:          37.062s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 3749592
Max. size of reached set after ref.:  2037740
Avg. size of reached set before ref.: 428440.29
Avg. size of reached set after ref.:  100530.36

Total time for CEGAR algorithm:     804.499s
Time for refinements:                37.357s
Average time for refinement:          1.334s
Max time for refinement:             15.227s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.879
  Visited lines:          660
  Total lines:            734
  Line coverage:          0.899
  Visited conditions:     218
  Total conditions:       280
  Condition coverage:     0.779

CPAchecker general statistics
-----------------------------
Number of program locations:     649
Number of CFA edges:             852
Number of relevant variables:    91
Number of functions:             33
Number of loops:                 2
Size of reached set:             4302138
  Size of final wait list        2214

Time for analysis setup:          2.003s
  Time for loading CPAs:          0.447s
  Time for loading parser:        0.578s
  Time for CFA construction:      0.905s
    Time for parsing file(s):     0.344s
    Time for AST to CFA:          0.246s
    Time for CFA sanity check:    0.057s
    Time for post-processing:     0.187s
      Time for var class.:        0.000s
Time for Analysis:              804.499s
CPU time for analysis:         1005.690s
Total time for CPAchecker:      806.508s
Total CPU time for CPAchecker: 1009.020s

Time for Garbage Collector:     196.978s (in 71 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6056MB (  5775 MiB) max;   3000MB (  2861 MiB) avg;   7690MB (  7334 MiB) peak
Used non-heap memory:             22MB (    21 MiB) max;     20MB (    19 MiB) avg;     22MB (    21 MiB) peak
Used in PS Old Gen pool:        3462MB (  3301 MiB) max;   1692MB (  1613 MiB) avg;   3891MB (  3710 MiB) peak
Allocated heap memory:          7108MB (  6779 MiB) max;   5693MB (  5430 MiB) avg
Allocated non-heap memory:        45MB (    42 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
