scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem05_label57_false-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-451763975_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               13021289 (count: 1246784, min: 0, max: 11, avg: 10.44)
Number of global variables:                         9974256 (count: 1246784, min: 0, max: 8, avg: 8.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 6818223
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               43.531s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                177.704s
  Time for transition matches:                        73.135s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      6895335 (count: 6895446, min: 0, max: 1, avg: 1.00) [0 x 111, 1 x 6895335]

CPA algorithm statistics
------------------------
Number of iterations:            6460335
Max size of waitlist:            607
Average size of waitlist:        344
Number of computed successors:   6818223
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         355684
Number of times breaked:         13

Total time for CPA algorithm:       718.025s (Max:   485.524s)
  Time for choose from waitlist:     33.330s
  Time for precision adjustment:    119.810s
  Time for transfer relation:       309.937s
  Time for stop operator:            41.004s
  Time for adding to reached set:    45.074s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             13
Total number of targets found:           13
Time for completing refinement:          73.513s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 4594109
Max. size of reached set after ref.:  585725
Avg. size of reached set before ref.: 446281.77
Avg. size of reached set after ref.:  45069.77

Total time for CEGAR algorithm:     792.165s
Time for refinements:                74.002s
Average time for refinement:          5.692s
Max time for refinement:             45.537s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          3100
  Total lines:            10607
  Line coverage:          0.292
  Visited conditions:     24365
  Total conditions:       35260
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     19906
Number of CFA edges:             37543
Number of relevant variables:    17
Number of functions:             9
Number of loops:                 1
Size of reached set:             1246784
  Size of final wait list        322

Time for analysis setup:          9.184s
  Time for loading CPAs:          1.305s
  Time for loading parser:        0.636s
  Time for CFA construction:      7.085s
    Time for parsing file(s):     1.379s
    Time for AST to CFA:          2.008s
    Time for CFA sanity check:    0.607s
    Time for post-processing:     2.843s
      Time for var class.:        0.000s
Time for Analysis:              792.165s
CPU time for analysis:          883.870s
Total time for CPAchecker:      801.367s
Total CPU time for CPAchecker:  900.380s

Time for Garbage Collector:      80.432s (in 29 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5578MB (  5320 MiB) max;   2768MB (  2640 MiB) avg;   7425MB (  7081 MiB) peak
Used non-heap memory:             24MB (    22 MiB) max;     22MB (    21 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:        3523MB (  3359 MiB) max;   1227MB (  1170 MiB) avg;   3523MB (  3359 MiB) peak
Allocated heap memory:          8268MB (  7885 MiB) max;   5235MB (  4992 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:  13581MB ( 12952 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
