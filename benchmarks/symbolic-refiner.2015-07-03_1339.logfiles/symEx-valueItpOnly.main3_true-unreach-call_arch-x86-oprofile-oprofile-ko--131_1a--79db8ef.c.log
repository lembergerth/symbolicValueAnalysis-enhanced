scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=VALUES_ONLY -setprop cpa.constraints.lessOrEqualType=SUBSET -setprop cpa.value.refinement.pathSlicing=false -setprop cpa.value.refinement.prefixPreference=NONE -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-commit-tester/ALL.prp ../svcomp15/ldv-commit-tester/main3_true-unreach-call_arch-x86-oprofile-oprofile-ko--131_1a--79db8ef.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_592482220_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 10278: Function pointer *(apic->read) with type u32  (*)(u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10290: Function pointer *(apic->write) with type void (*)(u32 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9388: Function pointer *(timer___0->base->get_time) with type ktime_t  (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 10394-10396: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 14113-14115: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_up (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_resume to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_shutdown to nmi_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_up (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_down (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_switch to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_switch to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_down to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_switch (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_up to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to switch_worker (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to switch_worker (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_down (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_switch (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from switch_worker to nmi_setup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_shutdown to nmi_cpu_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_down to nmi_cpu_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_shutdown to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_shutdown to nmi_cpu_down (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_shutdown to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_shutdown to nmi_cpu_switch (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                      0 (count: 751871, min: 0, max: 0, avg: 0.00)
Number of global variables:                               0 (count: 751871, min: 0, max: 0, avg: 0.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  829980
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                1.838s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     1.692s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 1392ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.201s
  Time for transition matches:                         3.915s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1372758 (count: 1372758, min: 1, max: 1, avg: 1.00) [1 x 1372758]

CPA algorithm statistics
------------------------
Number of iterations:            751871
Max size of waitlist:            81
Average size of waitlist:        47
Number of computed successors:   829980
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         78110
Number of times breaked:         0

Total time for CPA algorithm:        49.225s (Max:    49.225s)
  Time for choose from waitlist:      1.275s
  Time for precision adjustment:      8.792s
  Time for transfer relation:        27.748s
  Time for stop operator:             1.857s
  Time for adding to reached set:     2.820s

SymbolicValueAnalysisRefiner statistics
---------------------------------------
Total number of refinements:              0
Total number of targets found:            0
Time for completing refinement:           0.000s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of sliced prefixes:                              0 (count: 0, min: 0, max: 0, avg: 0.00)

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.635
  Visited lines:          6959
  Total lines:            9258
  Line coverage:          0.752
  Visited conditions:     868
  Total conditions:       1508
  Condition coverage:     0.576

CPAchecker general statistics
-----------------------------
Number of program locations:     4496
Number of CFA edges:             6409
Number of relevant variables:    1453
Number of functions:             288
Number of loops:                 76
Size of reached set:             751871
  Number of reached locations:   2743 (61%)
    Avg states per location:     274
    Max states per location:     34094 (at node N7068)
  Number of reached functions:   183 (64%)
  Number of partitions:          751871
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.950s
  Time for loading CPAs:          0.640s
  Time for loading parser:        0.549s
  Time for CFA construction:      4.674s
    Time for parsing file(s):     1.196s
    Time for AST to CFA:          1.994s
    Time for CFA sanity check:    0.193s
    Time for post-processing:     1.071s
      Time for var class.:        0.000s
Time for Analysis:               49.226s
CPU time for analysis:           56.090s
Total time for CPAchecker:       55.181s
Total CPU time for CPAchecker:   67.160s

Time for Garbage Collector:       3.433s (in 6 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               2641MB (  2518 MiB) max;   1059MB (  1010 MiB) avg;   3009MB (  2870 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     22MB (    21 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:         565MB (   539 MiB) max;    248MB (   237 MiB) avg;    565MB (   539 MiB) peak
Allocated heap memory:          3611MB (  3444 MiB) max;   2970MB (  2833 MiB) avg
Allocated non-heap memory:        26MB (    25 MiB) max;     26MB (    24 MiB) avg
Total process virtual memory:  13597MB ( 12967 MiB) max;  13595MB ( 12965 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
