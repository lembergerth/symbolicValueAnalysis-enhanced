scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem17_label50_false-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-532965332_tempdir
Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               28191130 (count: 4034043, min: 0, max: 8, avg: 6.99)
Number of global variables:                        20170205 (count: 4034043, min: 0, max: 5, avg: 5.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 9641453
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               23.718s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 40.705s
  Time for transition matches:                        15.567s
  Time for transition assertions:                      0.018s
  Time for transition actions:                         0.053s
Automaton transfers with branching:                0
Automaton transfer successors:                      9785691 (count: 9796898, min: 0, max: 1, avg: 1.00) [0 x 11207, 1 x 9785691]

CPA algorithm statistics
------------------------
Number of iterations:            9381006
Max size of waitlist:            14610
Average size of waitlist:        7137
Number of computed successors:   9641453
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         235477
Number of times breaked:         22

Total time for CPA algorithm:       687.385s (Max:   127.458s)
  Time for choose from waitlist:      8.864s
  Time for precision adjustment:     54.720s
  Time for transfer relation:       122.778s
  Time for stop operator:           426.060s
  Time for adding to reached set:    27.729s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             22
Total number of targets found:           22
Time for completing refinement:          45.311s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 5804657
Max. size of reached set after ref.:  4678935
Avg. size of reached set before ref.: 2330964.91
Avg. size of reached set after ref.:  2086786.09

Total time for CEGAR algorithm:     743.179s
Time for refinements:                45.642s
Average time for refinement:          2.074s
Max time for refinement:             21.052s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          1335
  Total lines:            2167
  Line coverage:          0.616
  Visited conditions:     6396
  Total conditions:       7756
  Condition coverage:     0.825

CPAchecker general statistics
-----------------------------
Number of program locations:     4535
Number of CFA edges:             8414
Number of relevant variables:    8
Number of functions:             3
Number of loops:                 1
Size of reached set:             4034043
  Size of final wait list        10240

Time for analysis setup:          4.598s
  Time for loading CPAs:          0.497s
  Time for loading parser:        0.623s
  Time for CFA construction:      3.397s
    Time for parsing file(s):     0.789s
    Time for AST to CFA:          1.065s
    Time for CFA sanity check:    0.212s
    Time for post-processing:     1.005s
      Time for var class.:        0.000s
Time for Analysis:              743.180s
CPU time for analysis:          892.380s
Total time for CPAchecker:      747.784s
Total CPU time for CPAchecker:  900.450s

Time for Garbage Collector:     145.250s (in 77 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5942MB (  5667 MiB) max;   3501MB (  3339 MiB) avg;   7311MB (  6972 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:        3410MB (  3252 MiB) max;   2209MB (  2106 MiB) avg;   3480MB (  3319 MiB) peak
Allocated heap memory:          7787MB (  7426 MiB) max;   5931MB (  5656 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
