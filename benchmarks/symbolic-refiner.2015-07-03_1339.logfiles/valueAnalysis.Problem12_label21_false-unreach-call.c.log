scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem12_label21_false-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-2007024348_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               59460910 (count: 8484182, min: 0, max: 8, avg: 7.01)
Number of global variables:                        42420900 (count: 8484182, min: 0, max: 5, avg: 5.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                10801505
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               21.820s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 44.668s
  Time for transition matches:                        18.772s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                     10998286 (count: 11001599, min: 0, max: 1, avg: 1.00) [0 x 3313, 1 x 10998286]

CPA algorithm statistics
------------------------
Number of iterations:            10212396
Max size of waitlist:            19026
Average size of waitlist:        8191
Number of computed successors:   10801505
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         565306
Number of times breaked:         7

Total time for CPA algorithm:       683.434s (Max:   620.057s)
  Time for choose from waitlist:      8.707s
  Time for precision adjustment:     52.988s
  Time for transfer relation:       190.056s
  Time for stop operator:           356.472s
  Time for adding to reached set:    24.418s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              7
Total number of targets found:            7
Time for completing refinement:           8.296s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 1357172
Max. size of reached set after ref.:  351531
Avg. size of reached set before ref.: 300510.00
Avg. size of reached set after ref.:  50221.71

Total time for CEGAR algorithm:     691.989s
Time for refinements:                 8.475s
Average time for refinement:          1.210s
Max time for refinement:              3.044s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          3928
  Total lines:            3979
  Line coverage:          0.987
  Visited conditions:     13178
  Total conditions:       13318
  Condition coverage:     0.989

CPAchecker general statistics
-----------------------------
Number of program locations:     7552
Number of CFA edges:             14214
Number of relevant variables:    10
Number of functions:             5
Number of loops:                 1
Size of reached set:             8484182
  Size of final wait list        19025

Time for analysis setup:          6.018s
  Time for loading CPAs:          0.509s
  Time for loading parser:        0.549s
  Time for CFA construction:      4.880s
    Time for parsing file(s):     1.100s
    Time for AST to CFA:          1.363s
    Time for CFA sanity check:    0.379s
    Time for post-processing:     1.826s
      Time for var class.:        0.000s
Time for Analysis:              691.989s
CPU time for analysis:          889.240s
Total time for CPAchecker:      698.014s
Total CPU time for CPAchecker:  900.220s

Time for Garbage Collector:     194.305s (in 72 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               7855MB (  7491 MiB) max;   4175MB (  3981 MiB) avg;   9903MB (  9444 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:        5702MB (  5438 MiB) max;   2893MB (  2759 MiB) avg;   5766MB (  5499 MiB) peak
Allocated heap memory:          9557MB (  9115 MiB) max;   6681MB (  6372 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     40MB (    39 MiB) avg
Total process virtual memory:  13648MB ( 13015 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
