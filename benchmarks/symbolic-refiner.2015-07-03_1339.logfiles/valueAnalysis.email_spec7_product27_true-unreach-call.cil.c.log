scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/product-lines/ALL.prp ../svcomp15/product-lines/email_spec7_product27_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1479416619_tempdir
line 3952: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                    101 (count: 3196, min: 0, max: 2, avg: 0.03)
Number of global variables:                               0 (count: 3196, min: 0, max: 0, avg: 0.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                    4322
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.049s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.106s
Automaton transfers with branching:                0
Automaton transfer successors:                         6574 (count: 6574, min: 1, max: 1, avg: 1.00) [1 x 6574]

CPA algorithm statistics
------------------------
Number of iterations:            3583
Max size of waitlist:            12
Average size of waitlist:        5
Number of computed successors:   4322
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         734
Number of times breaked:         4

Total time for CPA algorithm:         0.909s (Max:     0.423s)
  Time for choose from waitlist:      0.028s
  Time for precision adjustment:      0.177s
  Time for transfer relation:         0.482s
  Time for stop operator:             0.052s
  Time for adding to reached set:     0.079s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              4
Total number of targets found:            4
Time for completing refinement:           0.812s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 1761
Max. size of reached set after ref.:  1752
Avg. size of reached set before ref.: 1243.50
Avg. size of reached set after ref.:  1145.25

Total time for CEGAR algorithm:       1.879s
Time for refinements:                 0.957s
Average time for refinement:          0.239s
Max time for refinement:              0.338s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.719
  Visited lines:          1104
  Total lines:            1660
  Line coverage:          0.665
  Visited conditions:     351
  Total conditions:       490
  Condition coverage:     0.716

CPAchecker general statistics
-----------------------------
Number of program locations:     1175
Number of CFA edges:             1568
Number of relevant variables:    401
Number of functions:             114
Number of loops:                 4
Size of reached set:             3196
  Number of reached locations:   859 (73%)
    Avg states per location:     3
    Max states per location:     18 (at node N468)
  Number of reached functions:   82 (72%)
  Number of partitions:          3196
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.615s
  Time for loading CPAs:          0.504s
  Time for loading parser:        0.472s
  Time for CFA construction:      1.556s
    Time for parsing file(s):     0.478s
    Time for AST to CFA:          0.472s
    Time for CFA sanity check:    0.079s
    Time for post-processing:     0.346s
      Time for var class.:        0.000s
Time for Analysis:                1.893s
CPU time for analysis:            3.440s
Total time for CPAchecker:        4.513s
Total CPU time for CPAchecker:    7.880s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                275MB (   262 MiB) max;    155MB (   148 MiB) avg;    275MB (   262 MiB) peak
Used non-heap memory:             21MB (    20 MiB) max;     16MB (    15 MiB) avg;     21MB (    20 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13580MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
