scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/systemc/ALL.prp ../svcomp15/systemc/token_ring.13_false-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1816849542_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               67715112 (count: 2604445, min: 0, max: 26, avg: 26.00)
Number of global variables:                        67715112 (count: 2604445, min: 0, max: 26, avg: 26.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                17665695
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:              104.179s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                102.419s
  Time for transition matches:                        42.842s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     26340777 (count: 26340777, min: 1, max: 1, avg: 1.00) [1 x 26340777]

CPA algorithm statistics
------------------------
Number of iterations:            14887940
Max size of waitlist:            2888
Average size of waitlist:        1206
Number of computed successors:   17665695
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         2776255
Number of times breaked:         30

Total time for CPA algorithm:       675.876s (Max:   183.209s)
  Time for choose from waitlist:     13.649s
  Time for precision adjustment:    181.434s
  Time for transfer relation:       213.601s
  Time for stop operator:           144.839s
  Time for adding to reached set:    40.515s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             30
Total number of targets found:           30
Time for completing refinement:          64.966s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 5015656
Max. size of reached set after ref.:  1435089
Avg. size of reached set before ref.: 473434.13
Avg. size of reached set after ref.:  63934.27

Total time for CEGAR algorithm:     741.786s
Time for refinements:                65.364s
Average time for refinement:          2.178s
Max time for refinement:             20.114s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.837
  Visited lines:          888
  Total lines:            1097
  Line coverage:          0.809
  Visited conditions:     277
  Total conditions:       436
  Condition coverage:     0.635

CPAchecker general statistics
-----------------------------
Number of program locations:     963
Number of CFA edges:             1266
Number of relevant variables:    137
Number of functions:             43
Number of loops:                 2
Size of reached set:             2604445
  Size of final wait list        2299

Time for analysis setup:          2.303s
  Time for loading CPAs:          0.505s
  Time for loading parser:        0.616s
  Time for CFA construction:      1.101s
    Time for parsing file(s):     0.380s
    Time for AST to CFA:          0.292s
    Time for CFA sanity check:    0.082s
    Time for post-processing:     0.254s
      Time for var class.:        0.000s
Time for Analysis:              741.787s
CPU time for analysis:          896.860s
Total time for CPAchecker:      744.096s
Total CPU time for CPAchecker:  900.770s

Time for Garbage Collector:     150.828s (in 72 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6648MB (  6340 MiB) max;   2946MB (  2809 MiB) avg;   8549MB (  8153 MiB) peak
Used non-heap memory:             22MB (    21 MiB) max;     20MB (    19 MiB) avg;     22MB (    21 MiB) peak
Used in PS Old Gen pool:        4696MB (  4478 MiB) max;   1676MB (  1598 MiB) avg;   4820MB (  4596 MiB) peak
Allocated heap memory:          8000MB (  7629 MiB) max;   5754MB (  5488 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  13580MB ( 12951 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
