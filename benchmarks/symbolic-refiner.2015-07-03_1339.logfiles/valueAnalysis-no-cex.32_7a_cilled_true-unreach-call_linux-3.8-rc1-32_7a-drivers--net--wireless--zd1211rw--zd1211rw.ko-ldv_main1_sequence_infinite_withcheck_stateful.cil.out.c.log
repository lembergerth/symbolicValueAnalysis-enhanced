scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop analysis.checkCounterexamples=false -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--zd1211rw--zd1211rw.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_263089903_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker
 counterexample.checker.config 
 (CPAchecker.printConfigurationWarnings, WARNING)

Skipping recursive function call from zd_rf_set_channel to zd_op_config (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from zd_rf_patch_6m_band_edge to zd_op_config (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from zd_rf_init_hw to post_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from zd_usb_stop to zd_op_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                5410026 (count: 919388, min: 0, max: 11, avg: 5.88)
Number of global variables:                         3677532 (count: 919388, min: 0, max: 4, avg: 4.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 1630838
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                5.749s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 26.007s
  Time for transition matches:                        10.441s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      2425756 (count: 2425756, min: 1, max: 1, avg: 1.00) [1 x 2425756]

CPA algorithm statistics
------------------------
Number of iterations:            1476125
Max size of waitlist:            80
Average size of waitlist:        31
Number of computed successors:   1630838
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         154287
Number of times breaked:         18

Total time for CPA algorithm:       856.203s (Max:   814.899s)
  Time for choose from waitlist:      3.643s
  Time for precision adjustment:     14.007s
  Time for transfer relation:        50.108s
  Time for stop operator:           765.186s
  Time for adding to reached set:     5.102s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             18
Total number of targets found:           18
Time for completing refinement:           8.268s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 82867
Max. size of reached set after ref.:  52939
Avg. size of reached set before ref.: 57298.56
Avg. size of reached set after ref.:  26345.00

Total time for CEGAR algorithm:     866.393s
Time for refinements:                10.037s
Average time for refinement:          0.557s
Max time for refinement:              1.755s

Code Coverage
-----------------------------
  Function coverage:      0.303
  Visited lines:          8453
  Total lines:            15029
  Line coverage:          0.562
  Visited conditions:     445
  Total conditions:       1760
  Condition coverage:     0.253

CPAchecker general statistics
-----------------------------
Number of program locations:     6444
Number of CFA edges:             9315
Number of relevant variables:    2200
Number of functions:             479
Number of loops:                 48
Size of reached set:             919388
  Number of reached locations:   1771 (27%)
    Avg states per location:     519
    Max states per location:     19904 (at node N3173)
  Number of reached functions:   145 (30%)
  Number of partitions:          715634
    Avg size of partitions:      1
    Max size of partitions:      19872 (with key [N10198 (before line 26389), Function zd_usb_ioread16v called from node N40, stack depth 9 [86e4b08], stack [main, zd_op_stop, zd_chip_switch_radio_off, zd_switch_radio_off, zd_chip_lock_phy_regs, zd_ioread32_locked, zd_ioread32v_locked, zd_ioread16v_locked, zd_usb_ioread16v], Init])
  Number of target states:       0
  Size of final wait list        21

Time for analysis setup:          7.849s
  Time for loading CPAs:          0.690s
  Time for loading parser:        0.533s
  Time for CFA construction:      6.538s
    Time for parsing file(s):     2.009s
    Time for AST to CFA:          2.203s
    Time for CFA sanity check:    0.369s
    Time for post-processing:     1.716s
      Time for var class.:        0.000s
Time for Analysis:              866.394s
CPU time for analysis:          885.540s
Total time for CPAchecker:      874.249s
Total CPU time for CPAchecker:  900.070s

Time for Garbage Collector:       9.264s (in 56 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3765MB (  3591 MiB) max;   1818MB (  1733 MiB) avg;   4169MB (  3976 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     25MB (    24 MiB) avg;     26MB (    25 MiB) peak
Used in PS Old Gen pool:         767MB (   732 MiB) max;    481MB (   458 MiB) avg;    776MB (   740 MiB) peak
Allocated heap memory:          4785MB (  4563 MiB) max;   4020MB (  3834 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
