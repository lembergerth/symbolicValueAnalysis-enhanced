scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.0/ALL.prp ../svcomp15/ldv-linux-3.0/module_get_put-drivers-block-pktcdvd.ko_false-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-669809756_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Infeasible counterexample found, but could not remove it from the ARG. Therefore, we cannot prove safety. (CounterexampleCheckAlgorithm.checkCounterexample, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from pkt_check_events to pkt_check_events (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5369: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               58719086 (count: 6909309, min: 0, max: 11, avg: 8.50)
Number of global variables:                        11853090 (count: 6909309, min: 0, max: 2, avg: 1.72)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 7755748
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               41.224s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                134.589s
  Time for transition matches:                        53.981s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     10374265 (count: 10374265, min: 1, max: 1, avg: 1.00) [1 x 10374265]

CPA algorithm statistics
------------------------
Number of iterations:            6985617
Max size of waitlist:            524
Average size of waitlist:        261
Number of computed successors:   7755748
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         767725
Number of times breaked:         292

Total time for CPA algorithm:       594.941s (Max:   585.367s)
  Time for choose from waitlist:     20.316s
  Time for precision adjustment:     94.454s
  Time for transfer relation:       261.767s
  Time for stop operator:            37.410s
  Time for adding to reached set:    32.523s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:            292
Total number of targets found:          292
Time for completing refinement:           7.291s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                292
Number of successful refinements:     52
Number of failed refinements:         0
Max. size of reached set before ref.: 44025
Max. size of reached set after ref.:  18852
Avg. size of reached set before ref.: 12958.80
Avg. size of reached set after ref.:  8114.92

Total time for CEGAR algorithm:     607.215s
Time for refinements:                12.270s
Average time for refinement:          0.042s
Max time for refinement:              0.286s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    240
Number of infeasible paths:         240 (100%)
Time for counterexample checks:       141.572s

Code Coverage
-----------------------------
  Function coverage:      0.602
  Visited lines:          5818
  Total lines:            7704
  Line coverage:          0.755
  Visited conditions:     511
  Total conditions:       842
  Condition coverage:     0.607

CPAchecker general statistics
-----------------------------
Number of program locations:     2869
Number of CFA edges:             3809
Number of relevant variables:    862
Number of functions:             161
Number of loops:                 40
Size of reached set:             6909309
  Size of final wait list        454

Time for analysis setup:          5.487s
  Time for loading CPAs:          0.685s
  Time for loading parser:        0.644s
  Time for CFA construction:      4.055s
    Time for parsing file(s):     1.411s
    Time for AST to CFA:          1.538s
    Time for CFA sanity check:    0.130s
    Time for post-processing:     0.722s
      Time for var class.:        0.000s
Time for Analysis:              749.885s
CPU time for analysis:          890.470s
Total time for CPAchecker:      755.380s
Total CPU time for CPAchecker:  900.000s

Time for Garbage Collector:     127.058s (in 42 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6488MB (  6187 MiB) max;   3206MB (  3057 MiB) avg;   9185MB (  8759 MiB) peak
Used non-heap memory:             30MB (    29 MiB) max;     28MB (    27 MiB) avg;     31MB (    29 MiB) peak
Used in PS Old Gen pool:        4414MB (  4210 MiB) max;   1751MB (  1670 MiB) avg;   4916MB (  4689 MiB) peak
Allocated heap memory:          9076MB (  8656 MiB) max;   5807MB (  5538 MiB) avg
Allocated non-heap memory:        56MB (    54 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  13758MB ( 13121 MiB) max;  13667MB ( 13034 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
