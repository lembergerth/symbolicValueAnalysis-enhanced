scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem13_label23_false-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1260984217_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               70513677 (count: 8807881, min: 0, max: 9, avg: 8.01)
Number of global variables:                        52847274 (count: 8807881, min: 0, max: 6, avg: 6.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                11303059
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               24.409s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 57.285s
  Time for transition matches:                        21.619s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     11467290 (count: 11468980, min: 0, max: 1, avg: 1.00) [0 x 1690, 1 x 11467290]

CPA algorithm statistics
------------------------
Number of iterations:            10790861
Max size of waitlist:            15237
Average size of waitlist:        6538
Number of computed successors:   11303059
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         492598
Number of times breaked:         8

Total time for CPA algorithm:       642.321s (Max:   581.010s)
  Time for choose from waitlist:     10.227s
  Time for precision adjustment:     77.806s
  Time for transfer relation:       159.080s
  Time for stop operator:           284.427s
  Time for adding to reached set:    26.489s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              8
Total number of targets found:            8
Time for completing refinement:          21.431s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 1356095
Max. size of reached set after ref.:  165894
Avg. size of reached set before ref.: 271062.13
Avg. size of reached set after ref.:  20739.50

Total time for CEGAR algorithm:     663.950s
Time for refinements:                21.587s
Average time for refinement:          2.698s
Max time for refinement:             16.134s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          2674
  Total lines:            4769
  Line coverage:          0.561
  Visited conditions:     13176
  Total conditions:       15642
  Condition coverage:     0.842

CPAchecker general statistics
-----------------------------
Number of program locations:     8994
Number of CFA edges:             16818
Number of relevant variables:    11
Number of functions:             5
Number of loops:                 1
Size of reached set:             8807881
  Size of final wait list        15237

Time for analysis setup:          6.184s
  Time for loading CPAs:          0.516s
  Time for loading parser:        0.544s
  Time for CFA construction:      5.043s
    Time for parsing file(s):     1.176s
    Time for AST to CFA:          1.583s
    Time for CFA sanity check:    0.243s
    Time for post-processing:     1.817s
      Time for var class.:        0.000s
Time for Analysis:              663.950s
CPU time for analysis:          888.890s
Total time for CPAchecker:      670.140s
Total CPU time for CPAchecker:  900.160s

Time for Garbage Collector:     222.468s (in 71 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               7687MB (  7331 MiB) max;   4035MB (  3848 MiB) avg;   9457MB (  9019 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     24MB (    22 MiB) peak
Used in PS Old Gen pool:        5891MB (  5618 MiB) max;   2838MB (  2707 MiB) avg;   5972MB (  5696 MiB) peak
Allocated heap memory:          9528MB (  9087 MiB) max;   6502MB (  6201 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
