scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.4-simple/ALL.prp ../svcomp15/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--staging--telephony--ixj_pcmcia.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_479705501_tempdir
ValueAnalysisCPA statistics
---------------------------
Number of variables:                                    301 (count: 303, min: 0, max: 1, avg: 0.99)
Number of global variables:                             301 (count: 303, min: 0, max: 1, avg: 0.99)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                     687
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.010s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.066s
Automaton transfers with branching:                0
Automaton transfer successors:                         3025 (count: 3025, min: 1, max: 1, avg: 1.00) [1 x 3025]

CPA algorithm statistics
------------------------
Number of iterations:            601
Max size of waitlist:            33
Average size of waitlist:        9
Number of computed successors:   687
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         83
Number of times breaked:         1

Total time for CPA algorithm:         0.265s (Max:     0.159s)
  Time for choose from waitlist:      0.007s
  Time for precision adjustment:      0.047s
  Time for transfer relation:         0.166s
  Time for stop operator:             0.006s
  Time for adding to reached set:     0.017s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              1
Total number of targets found:            1
Time for completing refinement:           0.053s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 304
Max. size of reached set after ref.:  2
Avg. size of reached set before ref.: 304.00
Avg. size of reached set after ref.:  2.00

Total time for CEGAR algorithm:       0.398s
Time for refinements:                 0.133s
Average time for refinement:          0.133s
Max time for refinement:              0.133s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.545
  Visited lines:          4805
  Total lines:            4980
  Line coverage:          0.965
  Visited conditions:     85
  Total conditions:       106
  Condition coverage:     0.802

CPAchecker general statistics
-----------------------------
Number of program locations:     349
Number of CFA edges:             430
Number of relevant variables:    243
Number of functions:             22
Number of loops:                 2
Size of reached set:             303
  Number of reached locations:   270 (77%)
    Avg states per location:     1
    Max states per location:     6 (at node N924)
  Number of reached functions:   12 (55%)
  Number of partitions:          303
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.794s
  Time for loading CPAs:          0.506s
  Time for loading parser:        0.550s
  Time for CFA construction:      1.658s
    Time for parsing file(s):     0.728s
    Time for AST to CFA:          0.481s
    Time for CFA sanity check:    0.044s
    Time for post-processing:     0.217s
      Time for var class.:        0.000s
Time for Analysis:                0.401s
CPU time for analysis:            0.620s
Total time for CPAchecker:        3.202s
Total CPU time for CPAchecker:    5.360s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                212MB (   202 MiB) max;    125MB (   119 MiB) avg;    212MB (   202 MiB) peak
Used non-heap memory:             21MB (    20 MiB) max;     14MB (    13 MiB) avg;     21MB (    20 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
