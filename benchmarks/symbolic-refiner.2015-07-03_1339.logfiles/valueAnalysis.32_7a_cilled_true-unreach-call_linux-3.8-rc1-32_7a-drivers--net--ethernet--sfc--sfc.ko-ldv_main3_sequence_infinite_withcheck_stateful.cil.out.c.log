scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--sfc--sfc.ko-ldv_main3_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1810824785_tempdir
line 60525: Dereferencing of non-pointer type efx_vfdi_op_t  in expression *(vfdi_ops[req->op]) (ASTConverter.convert, WARNING)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 18532: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18580: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31146: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33731: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 31053-31054: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 33638-33639: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31188: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33773: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31100: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33685: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 37300: Function pointer *(efx->mdio.mdio_read) with type int (*)(struct net_device *, int, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 43615-43616: Function pointer *(efx->mdio.mdio_write) with type int (*)(struct net_device *, int, int, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

Skipping recursive function call from falcon_remove_port to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_probe_port to falcon_probe_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from tenxpress_phy_init to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from tenxpress_phy_init to efx_sriov_vfdi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_remove_nic to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_remove_nic to efx_sriov_vfdi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_remove_nic to falcon_remove_nic (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_monitor to falcon_probe_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_monitor to tenxpress_phy_init (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_pm_freeze to efx_stop_all (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_pm_poweroff to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_pm_poweroff to efx_sriov_vfdi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_pm_poweroff to falcon_remove_nic (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_pm_poweroff to falcon_monitor (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_mac_work to falcon_probe_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_mac_work to tenxpress_phy_init (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_mac_work to efx_pm_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_reconfigure_port to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_reconfigure_port to efx_sriov_vfdi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_reconfigure_port to falcon_remove_nic (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_reconfigure_port to falcon_monitor (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_reconfigure_port to efx_mac_work (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_reset to efx_reset_down (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_set_id_led to falcon_set_id_led (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_change_mtu to efx_stop_all (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from efx_reset to efx_reset_down (CounterexampleCheck:CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_change_mtu to efx_stop_all (CounterexampleCheck:CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Infeasible counterexample found, but could not remove it from the ARG. Therefore, we cannot prove safety. (CounterexampleCheckAlgorithm.checkCounterexample, WARNING)

Skipping recursive function call from efx_enqueue_skb to dma_mapping_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from tso_get_head_fragment to dma_mapping_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from tso_get_fragment to dma_mapping_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_tso_put_header to dma_mapping_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_ethtool_set_coalesce to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_ethtool_set_coalesce to efx_sriov_vfdi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_ethtool_set_coalesce to falcon_remove_nic (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_ethtool_set_coalesce to falcon_monitor (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_ethtool_set_coalesce to efx_mac_work (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_ethtool_set_coalesce to efx_reset_work (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from efx_reset to efx_reset_down (CounterexampleCheck:CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 33638-33639: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544UL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from siena_remove_port to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from siena_remove_port to efx_sriov_vfdi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from siena_remove_port to falcon_remove_nic (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from siena_remove_port to falcon_monitor (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from siena_remove_port to efx_mac_work (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from siena_remove_port to efx_reset_work (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from efx_reset to efx_reset_down (CounterexampleCheck:CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 33638-33639: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544UL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from siena_remove_port to siena_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_mtd_sync to falcon_probe_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_mtd_sync to tenxpress_phy_init (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_mtd_sync to efx_pm_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_mtd_sync to falcon_reconfigure_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from txc_apply_defaults to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from txc_apply_defaults to efx_sriov_vfdi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from txc_apply_defaults to falcon_remove_nic (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from txc_apply_defaults to falcon_monitor (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from txc_apply_defaults to efx_mac_work (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from txc_apply_defaults to efx_reset_work (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from efx_reset to efx_reset_down (CounterexampleCheck:CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 33638-33639: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544UL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 43615-43616: Ignoring function call through function pointer *(efx->mdio.mdio_write): (*(efx->mdio.mdio_write))(efx->net_dev, efx->mdio.prtad, devad, (int)((u16 )addr), (int)((u16 )value)); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 37300: Ignoring function call through function pointer *(efx->mdio.mdio_read): tmp = (*(efx->mdio.mdio_read))(efx->net_dev, efx->mdio.prtad, devad, (int)((u16 )addr)); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from txc_apply_defaults to siena_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from txc_apply_defaults to efx_mtd_sync (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_fini_port to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_fini_port to efx_sriov_vfdi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_fini_port to falcon_remove_nic (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_fini_port to falcon_monitor (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_fini_port to efx_mac_work (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_fini_port to efx_reset_work (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                3580361 (count: 503468, min: 0, max: 12, avg: 7.11)
Number of global variables:                         2013852 (count: 503468, min: 0, max: 4, avg: 4.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 2440120
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                9.677s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 37.972s
  Time for transition matches:                        15.488s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      3517936 (count: 3517936, min: 1, max: 1, avg: 1.00) [1 x 3517936]

CPA algorithm statistics
------------------------
Number of iterations:            2214855
Max size of waitlist:            770
Average size of waitlist:        564
Number of computed successors:   2440120
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         229010
Number of times breaked:         69

Total time for CPA algorithm:       821.453s (Max:   686.234s)
  Time for choose from waitlist:      5.510s
  Time for precision adjustment:     23.138s
  Time for transfer relation:        83.624s
  Time for stop operator:           672.983s
  Time for adding to reached set:     7.945s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             69
Total number of targets found:           69
Time for completing refinement:           8.944s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                69
Number of successful refinements:     65
Number of failed refinements:         0
Max. size of reached set before ref.: 223291
Max. size of reached set after ref.:  197277
Avg. size of reached set before ref.: 177282.16
Avg. size of reached set after ref.:  152858.57

Total time for CEGAR algorithm:     833.773s
Time for refinements:                12.307s
Average time for refinement:          0.178s
Max time for refinement:              0.585s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    4
Number of infeasible paths:         4 (100%)
Time for counterexample checks:        14.663s

Code Coverage
-----------------------------
  Function coverage:      0.375
  Visited lines:          15809
  Total lines:            34906
  Line coverage:          0.453
  Visited conditions:     3795
  Total conditions:       14382
  Condition coverage:     0.264

CPAchecker general statistics
-----------------------------
Number of program locations:     32351
Number of CFA edges:             52494
Number of relevant variables:    7400
Number of functions:             1276
Number of loops:                 246
Size of reached set:             503468
  Number of reached locations:   8580 (27%)
    Avg states per location:     58
    Max states per location:     26021 (at node N6069)
  Number of reached functions:   479 (38%)
  Number of partitions:          397669
    Avg size of partitions:      1
    Max size of partitions:      12550 (with key [N24698 (before line 48872), Function efx_mcdi_copyin called from node N25079, stack depth 37 [1130964e], stack [main, siena_test_chip, efx_reset_down, efx_stop_all, falcon_remove_port, efx_sriov_vfdi, falcon_probe_port, tenxpress_phy_init, falcon_remove_nic, falcon_monitor, efx_pm_suspend, efx_pm_poweroff, efx_mac_work, falcon_reconfigure_port, efx_reset_work, efx_reset, efx_poll, efx_process_channel, efx_nic_process_eventq, efx_handle_generated_event, efx_fast_push_rx_descriptors, efx_init_rx_buffers_skb, dma_mapping_error, efx_ethtool_set_coalesce, siena_remove_port, efx_mtd_sync, txc43128_phy_reconfigure, txc_apply_defaults, efx_pci_remove, efx_pci_remove_main, efx_fini_port, efx_sriov_reset_vf_work, efx_sriov_reset_vf, efx_sriov_memcpy, efx_mcdi_rpc, efx_mcdi_rpc_start, efx_mcdi_copyin], Init])
  Number of target states:       0
  Size of final wait list        639

Time for analysis setup:         13.842s
  Time for loading CPAs:          0.988s
  Time for loading parser:        0.722s
  Time for CFA construction:     11.995s
    Time for parsing file(s):     2.821s
    Time for AST to CFA:          4.223s
    Time for CFA sanity check:    0.392s
    Time for post-processing:     4.310s
      Time for var class.:        0.000s
Time for Analysis:              848.833s
CPU time for analysis:          875.030s
Total time for CPAchecker:      862.683s
Total CPU time for CPAchecker:  900.470s

Time for Garbage Collector:       8.132s (in 66 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3433MB (  3274 MiB) max;   1397MB (  1332 MiB) avg;   3797MB (  3621 MiB) peak
Used non-heap memory:             30MB (    29 MiB) max;     30MB (    29 MiB) avg;     31MB (    29 MiB) peak
Used in PS Old Gen pool:         512MB (   489 MiB) max;    372MB (   355 MiB) avg;    512MB (   489 MiB) peak
Allocated heap memory:          4715MB (  4497 MiB) max;   3424MB (  3266 MiB) avg
Allocated non-heap memory:        31MB (    29 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:  13665MB ( 13032 MiB) max;  13660MB ( 13028 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
