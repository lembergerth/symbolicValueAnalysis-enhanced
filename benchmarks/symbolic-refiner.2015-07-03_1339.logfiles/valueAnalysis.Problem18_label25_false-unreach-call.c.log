scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem18_label25_false-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-631982905_tempdir
Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               47964269 (count: 7542011, min: 0, max: 8, avg: 6.36)
Number of global variables:                        30168036 (count: 7542011, min: 0, max: 4, avg: 4.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                12541838
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               25.454s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 63.487s
  Time for transition matches:                        22.582s
  Time for transition assertions:                      0.019s
  Time for transition actions:                         0.045s
Automaton transfers with branching:                0
Automaton transfer successors:                     12712765 (count: 12729529, min: 0, max: 1, avg: 1.00) [0 x 16764, 1 x 12712765]

CPA algorithm statistics
------------------------
Number of iterations:            12248077
Max size of waitlist:            10029
Average size of waitlist:        3617
Number of computed successors:   12541838
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         275114
Number of times breaked:         13

Total time for CPA algorithm:       722.585s (Max:   311.528s)
  Time for choose from waitlist:     11.559s
  Time for precision adjustment:     62.110s
  Time for transfer relation:       159.054s
  Time for stop operator:           380.946s
  Time for adding to reached set:    46.584s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             13
Total number of targets found:           13
Time for completing refinement:          18.547s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 4497737
Max. size of reached set after ref.:  4470172
Avg. size of reached set before ref.: 911350.31
Avg. size of reached set after ref.:  547910.77

Total time for CEGAR algorithm:     742.915s
Time for refinements:                18.839s
Average time for refinement:          1.449s
Max time for refinement:              3.837s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          3382
  Total lines:            3419
  Line coverage:          0.989
  Visited conditions:     9470
  Total conditions:       9656
  Condition coverage:     0.981

CPAchecker general statistics
-----------------------------
Number of program locations:     5656
Number of CFA edges:             10486
Number of relevant variables:    8
Number of functions:             4
Number of loops:                 1
Size of reached set:             7542011
  Size of final wait list        10028

Time for analysis setup:          5.018s
  Time for loading CPAs:          0.539s
  Time for loading parser:        0.509s
  Time for CFA construction:      3.884s
    Time for parsing file(s):     0.856s
    Time for AST to CFA:          1.172s
    Time for CFA sanity check:    0.204s
    Time for post-processing:     1.388s
      Time for var class.:        0.000s
Time for Analysis:              742.915s
CPU time for analysis:          891.290s
Total time for CPAchecker:      747.940s
Total CPU time for CPAchecker:  900.230s

Time for Garbage Collector:     146.807s (in 66 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               7064MB (  6736 MiB) max;   3612MB (  3445 MiB) avg;   8675MB (  8273 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:        5101MB (  4865 MiB) max;   2183MB (  2082 MiB) avg;   5101MB (  4865 MiB) peak
Allocated heap memory:          9579MB (  9136 MiB) max;   6113MB (  5830 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
