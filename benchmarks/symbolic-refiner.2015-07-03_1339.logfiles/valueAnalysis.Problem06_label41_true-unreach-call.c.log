scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem06_label41_true-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-332861306_tempdir
Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               206875708 (count: 8994598, min: 0, max: 23, avg: 23.00)
Number of global variables:                        206875708 (count: 8994598, min: 0, max: 23, avg: 23.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                11309097
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               58.706s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 43.751s
  Time for transition matches:                        17.564s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                     11582803 (count: 11585104, min: 0, max: 1, avg: 1.00) [0 x 2301, 1 x 11582803]

CPA algorithm statistics
------------------------
Number of iterations:            10202915
Max size of waitlist:            5787
Average size of waitlist:        2588
Number of computed successors:   11309097
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         1098254
Number of times breaked:         28

Total time for CPA algorithm:       609.715s (Max:   567.958s)
  Time for choose from waitlist:      8.483s
  Time for precision adjustment:     95.162s
  Time for transfer relation:       214.460s
  Time for stop operator:           117.485s
  Time for adding to reached set:   123.558s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             28
Total number of targets found:           28
Time for completing refinement:          27.718s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 652419
Max. size of reached set after ref.:  345
Avg. size of reached set before ref.: 43480.00
Avg. size of reached set after ref.:  42.64

Total time for CEGAR algorithm:     637.745s
Time for refinements:                28.029s
Average time for refinement:          1.001s
Max time for refinement:              4.218s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          7088
  Total lines:            9151
  Line coverage:          0.775
  Visited conditions:     29893
  Total conditions:       31852
  Condition coverage:     0.938

CPAchecker general statistics
-----------------------------
Number of program locations:     17295
Number of CFA edges:             33225
Number of relevant variables:    36
Number of functions:             6
Number of loops:                 1
Size of reached set:             8994598
  Size of final wait list        5773

Time for analysis setup:          6.882s
  Time for loading CPAs:          0.604s
  Time for loading parser:        0.562s
  Time for CFA construction:      5.603s
    Time for parsing file(s):     1.185s
    Time for AST to CFA:          1.689s
    Time for CFA sanity check:    0.351s
    Time for post-processing:     2.124s
      Time for var class.:        0.000s
Time for Analysis:              637.745s
CPU time for analysis:          891.390s
Total time for CPAchecker:      644.634s
Total CPU time for CPAchecker:  903.850s

Time for Garbage Collector:     251.840s (in 54 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               8400MB (  8011 MiB) max;   4066MB (  3877 MiB) avg;  10391MB (  9910 MiB) peak
Used non-heap memory:             24MB (    23 MiB) max;     21MB (    20 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:        6131MB (  5847 MiB) max;   2622MB (  2500 MiB) avg;   6131MB (  5847 MiB) peak
Allocated heap memory:          9599MB (  9155 MiB) max;   6485MB (  6185 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
