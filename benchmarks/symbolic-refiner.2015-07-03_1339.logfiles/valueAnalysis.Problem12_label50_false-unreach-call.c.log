scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem12_label50_false-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1372214960_tempdir
Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               52157062 (count: 7439126, min: 0, max: 8, avg: 7.01)
Number of global variables:                        37195620 (count: 7439126, min: 0, max: 5, avg: 5.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                11103348
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               23.658s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 71.127s
  Time for transition matches:                        40.342s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                     11325038 (count: 11328737, min: 0, max: 1, avg: 1.00) [0 x 3699, 1 x 11325038]

CPA algorithm statistics
------------------------
Number of iterations:            10172878
Max size of waitlist:            16648
Average size of waitlist:        6806
Number of computed successors:   11103348
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         905882
Number of times breaked:         7

Total time for CPA algorithm:       632.077s (Max:   523.009s)
  Time for choose from waitlist:      8.870s
  Time for precision adjustment:     74.554s
  Time for transfer relation:       230.627s
  Time for stop operator:           237.225s
  Time for adding to reached set:    26.928s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              7
Total number of targets found:            7
Time for completing refinement:          37.583s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 1804162
Max. size of reached set after ref.:  351531
Avg. size of reached set before ref.: 444270.43
Avg. size of reached set after ref.:  50221.71

Total time for CEGAR algorithm:     669.981s
Time for refinements:                37.827s
Average time for refinement:          5.403s
Max time for refinement:             30.840s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          3928
  Total lines:            3979
  Line coverage:          0.987
  Visited conditions:     13178
  Total conditions:       13318
  Condition coverage:     0.989

CPAchecker general statistics
-----------------------------
Number of program locations:     7552
Number of CFA edges:             14214
Number of relevant variables:    10
Number of functions:             5
Number of loops:                 1
Size of reached set:             7439126
  Size of final wait list        16647

Time for analysis setup:          5.774s
  Time for loading CPAs:          0.538s
  Time for loading parser:        0.512s
  Time for CFA construction:      4.643s
    Time for parsing file(s):     0.852s
    Time for AST to CFA:          1.405s
    Time for CFA sanity check:    0.297s
    Time for post-processing:     1.776s
      Time for var class.:        0.000s
Time for Analysis:              669.981s
CPU time for analysis:          890.190s
Total time for CPAchecker:      675.762s
Total CPU time for CPAchecker:  900.670s

Time for Garbage Collector:     219.377s (in 74 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6851MB (  6534 MiB) max;   3637MB (  3469 MiB) avg;   8628MB (  8228 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:        4792MB (  4570 MiB) max;   2420MB (  2308 MiB) avg;   4809MB (  4586 MiB) peak
Allocated heap memory:          9512MB (  9072 MiB) max;   6027MB (  5748 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
