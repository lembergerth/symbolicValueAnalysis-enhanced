scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/product-lines/ALL.prp ../svcomp15/product-lines/email_spec27_product28_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1516572350_tempdir
line 990: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                3604531 (count: 82468, min: 0, max: 67, avg: 43.71)
Number of global variables:                         2243624 (count: 82468, min: 0, max: 30, avg: 27.21)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 4258926
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               44.173s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 24.204s
  Time for transition matches:                         9.902s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      6099041 (count: 6099041, min: 1, max: 1, avg: 1.00) [1 x 6099041]

CPA algorithm statistics
------------------------
Number of iterations:            3785123
Max size of waitlist:            1036
Average size of waitlist:        318
Number of computed successors:   4258926
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         469919
Number of times breaked:         94

Total time for CPA algorithm:       161.806s (Max:    19.429s)
  Time for choose from waitlist:      3.728s
  Time for precision adjustment:     56.652s
  Time for transfer relation:        59.014s
  Time for stop operator:            13.019s
  Time for adding to reached set:     8.926s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             94
Total number of targets found:           94
Time for completing refinement:          17.391s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                94
Number of successful refinements:     94
Number of failed refinements:         0
Max. size of reached set before ref.: 1032244
Max. size of reached set after ref.:  1029602
Avg. size of reached set before ref.: 148117.86
Avg. size of reached set after ref.:  108686.59

Total time for CEGAR algorithm:     183.601s
Time for refinements:                18.021s
Average time for refinement:          0.191s
Max time for refinement:              3.365s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.587
  Visited lines:          786
  Total lines:            1647
  Line coverage:          0.477
  Visited conditions:     159
  Total conditions:       496
  Condition coverage:     0.321

CPAchecker general statistics
-----------------------------
Number of program locations:     1157
Number of CFA edges:             1534
Number of relevant variables:    396
Number of functions:             109
Number of loops:                 4
Size of reached set:             82468
  Number of reached locations:   555 (48%)
    Avg states per location:     148
    Max states per location:     451 (at node N1641)
  Number of reached functions:   64 (59%)
  Number of partitions:          70544
    Avg size of partitions:      1
    Max size of partitions:      176 (with key [N2187 (before line 4363), Function test called from node N105, stack depth 2 [2bfd0308], stack [main, test], Init])
  Number of target states:       0

Time for analysis setup:          2.721s
  Time for loading CPAs:          0.516s
  Time for loading parser:        0.537s
  Time for CFA construction:      1.593s
    Time for parsing file(s):     0.487s
    Time for AST to CFA:          0.487s
    Time for CFA sanity check:    0.077s
    Time for post-processing:     0.358s
      Time for var class.:        0.000s
Time for Analysis:              183.730s
CPU time for analysis:          204.770s
Total time for CPAchecker:      186.457s
Total CPU time for CPAchecker:  209.430s

Time for Garbage Collector:      13.991s (in 17 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3943MB (  3760 MiB) max;   1807MB (  1723 MiB) avg;   4915MB (  4687 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     22MB (    21 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:        1061MB (  1012 MiB) max;    369MB (   352 MiB) avg;   1296MB (  1236 MiB) peak
Allocated heap memory:          4754MB (  4534 MiB) max;   4285MB (  4087 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:  13580MB ( 12951 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
