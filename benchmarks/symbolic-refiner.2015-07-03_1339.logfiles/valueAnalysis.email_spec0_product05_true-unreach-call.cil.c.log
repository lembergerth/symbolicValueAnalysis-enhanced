scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/product-lines/ALL.prp ../svcomp15/product-lines/email_spec0_product05_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-2070782448_tempdir
line 1395: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                     39 (count: 501, min: 0, max: 2, avg: 0.08)
Number of global variables:                               0 (count: 501, min: 0, max: 0, avg: 0.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                     833
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.015s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.031s
Automaton transfers with branching:                0
Automaton transfer successors:                         1406 (count: 1406, min: 1, max: 1, avg: 1.00) [1 x 1406]

CPA algorithm statistics
------------------------
Number of iterations:            724
Max size of waitlist:            9
Average size of waitlist:        3
Number of computed successors:   833
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         105
Number of times breaked:         3

Total time for CPA algorithm:         0.289s (Max:     0.145s)
  Time for choose from waitlist:      0.012s
  Time for precision adjustment:      0.068s
  Time for transfer relation:         0.154s
  Time for stop operator:             0.008s
  Time for adding to reached set:     0.023s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              3
Total number of targets found:            3
Time for completing refinement:           0.444s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 285
Max. size of reached set after ref.:  270
Avg. size of reached set before ref.: 282.00
Avg. size of reached set after ref.:  206.00

Total time for CEGAR algorithm:       0.814s
Time for refinements:                 0.517s
Average time for refinement:          0.172s
Max time for refinement:              0.290s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.398
  Visited lines:          571
  Total lines:            1455
  Line coverage:          0.392
  Visited conditions:     97
  Total conditions:       472
  Condition coverage:     0.206

CPAchecker general statistics
-----------------------------
Number of program locations:     965
Number of CFA edges:             1215
Number of relevant variables:    296
Number of functions:             88
Number of loops:                 4
Size of reached set:             501
  Number of reached locations:   317 (33%)
    Avg states per location:     1
    Max states per location:     4 (at node N314)
  Number of reached functions:   35 (40%)
  Number of partitions:          501
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.625s
  Time for loading CPAs:          0.519s
  Time for loading parser:        0.545s
  Time for CFA construction:      1.483s
    Time for parsing file(s):     0.490s
    Time for AST to CFA:          0.462s
    Time for CFA sanity check:    0.073s
    Time for post-processing:     0.319s
      Time for var class.:        0.000s
Time for Analysis:                0.820s
CPU time for analysis:            1.430s
Total time for CPAchecker:        3.451s
Total CPU time for CPAchecker:    5.820s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                212MB (   202 MiB) max;    125MB (   119 MiB) avg;    212MB (   202 MiB) peak
Used non-heap memory:             20MB (    19 MiB) max;     14MB (    14 MiB) avg;     21MB (    20 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13580MB ( 12951 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
