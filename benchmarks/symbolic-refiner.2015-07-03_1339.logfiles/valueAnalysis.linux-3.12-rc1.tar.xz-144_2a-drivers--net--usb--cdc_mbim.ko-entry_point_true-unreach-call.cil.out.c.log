scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.12-rc1/ALL.prp ../svcomp15/ldv-linux-3.12-rc1/linux-3.12-rc1.tar.xz-144_2a-drivers--net--usb--cdc_mbim.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_963730866_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7274: Function pointer *(info->subdriver->disconnect) with type void (*)(struct usb_interface *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8707: Function pointer *completeFnBulk with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8698: Function pointer *completeFnInt with type void (*)(struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

Skipping recursive function call from cdc_mbim_resume to cdc_mbim_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Infeasible counterexample found, but could not remove it from the ARG. Therefore, we cannot prove safety. (CounterexampleCheckAlgorithm.checkCounterexample, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Exception in thread "main" java.lang.IllegalArgumentException: To assign to/from arrays/structures/unions use makeDestructiveAssignment
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:122)
	at org.sosy_lab.cpachecker.util.predicates.pathformula.pointeraliasing.AssignmentHandler.makeSimpleDestructiveAssignment(AssignmentHandler.java:412)
	at org.sosy_lab.cpachecker.util.predicates.pathformula.pointeraliasing.AssignmentHandler.makeDestructiveAssignment(AssignmentHandler.java:388)
	at org.sosy_lab.cpachecker.util.predicates.pathformula.pointeraliasing.AssignmentHandler.makeAssignment(AssignmentHandler.java:233)
	at org.sosy_lab.cpachecker.util.predicates.pathformula.pointeraliasing.AssignmentHandler.handleAssignment(AssignmentHandler.java:168)
	at org.sosy_lab.cpachecker.util.predicates.pathformula.pointeraliasing.CToFormulaConverterWithPointerAliasing.makeAssignment(CToFormulaConverterWithPointerAliasing.java:507)
	at org.sosy_lab.cpachecker.util.predicates.pathformula.ctoformula.CtoFormulaConverter.makeFunctionCall(CtoFormulaConverter.java:1023)
	at org.sosy_lab.cpachecker.util.predicates.pathformula.pointeraliasing.CToFormulaConverterWithPointerAliasing.makeFunctionCall(CToFormulaConverterWithPointerAliasing.java:701)
	at org.sosy_lab.cpachecker.util.predicates.pathformula.ctoformula.CtoFormulaConverter.createFormulaForEdge(CtoFormulaConverter.java:757)
	at org.sosy_lab.cpachecker.util.predicates.pathformula.ctoformula.CtoFormulaConverter.makeAnd(CtoFormulaConverter.java:618)
	at org.sosy_lab.cpachecker.util.predicates.pathformula.PathFormulaManagerImpl.makeAnd(PathFormulaManagerImpl.java:231)
	at org.sosy_lab.cpachecker.util.predicates.pathformula.PathFormulaManagerImpl.makeAnd(PathFormulaManagerImpl.java:265)
	at org.sosy_lab.cpachecker.cpa.predicate.PredicateTransferRelation.convertEdgeToPathFormula(PredicateTransferRelation.java:271)
	at org.sosy_lab.cpachecker.cpa.predicate.PredicateTransferRelation.getAbstractSuccessorsForEdge(PredicateTransferRelation.java:152)
	at org.sosy_lab.cpachecker.cpa.composite.CompositeTransferRelation.getAbstractSuccessorForSimpleEdge(CompositeTransferRelation.java:179)
	at org.sosy_lab.cpachecker.cpa.composite.CompositeTransferRelation.getAbstractSuccessorForEdge(CompositeTransferRelation.java:159)
	at org.sosy_lab.cpachecker.cpa.composite.CompositeTransferRelation.getAbstractSuccessors(CompositeTransferRelation.java:111)
	at org.sosy_lab.cpachecker.cpa.arg.ARGTransferRelation.getAbstractSuccessors(ARGTransferRelation.java:68)
	at org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm.run0(CPAAlgorithm.java:278)
	at org.sosy_lab.cpachecker.core.algorithm.CPAAlgorithm.run(CPAAlgorithm.java:219)
	at org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker.checkCounterexample(CounterexampleCPAChecker.java:173)
	at org.sosy_lab.cpachecker.core.algorithm.CounterexampleCPAChecker.checkCounterexample(CounterexampleCPAChecker.java:128)
	at org.sosy_lab.cpachecker.core.algorithm.CounterexampleCheckAlgorithm.checkCounterexample(CounterexampleCheckAlgorithm.java:183)
	at org.sosy_lab.cpachecker.core.algorithm.CounterexampleCheckAlgorithm.run(CounterexampleCheckAlgorithm.java:157)
	at org.sosy_lab.cpachecker.core.CPAchecker.runAlgorithm(CPAchecker.java:394)
	at org.sosy_lab.cpachecker.core.CPAchecker.run(CPAchecker.java:284)
	at org.sosy_lab.cpachecker.cmdline.CPAMain.main(CPAMain.java:133)
