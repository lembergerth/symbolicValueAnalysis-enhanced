scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem13_label55_true-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-750957590_tempdir
Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               42874638 (count: 7145775, min: 0, max: 6, avg: 6.00)
Number of global variables:                        42874638 (count: 7145775, min: 0, max: 6, avg: 6.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 7971316
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               32.888s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 31.959s
  Time for transition matches:                        11.718s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                      8105312 (count: 8106249, min: 0, max: 1, avg: 1.00) [0 x 937, 1 x 8105312]

CPA algorithm statistics
------------------------
Number of iterations:            7424741
Max size of waitlist:            16371
Average size of waitlist:        8021
Number of computed successors:   7971316
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         529391
Number of times breaked:         6

Total time for CPA algorithm:       626.209s (Max:   614.081s)
  Time for choose from waitlist:      5.857s
  Time for precision adjustment:     62.178s
  Time for transfer relation:       129.292s
  Time for stop operator:           371.160s
  Time for adding to reached set:    23.929s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              6
Total number of targets found:            6
Time for completing refinement:           3.077s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 182493
Max. size of reached set after ref.:  2
Avg. size of reached set before ref.: 49360.50
Avg. size of reached set after ref.:  2.00

Total time for CEGAR algorithm:     629.353s
Time for refinements:                 3.144s
Average time for refinement:          0.524s
Max time for refinement:              1.286s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          2959
  Total lines:            4769
  Line coverage:          0.620
  Visited conditions:     13621
  Total conditions:       15642
  Condition coverage:     0.871

CPAchecker general statistics
-----------------------------
Number of program locations:     8994
Number of CFA edges:             16818
Number of relevant variables:    11
Number of functions:             5
Number of loops:                 1
Size of reached set:             7145775
  Size of final wait list        16370

Time for analysis setup:          6.095s
  Time for loading CPAs:          0.582s
  Time for loading parser:        0.557s
  Time for CFA construction:      4.872s
    Time for parsing file(s):     1.123s
    Time for AST to CFA:          1.551s
    Time for CFA sanity check:    0.287s
    Time for post-processing:     1.734s
      Time for var class.:        0.000s
Time for Analysis:              629.353s
CPU time for analysis:          888.890s
Total time for CPAchecker:      635.454s
Total CPU time for CPAchecker:  900.060s

Time for Garbage Collector:     260.053s (in 61 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6324MB (  6031 MiB) max;   3678MB (  3507 MiB) avg;   8507MB (  8113 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:        4428MB (  4223 MiB) max;   2447MB (  2334 MiB) avg;   4816MB (  4593 MiB) peak
Allocated heap memory:          8624MB (  8225 MiB) max;   6228MB (  5939 MiB) avg
Allocated non-heap memory:        46MB (    43 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  13580MB ( 12951 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
