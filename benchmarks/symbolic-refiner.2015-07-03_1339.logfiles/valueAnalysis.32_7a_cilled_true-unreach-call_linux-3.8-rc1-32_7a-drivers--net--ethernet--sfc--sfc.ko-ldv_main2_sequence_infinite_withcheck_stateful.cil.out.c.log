scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--sfc--sfc.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1662043441_tempdir
line 60525: Dereferencing of non-pointer type efx_vfdi_op_t  in expression *(vfdi_ops[req->op]) (ASTConverter.convert, WARNING)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 18532: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18580: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31146: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33731: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 31053-31054: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 33638-33639: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31188: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33773: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31100: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33685: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 37300: Function pointer *(efx->mdio.mdio_read) with type int (*)(struct net_device *, int, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 43615-43616: Function pointer *(efx->mdio.mdio_write) with type int (*)(struct net_device *, int, int, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

Skipping recursive function call from falcon_probe_port to falcon_probe_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_remove_port to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_sriov_vfdi to falcon_probe_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_sriov_vfdi to tenxpress_phy_init (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_stop_all to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_stop_all to efx_sriov_vfdi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_remove_nic to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_remove_nic to efx_sriov_vfdi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_remove_nic to falcon_remove_nic (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_monitor to falcon_probe_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_monitor to tenxpress_phy_init (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_monitor to efx_pm_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_reconfigure_port to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_reconfigure_port to efx_sriov_vfdi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_reconfigure_port to falcon_remove_nic (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_reconfigure_port to falcon_monitor (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Infeasible counterexample found, but could not remove it from the ARG. Therefore, we cannot prove safety. (CounterexampleCheckAlgorithm.checkCounterexample, WARNING)

Skipping recursive function call from efx_reset_down to efx_stop_all (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from efx_reset_down to efx_stop_all (CounterexampleCheck:CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from siena_remove_port to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from siena_remove_port to efx_sriov_vfdi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from siena_remove_port to falcon_remove_nic (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from siena_remove_port to falcon_monitor (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from efx_reset_down to efx_stop_all (CounterexampleCheck:CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from siena_remove_port to siena_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_mtd_sync to falcon_probe_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_mtd_sync to tenxpress_phy_init (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_mtd_sync to efx_pm_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_mtd_sync to falcon_reconfigure_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from txc_apply_defaults to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from txc_apply_defaults to efx_sriov_vfdi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from txc_apply_defaults to falcon_remove_nic (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from txc_apply_defaults to falcon_monitor (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 43615-43616: Ignoring function call through function pointer *(efx->mdio.mdio_write): (*(efx->mdio.mdio_write))(efx->net_dev, efx->mdio.prtad, devad, (int)((u16 )addr), (int)((u16 )value)); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 37300: Ignoring function call through function pointer *(efx->mdio.mdio_read): tmp = (*(efx->mdio.mdio_read))(efx->net_dev, efx->mdio.prtad, devad, (int)((u16 )addr)); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 43615-43616: Ignoring function call through function pointer *(efx->mdio.mdio_write): (*(efx->mdio.mdio_write))(efx->net_dev, efx->mdio.prtad, devad, (int)((u16 )addr), (int)((u16 )value)); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 37300: Ignoring function call through function pointer *(efx->mdio.mdio_read): tmp = (*(efx->mdio.mdio_read))(efx->net_dev, efx->mdio.prtad, devad, (int)((u16 )addr)); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from efx_reset_down to efx_stop_all (CounterexampleCheck:CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 43615-43616: Ignoring function call through function pointer *(efx->mdio.mdio_write): (*(efx->mdio.mdio_write))(efx->net_dev, efx->mdio.prtad, devad, (int)((u16 )addr), (int)((u16 )value)); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 37300: Ignoring function call through function pointer *(efx->mdio.mdio_read): tmp = (*(efx->mdio.mdio_read))(efx->net_dev, efx->mdio.prtad, devad, (int)((u16 )addr)); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from txc_apply_defaults to siena_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from txc_apply_defaults to efx_mtd_sync (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_fini_port to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_fini_port to efx_sriov_vfdi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_fini_port to falcon_remove_nic (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_fini_port to falcon_monitor (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                3047485 (count: 469784, min: 0, max: 11, avg: 6.49)
Number of global variables:                         1879116 (count: 469784, min: 0, max: 4, avg: 4.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 2060232
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                5.859s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.712s
  Time for transition matches:                         6.146s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      2956405 (count: 2956405, min: 1, max: 1, avg: 1.00) [1 x 2956405]

CPA algorithm statistics
------------------------
Number of iterations:            1875824
Max size of waitlist:            702
Average size of waitlist:        531
Number of computed successors:   2060232
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         188392
Number of times breaked:         72

Total time for CPA algorithm:       813.714s (Max:   744.294s)
  Time for choose from waitlist:      2.332s
  Time for precision adjustment:     12.316s
  Time for transfer relation:        46.852s
  Time for stop operator:           735.535s
  Time for adding to reached set:     5.038s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             72
Total number of targets found:           72
Time for completing refinement:           7.819s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                72
Number of successful refinements:     63
Number of failed refinements:         0
Max. size of reached set before ref.: 166056
Max. size of reached set after ref.:  142176
Avg. size of reached set before ref.: 123839.51
Avg. size of reached set after ref.:  104123.81

Total time for CEGAR algorithm:     824.978s
Time for refinements:                11.249s
Average time for refinement:          0.156s
Max time for refinement:              0.620s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    9
Number of infeasible paths:         9 (100%)
Time for counterexample checks:        24.125s

Code Coverage
-----------------------------
  Function coverage:      0.291
  Visited lines:          14418
  Total lines:            34906
  Line coverage:          0.413
  Visited conditions:     2904
  Total conditions:       14382
  Condition coverage:     0.202

CPAchecker general statistics
-----------------------------
Number of program locations:     32351
Number of CFA edges:             52494
Number of relevant variables:    7400
Number of functions:             1276
Number of loops:                 246
Size of reached set:             469784
  Number of reached locations:   6442 (20%)
    Avg states per location:     72
    Max states per location:     27537 (at node N6069)
  Number of reached functions:   371 (29%)
  Number of partitions:          357025
    Avg size of partitions:      1
    Max size of partitions:      13443 (with key [N24698 (before line 48872), Function efx_mcdi_copyin called from node N25079, stack depth 26 [65126f6], stack [main, falcon_b0_test_chip, __efx_reconfigure_port, falcon_probe_port, tenxpress_phy_init, falcon_remove_port, efx_sriov_vfdi, efx_pm_suspend, efx_pm_freeze, efx_stop_all, falcon_remove_nic, falcon_monitor, falcon_reconfigure_port, siena_remove_port, efx_mtd_sync, txc43128_phy_reconfigure, txc_apply_defaults, efx_pci_remove, efx_pci_remove_main, efx_fini_port, efx_sriov_reset_vf_work, efx_sriov_reset_vf, efx_sriov_memcpy, efx_mcdi_rpc, efx_mcdi_rpc_start, efx_mcdi_copyin], Init])
  Number of target states:       0
  Size of final wait list        572

Time for analysis setup:         13.804s
  Time for loading CPAs:          0.947s
  Time for loading parser:        0.612s
  Time for CFA construction:     12.163s
    Time for parsing file(s):     2.676s
    Time for AST to CFA:          3.928s
    Time for CFA sanity check:    0.412s
    Time for post-processing:     4.943s
      Time for var class.:        0.000s
Time for Analysis:              849.561s
CPU time for analysis:          874.470s
Total time for CPAchecker:      863.371s
Total CPU time for CPAchecker:  900.370s

Time for Garbage Collector:       7.873s (in 70 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3475MB (  3314 MiB) max;   1378MB (  1314 MiB) avg;   3777MB (  3602 MiB) peak
Used non-heap memory:             31MB (    30 MiB) max;     31MB (    29 MiB) avg;     31MB (    30 MiB) peak
Used in PS Old Gen pool:         464MB (   443 MiB) max;    346MB (   330 MiB) avg;    464MB (   443 MiB) peak
Allocated heap memory:          4753MB (  4533 MiB) max;   3457MB (  3296 MiB) avg
Allocated non-heap memory:        31MB (    30 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:  13665MB ( 13032 MiB) max;  13662MB ( 13029 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
