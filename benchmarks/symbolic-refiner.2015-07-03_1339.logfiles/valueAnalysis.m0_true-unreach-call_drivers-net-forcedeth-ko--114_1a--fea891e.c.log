scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-commit-tester/ALL.prp ../svcomp15/ldv-commit-tester/m0_true-unreach-call_drivers-net-forcedeth-ko--114_1a--fea891e.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1238010029_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6136: Function pointer *(ops___0->alloc_coherent) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6185: Function pointer *(ops___0->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5983: Function pointer *(ops___0->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5889-5890: Function pointer *(ops___0->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6026: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5937: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5467-5472: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Infeasible counterexample found, but could not remove it from the ARG. Therefore, we cannot prove safety. (CounterexampleCheckAlgorithm.checkCounterexample, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               19226175 (count: 1888385, min: 0, max: 16, avg: 10.18)
Number of global variables:                         7553532 (count: 1888385, min: 0, max: 4, avg: 4.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 8318771
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               26.435s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 48.331s
  Time for transition matches:                        19.247s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     12028473 (count: 12028473, min: 1, max: 1, avg: 1.00) [1 x 12028473]

CPA algorithm statistics
------------------------
Number of iterations:            7626981
Max size of waitlist:            2454
Average size of waitlist:        192
Number of computed successors:   8318771
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         696658
Number of times breaked:         577

Total time for CPA algorithm:       418.070s (Max:    81.712s)
  Time for choose from waitlist:      7.357s
  Time for precision adjustment:     50.383s
  Time for transfer relation:       266.445s
  Time for stop operator:            25.143s
  Time for adding to reached set:    28.906s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:            577
Total number of targets found:          577
Time for completing refinement:          44.017s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                577
Number of successful refinements:     531
Number of failed refinements:         0
Max. size of reached set before ref.: 1888385
Max. size of reached set after ref.:  1877420
Avg. size of reached set before ref.: 1421481.63
Avg. size of reached set after ref.:  1390953.98

Total time for CEGAR algorithm:     554.288s
Time for refinements:                62.346s
Average time for refinement:          0.108s
Max time for refinement:              2.827s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    46
Number of infeasible paths:         45 (98%)
Time for counterexample checks:       238.692s

Code Coverage
-----------------------------
  Function coverage:      0.947
  Visited lines:          10809
  Total lines:            11251
  Line coverage:          0.961
  Visited conditions:     1629
  Total conditions:       1812
  Condition coverage:     0.899

CPAchecker general statistics
-----------------------------
Number of program locations:     5620
Number of CFA edges:             8984
Number of relevant variables:    1784
Number of functions:             226
Number of loops:                 53
Size of reached set:             1888385
  Size of final wait list        263

Time for analysis setup:          6.484s
  Time for loading CPAs:          0.628s
  Time for loading parser:        0.517s
  Time for CFA construction:      5.262s
    Time for parsing file(s):     1.704s
    Time for AST to CFA:          1.641s
    Time for CFA sanity check:    0.214s
    Time for post-processing:     1.454s
      Time for var class.:        0.000s
Time for Analysis:              815.390s
CPU time for analysis:          890.710s
Total time for CPAchecker:      821.880s
Total CPU time for CPAchecker:  902.510s

Time for Garbage Collector:      52.135s (in 68 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4291MB (  4092 MiB) max;   2386MB (  2275 MiB) avg;   4855MB (  4630 MiB) peak
Used non-heap memory:             27MB (    26 MiB) max;     25MB (    23 MiB) avg;     28MB (    27 MiB) peak
Used in PS Old Gen pool:        1398MB (  1333 MiB) max;    851MB (   811 MiB) avg;   1398MB (  1333 MiB) peak
Allocated heap memory:          5454MB (  5201 MiB) max;   4894MB (  4667 MiB) avg
Allocated non-heap memory:        51MB (    49 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  14264MB ( 13604 MiB) max;  13659MB ( 13026 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
