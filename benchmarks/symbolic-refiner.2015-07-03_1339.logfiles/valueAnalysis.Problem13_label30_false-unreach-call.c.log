scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem13_label30_false-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-259495629_tempdir
Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               72589565 (count: 9067631, min: 0, max: 9, avg: 8.01)
Number of global variables:                        54405774 (count: 9067631, min: 0, max: 6, avg: 6.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                11696861
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               28.202s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 49.028s
  Time for transition matches:                        19.320s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                     11863160 (count: 11864888, min: 0, max: 1, avg: 1.00) [0 x 1728, 1 x 11863160]

CPA algorithm statistics
------------------------
Number of iterations:            11159391
Max size of waitlist:            15695
Average size of waitlist:        6695
Number of computed successors:   11696861
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         517089
Number of times breaked:         8

Total time for CPA algorithm:       667.133s (Max:   597.382s)
  Time for choose from waitlist:     10.752s
  Time for precision adjustment:     65.243s
  Time for transfer relation:       200.440s
  Time for stop operator:           302.604s
  Time for adding to reached set:    29.970s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              8
Total number of targets found:            8
Time for completing refinement:           7.988s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 1374050
Max. size of reached set after ref.:  165894
Avg. size of reached set before ref.: 284757.25
Avg. size of reached set after ref.:  20739.50

Total time for CEGAR algorithm:     675.295s
Time for refinements:                 8.121s
Average time for refinement:          1.015s
Max time for refinement:              3.726s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          2674
  Total lines:            4769
  Line coverage:          0.561
  Visited conditions:     13176
  Total conditions:       15642
  Condition coverage:     0.842

CPAchecker general statistics
-----------------------------
Number of program locations:     8994
Number of CFA edges:             16818
Number of relevant variables:    11
Number of functions:             5
Number of loops:                 1
Size of reached set:             9067631
  Size of final wait list        15694

Time for analysis setup:          6.299s
  Time for loading CPAs:          0.540s
  Time for loading parser:        0.614s
  Time for CFA construction:      5.058s
    Time for parsing file(s):     1.191s
    Time for AST to CFA:          1.559s
    Time for CFA sanity check:    0.241s
    Time for post-processing:     1.818s
      Time for var class.:        0.000s
Time for Analysis:              675.295s
CPU time for analysis:          888.840s
Total time for CPAchecker:      681.599s
Total CPU time for CPAchecker:  900.420s

Time for Garbage Collector:     211.270s (in 66 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               8250MB (  7868 MiB) max;   4100MB (  3910 MiB) avg;   9608MB (  9163 MiB) peak
Used non-heap memory:             24MB (    22 MiB) max;     21MB (    20 MiB) avg;     24MB (    22 MiB) peak
Used in PS Old Gen pool:        5871MB (  5599 MiB) max;   2774MB (  2645 MiB) avg;   5871MB (  5599 MiB) peak
Allocated heap memory:          9009MB (  8592 MiB) max;   6561MB (  6257 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  13580MB ( 12951 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
