scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/systemc/ALL.prp ../svcomp15/systemc/token_ring.09_false-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1896969110_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               49707531 (count: 2161199, min: 0, max: 23, avg: 23.00)
Number of global variables:                        49707531 (count: 2161199, min: 0, max: 23, avg: 23.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                10482351
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               59.104s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                180.937s
  Time for transition matches:                        71.339s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     15690381 (count: 15690381, min: 1, max: 1, avg: 1.00) [1 x 15690381]

CPA algorithm statistics
------------------------
Number of iterations:            8976501
Max size of waitlist:            5739
Average size of waitlist:        1834
Number of computed successors:   10482351
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         1504428
Number of times breaked:         27

Total time for CPA algorithm:       759.621s (Max:   220.979s)
  Time for choose from waitlist:     24.349s
  Time for precision adjustment:    142.212s
  Time for transfer relation:       298.123s
  Time for stop operator:           125.683s
  Time for adding to reached set:    40.165s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             27
Total number of targets found:           27
Time for completing refinement:          28.646s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 2204305
Max. size of reached set after ref.:  716977
Avg. size of reached set before ref.: 288303.07
Avg. size of reached set after ref.:  35831.78

Total time for CEGAR algorithm:     788.903s
Time for refinements:                28.965s
Average time for refinement:          1.072s
Max time for refinement:              8.464s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.886
  Visited lines:          730
  Total lines:            817
  Line coverage:          0.894
  Visited conditions:     238
  Total conditions:       316
  Condition coverage:     0.753

CPAchecker general statistics
-----------------------------
Number of program locations:     719
Number of CFA edges:             946
Number of relevant variables:    101
Number of functions:             35
Number of loops:                 2
Size of reached set:             2161199
  Size of final wait list        1516

Time for analysis setup:          2.215s
  Time for loading CPAs:          0.508s
  Time for loading parser:        0.580s
  Time for CFA construction:      1.005s
    Time for parsing file(s):     0.379s
    Time for AST to CFA:          0.278s
    Time for CFA sanity check:    0.070s
    Time for post-processing:     0.213s
      Time for var class.:        0.000s
Time for Analysis:              788.903s
CPU time for analysis:          896.760s
Total time for CPAchecker:      791.123s
Total CPU time for CPAchecker:  900.370s

Time for Garbage Collector:     102.537s (in 47 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4759MB (  4538 MiB) max;   2536MB (  2419 MiB) avg;   7032MB (  6706 MiB) peak
Used non-heap memory:             22MB (    21 MiB) max;     21MB (    20 MiB) avg;     22MB (    21 MiB) peak
Used in PS Old Gen pool:        2988MB (  2850 MiB) max;   1216MB (  1159 MiB) avg;   3205MB (  3057 MiB) peak
Allocated heap memory:          6588MB (  6283 MiB) max;   5113MB (  4876 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  13581MB ( 12952 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
