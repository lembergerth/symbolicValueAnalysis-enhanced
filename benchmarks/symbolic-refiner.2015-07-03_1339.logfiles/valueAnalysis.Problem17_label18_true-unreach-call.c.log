scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem17_label18_true-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1966843570_tempdir
Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               26258205 (count: 5251643, min: 0, max: 5, avg: 5.00)
Number of global variables:                        26258205 (count: 5251643, min: 0, max: 5, avg: 5.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 6901295
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               31.713s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 34.841s
  Time for transition matches:                        13.726s
  Time for transition assertions:                      0.013s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                      7060760 (count: 7065443, min: 0, max: 1, avg: 1.00) [0 x 4683, 1 x 7060760]

CPA algorithm statistics
------------------------
Number of iterations:            6172640
Max size of waitlist:            24773
Average size of waitlist:        10785
Number of computed successors:   6901295
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         697914
Number of times breaked:         5

Total time for CPA algorithm:       741.231s (Max:   699.144s)
  Time for choose from waitlist:      6.588s
  Time for precision adjustment:     64.623s
  Time for transfer relation:        83.791s
  Time for stop operator:           536.610s
  Time for adding to reached set:    13.367s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              5
Total number of targets found:            5
Time for completing refinement:           6.923s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 479385
Max. size of reached set after ref.:  2
Avg. size of reached set before ref.: 190349.80
Avg. size of reached set after ref.:  2.00

Total time for CEGAR algorithm:     748.282s
Time for refinements:                 7.051s
Average time for refinement:          1.410s
Max time for refinement:              3.291s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          1338
  Total lines:            2167
  Line coverage:          0.617
  Visited conditions:     6486
  Total conditions:       7756
  Condition coverage:     0.836

CPAchecker general statistics
-----------------------------
Number of program locations:     4535
Number of CFA edges:             8414
Number of relevant variables:    8
Number of functions:             3
Number of loops:                 1
Size of reached set:             5251643
  Size of final wait list        24772

Time for analysis setup:          4.506s
  Time for loading CPAs:          0.500s
  Time for loading parser:        0.518s
  Time for CFA construction:      3.407s
    Time for parsing file(s):     0.790s
    Time for AST to CFA:          1.053s
    Time for CFA sanity check:    0.286s
    Time for post-processing:     1.078s
      Time for var class.:        0.000s
Time for Analysis:              748.282s
CPU time for analysis:          892.160s
Total time for CPAchecker:      752.794s
Total CPU time for CPAchecker:  900.060s

Time for Garbage Collector:     139.432s (in 69 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6159MB (  5874 MiB) max;   3340MB (  3185 MiB) avg;   6847MB (  6530 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:        3286MB (  3134 MiB) max;   1950MB (  1859 MiB) avg;   3286MB (  3134 MiB) peak
Allocated heap memory:          7934MB (  7567 MiB) max;   5675MB (  5412 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:  13580MB ( 12951 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
