scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop analysis.checkCounterexamples=false -timelimit 900s -stats -spec ../svcomp15/ntdrivers/ALL.prp ../svcomp15/ntdrivers/parport_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-220571620_tempdir
line 6237: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6238: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6239: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6288: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6312: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6324: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6765: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6766: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6767: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 6830: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundPort (ASTConverter.convert, WARNING)

line 6910: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundIrq (ASTConverter.convert, WARNING)

line 6922: Dereferencing of non-pointer type PBOOLEAN  in expression *FoundDma (ASTConverter.convert, WARNING)

line 8322: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8333: Dereferencing of non-pointer type PULONG  in expression *ParameterValue (ASTConverter.convert, WARNING)

line 8649: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8650: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8658: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8659: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 8667: Dereferencing of non-pointer type PLONG  in expression *(((struct _SYNCHRONIZED_COUNT_CONTEXT *)SyncContext)->Count) (ASTConverter.convert, WARNING)

line 9189: Dereferencing of non-pointer type PULONG  in expression *PortNumber (ASTConverter.convert, WARNING)

line 9490: Dereferencing of non-pointer type PULONG  in expression *PRegFlags (ASTConverter.convert, WARNING)

line 9520: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker
 counterexample.checker.config 
 (CPAchecker.printConfigurationWarnings, WARNING)

Skipping recursive function call from PptClearChipMode to PptClearChipMode (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from PptSetChipMode to PptClearChipMode (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from PptSetChipMode to PptSetChipMode (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from PptClearChipMode to PptSetChipMode (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 288183 (count: 15033, min: 0, max: 24, avg: 19.17)
Number of global variables:                          255447 (count: 15033, min: 0, max: 17, avg: 16.99)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  205382
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                1.177s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.667s
  Time for transition matches:                         0.695s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       319436 (count: 319436, min: 1, max: 1, avg: 1.00) [1 x 319436]

CPA algorithm statistics
------------------------
Number of iterations:            182875
Max size of waitlist:            93
Average size of waitlist:        43
Number of computed successors:   205382
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         22637
Number of times breaked:         139

Total time for CPA algorithm:         9.855s (Max:     0.927s)
  Time for choose from waitlist:      0.247s
  Time for precision adjustment:      2.175s
  Time for transfer relation:         4.705s
  Time for stop operator:             0.757s
  Time for adding to reached set:     0.599s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:            139
Total number of targets found:          139
Time for completing refinement:           2.194s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                139
Number of successful refinements:     139
Number of failed refinements:         0
Max. size of reached set before ref.: 23901
Max. size of reached set after ref.:  23643
Avg. size of reached set before ref.: 14276.32
Avg. size of reached set after ref.:  13069.76

Total time for CEGAR algorithm:      14.617s
Time for refinements:                 3.806s
Average time for refinement:          0.027s
Max time for refinement:              0.253s

Code Coverage
-----------------------------
  Function coverage:      0.508
  Visited lines:          4987
  Total lines:            6409
  Line coverage:          0.778
  Visited conditions:     685
  Total conditions:       1152
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     3329
Number of CFA edges:             4358
Number of relevant variables:    917
Number of functions:             181
Number of loops:                 37
Size of reached set:             15033
  Number of reached locations:   2045 (61%)
    Avg states per location:     7
    Max states per location:     119 (at node N43)
  Number of reached functions:   92 (51%)
  Number of partitions:          12228
    Avg size of partitions:      1
    Max size of partitions:      45 (with key [N4846 (before line 9731), Function main called from node N4830, stack depth 1 [158b6810], stack [main], Init])
  Number of target states:       0

Time for analysis setup:          4.463s
  Time for loading CPAs:          0.660s
  Time for loading parser:        0.519s
  Time for CFA construction:      3.212s
    Time for parsing file(s):     0.937s
    Time for AST to CFA:          1.095s
    Time for CFA sanity check:    0.142s
    Time for post-processing:     0.832s
      Time for var class.:        0.000s
Time for Analysis:               14.618s
CPU time for analysis:           21.710s
Total time for CPAchecker:       19.087s
Total CPU time for CPAchecker:   29.660s

Time for Garbage Collector:       0.482s (in 4 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               1095MB (  1044 MiB) max;    364MB (   347 MiB) avg;   1095MB (  1044 MiB) peak
Used non-heap memory:             24MB (    23 MiB) max;     21MB (    20 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          3611MB (  3444 MiB) max;   2247MB (  2143 MiB) avg
Allocated non-heap memory:        26MB (    25 MiB) max;     25MB (    24 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
