scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem12_label58_true-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_269237292_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               31422800 (count: 6284562, min: 0, max: 5, avg: 5.00)
Number of global variables:                        31422800 (count: 6284562, min: 0, max: 5, avg: 5.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 7280004
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               25.566s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                106.190s
  Time for transition matches:                        42.489s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                      7446973 (count: 7448787, min: 0, max: 1, avg: 1.00) [0 x 1814, 1 x 7446973]

CPA algorithm statistics
------------------------
Number of iterations:            6694104
Max size of waitlist:            19498
Average size of waitlist:        9332
Number of computed successors:   7280004
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         564897
Number of times breaked:         5

Total time for CPA algorithm:       888.842s (Max:   862.093s)
  Time for choose from waitlist:     18.676s
  Time for precision adjustment:     72.346s
  Time for transfer relation:       310.742s
  Time for stop operator:           358.115s
  Time for adding to reached set:    28.482s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              5
Total number of targets found:            5
Time for completing refinement:           4.462s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 327182
Max. size of reached set after ref.:  2
Avg. size of reached set before ref.: 86111.20
Avg. size of reached set after ref.:  2.00

Total time for CEGAR algorithm:     893.442s
Time for refinements:                 4.599s
Average time for refinement:          0.919s
Max time for refinement:              2.185s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          3944
  Total lines:            3979
  Line coverage:          0.991
  Visited conditions:     13251
  Total conditions:       13318
  Condition coverage:     0.995

CPAchecker general statistics
-----------------------------
Number of program locations:     7552
Number of CFA edges:             14214
Number of relevant variables:    10
Number of functions:             5
Number of loops:                 1
Size of reached set:             6284562
  Size of final wait list        19497

Time for analysis setup:          6.087s
  Time for loading CPAs:          0.574s
  Time for loading parser:        0.636s
  Time for CFA construction:      4.777s
    Time for parsing file(s):     0.972s
    Time for AST to CFA:          1.380s
    Time for CFA sanity check:    0.374s
    Time for post-processing:     1.851s
      Time for var class.:        0.000s
Time for Analysis:              893.442s
CPU time for analysis:         1142.460s
Total time for CPAchecker:      899.536s
Total CPU time for CPAchecker: 1153.470s

Time for Garbage Collector:     248.706s (in 57 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6192MB (  5905 MiB) max;   3573MB (  3407 MiB) avg;   7804MB (  7442 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:        4042MB (  3855 MiB) max;   2181MB (  2080 MiB) avg;   4138MB (  3946 MiB) peak
Allocated heap memory:          8490MB (  8097 MiB) max;   5684MB (  5421 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
