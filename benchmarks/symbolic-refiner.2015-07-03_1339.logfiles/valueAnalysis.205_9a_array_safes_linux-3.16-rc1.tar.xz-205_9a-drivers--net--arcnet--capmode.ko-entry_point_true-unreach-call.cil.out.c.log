scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--arcnet--capmode.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-465100525_tempdir
line 6583: Function pointer *(lp->hw.copy_to_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6585: Function pointer *(lp->hw.copy_to_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6587: Function pointer *(lp->hw.copy_to_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6464-6465: Function pointer *(lp->hw.copy_from_card) with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Infeasible counterexample found, but could not remove it from the ARG. Therefore, we cannot prove safety. (CounterexampleCheckAlgorithm.checkCounterexample, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Analysis incomplete: no errors found, but not everything could be checked. (CPAchecker.analyzeResult, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 113382 (count: 21537, min: 0, max: 6, avg: 5.26)
Number of global variables:                           85904 (count: 21537, min: 0, max: 4, avg: 3.99)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                   29753
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.193s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.276s
Automaton transfers with branching:                0
Automaton transfer successors:                        50629 (count: 50629, min: 1, max: 1, avg: 1.00) [1 x 50629]

CPA algorithm statistics
------------------------
Number of iterations:            27829
Max size of waitlist:            22
Average size of waitlist:        10
Number of computed successors:   29753
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         1892
Number of times breaked:         24

Total time for CPA algorithm:         2.711s (Max:     0.634s)
  Time for choose from waitlist:      0.065s
  Time for precision adjustment:      0.426s
  Time for transfer relation:         1.276s
  Time for stop operator:             0.375s
  Time for adding to reached set:     0.198s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             24
Total number of targets found:           24
Time for completing refinement:           2.854s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 20083
Max. size of reached set after ref.:  1696
Avg. size of reached set before ref.: 5503.08
Avg. size of reached set after ref.:  401.88

Total time for CEGAR algorithm:       6.867s
Time for refinements:                 4.150s
Average time for refinement:          0.172s
Max time for refinement:              0.542s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    16
Number of infeasible paths:         16 (100%)
Time for counterexample checks:        16.219s

Code Coverage
-----------------------------
  Function coverage:      0.571
  Visited lines:          5700
  Total lines:            5785
  Line coverage:          0.985
  Visited conditions:     91
  Total conditions:       112
  Condition coverage:     0.813

CPAchecker general statistics
-----------------------------
Number of program locations:     455
Number of CFA edges:             557
Number of relevant variables:    114
Number of functions:             49
Number of loops:                 6
Size of reached set:             21537
  Number of reached locations:   334 (73%)
    Avg states per location:     64
    Max states per location:     2720 (at node N548)
  Number of reached functions:   28 (57%)
  Number of partitions:          6016
    Avg size of partitions:      3
    Max size of partitions:      120 (with key [N548 (before lines 7183-7195), Function ldv_set_remove called from node N634, stack depth 5 [711d18c9], stack [main, rx, ldv_netif_rx_15, ldv_skb_free_int, ldv_set_remove], Init])
  Number of target states:       0

Time for analysis setup:          2.931s
  Time for loading CPAs:          0.502s
  Time for loading parser:        0.539s
  Time for CFA construction:      1.812s
    Time for parsing file(s):     0.726s
    Time for AST to CFA:          0.582s
    Time for CFA sanity check:    0.047s
    Time for post-processing:     0.221s
      Time for var class.:        0.000s
Time for Analysis:               23.157s
CPU time for analysis:           35.360s
Total time for CPAchecker:       26.093s
Total CPU time for CPAchecker:   40.380s

Time for Garbage Collector:       0.497s (in 4 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               1080MB (  1030 MiB) max;    406MB (   387 MiB) avg;   1111MB (  1059 MiB) peak
Used non-heap memory:             27MB (    26 MiB) max;     24MB (    22 MiB) avg;     27MB (    26 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          3611MB (  3444 MiB) max;   2376MB (  2266 MiB) avg
Allocated non-heap memory:        28MB (    26 MiB) max;     26MB (    24 MiB) avg
Total process virtual memory:  13665MB ( 13032 MiB) max;  13645MB ( 13013 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
