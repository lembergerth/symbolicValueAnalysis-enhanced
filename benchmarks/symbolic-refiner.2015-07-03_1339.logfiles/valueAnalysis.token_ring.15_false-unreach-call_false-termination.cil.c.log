scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/systemc/ALL.prp ../svcomp15/systemc/token_ring.15_false-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1136742682_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               80851248 (count: 3109681, min: 0, max: 26, avg: 26.00)
Number of global variables:                        80851248 (count: 3109681, min: 0, max: 26, avg: 26.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                18264899
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:              109.574s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                102.895s
  Time for transition matches:                        38.981s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     27234584 (count: 27234584, min: 1, max: 1, avg: 1.00) [1 x 27234584]

CPA algorithm statistics
------------------------
Number of iterations:            15392935
Max size of waitlist:            2888
Average size of waitlist:        1252
Number of computed successors:   18264899
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         2870253
Number of times breaked:         30

Total time for CPA algorithm:       681.922s (Max:   179.268s)
  Time for choose from waitlist:     14.022s
  Time for precision adjustment:    187.447s
  Time for transfer relation:       227.085s
  Time for stop operator:           113.824s
  Time for adding to reached set:    35.277s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             30
Total number of targets found:           30
Time for completing refinement:          63.038s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 5015655
Max. size of reached set after ref.:  1435089
Avg. size of reached set before ref.: 473433.13
Avg. size of reached set after ref.:  63934.27

Total time for CEGAR algorithm:     745.925s
Time for refinements:                63.464s
Average time for refinement:          2.115s
Max time for refinement:             19.200s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.860
  Visited lines:          903
  Total lines:            1092
  Line coverage:          0.827
  Visited conditions:     285
  Total conditions:       436
  Condition coverage:     0.654

CPAchecker general statistics
-----------------------------
Number of program locations:     962
Number of CFA edges:             1265
Number of relevant variables:    137
Number of functions:             43
Number of loops:                 2
Size of reached set:             3109681
  Size of final wait list        2510

Time for analysis setup:          2.223s
  Time for loading CPAs:          0.505s
  Time for loading parser:        0.551s
  Time for CFA construction:      1.086s
    Time for parsing file(s):     0.363s
    Time for AST to CFA:          0.296s
    Time for CFA sanity check:    0.083s
    Time for post-processing:     0.253s
      Time for var class.:        0.000s
Time for Analysis:              745.925s
CPU time for analysis:          896.320s
Total time for CPAchecker:      748.153s
Total CPU time for CPAchecker:  900.100s

Time for Garbage Collector:     146.028s (in 72 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6662MB (  6354 MiB) max;   2977MB (  2839 MiB) avg;   8557MB (  8160 MiB) peak
Used non-heap memory:             22MB (    21 MiB) max;     20MB (    19 MiB) avg;     22MB (    21 MiB) peak
Used in PS Old Gen pool:        4694MB (  4477 MiB) max;   1706MB (  1627 MiB) avg;   4799MB (  4577 MiB) peak
Allocated heap memory:          7959MB (  7591 MiB) max;   5801MB (  5532 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
