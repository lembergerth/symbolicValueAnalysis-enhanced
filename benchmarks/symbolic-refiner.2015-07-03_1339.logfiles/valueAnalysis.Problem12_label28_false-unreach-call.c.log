scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem12_label28_false-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_226868802_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               55741996 (count: 7952078, min: 0, max: 8, avg: 7.01)
Number of global variables:                        39760380 (count: 7952078, min: 0, max: 5, avg: 5.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 9961590
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               24.690s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 47.794s
  Time for transition matches:                        20.935s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.015s
Automaton transfers with branching:                0
Automaton transfer successors:                     10144851 (count: 10147949, min: 0, max: 1, avg: 1.00) [0 x 3098, 1 x 10144851]

CPA algorithm statistics
------------------------
Number of iterations:            9407194
Max size of waitlist:            17841
Average size of waitlist:        7791
Number of computed successors:   9961590
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         532526
Number of times breaked:         7

Total time for CPA algorithm:       679.143s (Max:   623.000s)
  Time for choose from waitlist:      8.953s
  Time for precision adjustment:     56.083s
  Time for transfer relation:       188.566s
  Time for stop operator:           353.497s
  Time for adding to reached set:    23.594s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              7
Total number of targets found:            7
Time for completing refinement:           8.046s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 1190658
Max. size of reached set after ref.:  351531
Avg. size of reached set before ref.: 261219.86
Avg. size of reached set after ref.:  50221.71

Total time for CEGAR algorithm:     687.490s
Time for refinements:                 8.266s
Average time for refinement:          1.180s
Max time for refinement:              2.620s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          3928
  Total lines:            3979
  Line coverage:          0.987
  Visited conditions:     13178
  Total conditions:       13318
  Condition coverage:     0.989

CPAchecker general statistics
-----------------------------
Number of program locations:     7552
Number of CFA edges:             14214
Number of relevant variables:    10
Number of functions:             5
Number of loops:                 1
Size of reached set:             7952078
  Size of final wait list        17840

Time for analysis setup:          6.027s
  Time for loading CPAs:          0.534s
  Time for loading parser:        0.574s
  Time for CFA construction:      4.827s
    Time for parsing file(s):     1.014s
    Time for AST to CFA:          1.330s
    Time for CFA sanity check:    0.433s
    Time for post-processing:     1.848s
      Time for var class.:        0.000s
Time for Analysis:              687.490s
CPU time for analysis:          913.660s
Total time for CPAchecker:      693.523s
Total CPU time for CPAchecker:  924.640s

Time for Garbage Collector:     226.000s (in 65 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               7411MB (  7067 MiB) max;   3951MB (  3768 MiB) avg;   9478MB (  9039 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:        5433MB (  5181 MiB) max;   2587MB (  2467 MiB) avg;   5491MB (  5236 MiB) peak
Allocated heap memory:          9645MB (  9199 MiB) max;   6357MB (  6063 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
