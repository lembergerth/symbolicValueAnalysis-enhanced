scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem06_label49_true-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_310282600_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               180720672 (count: 8214578, min: 0, max: 22, avg: 22.00)
Number of global variables:                        180720672 (count: 8214578, min: 0, max: 22, avg: 22.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                11297544
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:              185.285s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 45.843s
  Time for transition matches:                        18.801s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.012s
Automaton transfers with branching:                0
Automaton transfer successors:                     11611215 (count: 11613325, min: 0, max: 1, avg: 1.00) [0 x 2110, 1 x 11611215]

CPA algorithm statistics
------------------------
Number of iterations:            9966184
Max size of waitlist:            5640
Average size of waitlist:        2401
Number of computed successors:   11297544
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         1322460
Number of times breaked:         24

Total time for CPA algorithm:       602.232s (Max:   540.374s)
  Time for choose from waitlist:      8.445s
  Time for precision adjustment:    228.897s
  Time for transfer relation:       206.940s
  Time for stop operator:            81.142s
  Time for adding to reached set:    26.530s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             24
Total number of targets found:           24
Time for completing refinement:          28.847s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 742230
Max. size of reached set after ref.:  14554
Avg. size of reached set before ref.: 73966.50
Avg. size of reached set after ref.:  612.04

Total time for CEGAR algorithm:     631.376s
Time for refinements:                29.130s
Average time for refinement:          1.213s
Max time for refinement:              7.837s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          7163
  Total lines:            9151
  Line coverage:          0.783
  Visited conditions:     29853
  Total conditions:       31852
  Condition coverage:     0.937

CPAchecker general statistics
-----------------------------
Number of program locations:     17295
Number of CFA edges:             33225
Number of relevant variables:    36
Number of functions:             6
Number of loops:                 1
Size of reached set:             8214578
  Size of final wait list        5636

Time for analysis setup:          7.026s
  Time for loading CPAs:          0.587s
  Time for loading parser:        0.565s
  Time for CFA construction:      5.791s
    Time for parsing file(s):     1.290s
    Time for AST to CFA:          1.735s
    Time for CFA sanity check:    0.418s
    Time for post-processing:     2.129s
      Time for var class.:        0.000s
Time for Analysis:              631.376s
CPU time for analysis:          887.580s
Total time for CPAchecker:      638.408s
Total CPU time for CPAchecker:  900.390s

Time for Garbage Collector:     254.696s (in 55 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               7337MB (  6997 MiB) max;   3676MB (  3506 MiB) avg;  10590MB ( 10099 MiB) peak
Used non-heap memory:             24MB (    23 MiB) max;     22MB (    21 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:        5815MB (  5546 MiB) max;   2223MB (  2120 MiB) avg;   6278MB (  5987 MiB) peak
Allocated heap memory:          9512MB (  9071 MiB) max;   6219MB (  5931 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  13580MB ( 12951 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
