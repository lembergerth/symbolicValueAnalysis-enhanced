scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_false-unreach-call_linux-3.8-rc1-32_7a-drivers--media--dvb-frontends--stv090x.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1621560531_tempdir
line 5294: Function pointer *(state->config->tuner_i2c_lock) with type void (*)(struct dvb_frontend *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5252: Function pointer *(state->config->tuner_i2c_lock) with type void (*)(struct dvb_frontend *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5124: Function pointer *(state->config->tuner_i2c_lock) with type void (*)(struct dvb_frontend *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Infeasible counterexample found, but could not remove it from the ARG. Therefore, we cannot prove safety. (CounterexampleCheckAlgorithm.checkCounterexample, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5252: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5252: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5252: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5252: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5252: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5252: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5252: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5252: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5252: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5252: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5252: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17466: Ignoring function call through function pointer *(state->config->tuner_get_status): tmp___53 = (*(state->config->tuner_get_status))(fe, &reg); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5252: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17466: Ignoring function call through function pointer *(state->config->tuner_get_status): tmp___53 = (*(state->config->tuner_get_status))(fe, &reg); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5252: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17466: Ignoring function call through function pointer *(state->config->tuner_get_status): tmp___53 = (*(state->config->tuner_get_status))(fe, &reg); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5252: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17466: Ignoring function call through function pointer *(state->config->tuner_get_status): tmp___53 = (*(state->config->tuner_get_status))(fe, &reg); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5252: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17466: Ignoring function call through function pointer *(state->config->tuner_get_status): tmp___53 = (*(state->config->tuner_get_status))(fe, &reg); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5252: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17466: Ignoring function call through function pointer *(state->config->tuner_get_status): tmp___53 = (*(state->config->tuner_get_status))(fe, &reg); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5252: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17466: Ignoring function call through function pointer *(state->config->tuner_get_status): tmp___53 = (*(state->config->tuner_get_status))(fe, &reg); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5252: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17466: Ignoring function call through function pointer *(state->config->tuner_get_status): tmp___53 = (*(state->config->tuner_get_status))(fe, &reg); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5124: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5252: Ignoring function call through function pointer *(state->config->tuner_i2c_lock): (*(state->config->tuner_i2c_lock))(&(state->frontend), 0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17466: Ignoring function call through function pointer *(state->config->tuner_get_status): tmp___53 = (*(state->config->tuner_get_status))(fe, &reg); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 523085 (count: 62162, min: 0, max: 14, avg: 8.41)
Number of global variables:                          310785 (count: 62162, min: 0, max: 5, avg: 5.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  177772
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.801s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.082s
  Time for transition matches:                         0.455s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       233964 (count: 233964, min: 1, max: 1, avg: 1.00) [1 x 233964]

CPA algorithm statistics
------------------------
Number of iterations:            138099
Max size of waitlist:            80
Average size of waitlist:        43
Number of computed successors:   177772
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         39505
Number of times breaked:         71

Total time for CPA algorithm:        18.824s (Max:     3.292s)
  Time for choose from waitlist:      0.200s
  Time for precision adjustment:      1.547s
  Time for transfer relation:        14.829s
  Time for stop operator:             0.540s
  Time for adding to reached set:     0.638s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             71
Total number of targets found:           71
Time for completing refinement:           3.412s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                71
Number of successful refinements:     34
Number of failed refinements:         0
Max. size of reached set before ref.: 62162
Max. size of reached set after ref.:  61355
Avg. size of reached set before ref.: 35245.62
Avg. size of reached set after ref.:  25279.47

Total time for CEGAR algorithm:      24.030s
Time for refinements:                 5.167s
Average time for refinement:          0.072s
Max time for refinement:              0.307s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    37
Number of infeasible paths:         36 (97%)
Time for counterexample checks:       844.121s

Code Coverage
-----------------------------
  Function coverage:      0.233
  Visited lines:          6808
  Total lines:            18152
  Line coverage:          0.375
  Visited conditions:     951
  Total conditions:       4740
  Condition coverage:     0.201

CPAchecker general statistics
-----------------------------
Number of program locations:     8637
Number of CFA edges:             13596
Number of relevant variables:    2870
Number of functions:             133
Number of loops:                 36
Size of reached set:             62162
  Number of reached locations:   1665 (19%)
    Avg states per location:     37
    Max states per location:     957 (at node N190)
  Number of reached functions:   31 (23%)
  Number of partitions:          57910
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N8942 (before line 17382), Function stv090x_algo called from node N9649, stack depth 3 [132576a2], stack [main, stv090x_search, stv090x_algo], Init])
  Number of target states:       1
  Size of final wait list        53

Time for analysis setup:          6.961s
  Time for loading CPAs:          0.652s
  Time for loading parser:        0.581s
  Time for CFA construction:      5.655s
    Time for parsing file(s):     1.544s
    Time for AST to CFA:          1.777s
    Time for CFA sanity check:    0.332s
    Time for post-processing:     1.764s
      Time for var class.:        0.000s
Time for Analysis:              868.725s
CPU time for analysis:          888.030s
Total time for CPAchecker:      875.692s
Total CPU time for CPAchecker:  900.830s

Time for Garbage Collector:       2.156s (in 21 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               2180MB (  2079 MiB) max;    910MB (   867 MiB) avg;   2339MB (  2231 MiB) peak
Used non-heap memory:             29MB (    28 MiB) max;     28MB (    27 MiB) avg;     30MB (    28 MiB) peak
Used in PS Old Gen pool:         155MB (   148 MiB) max;     85MB (    81 MiB) avg;    155MB (   148 MiB) peak
Allocated heap memory:          3611MB (  3444 MiB) max;   3018MB (  2878 MiB) avg
Allocated non-heap memory:        30MB (    29 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:  17575MB ( 16761 MiB) max;  15002MB ( 14307 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
