scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem13_label05_true-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-83901836_tempdir
Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               48014868 (count: 8002480, min: 0, max: 6, avg: 6.00)
Number of global variables:                        48014868 (count: 8002480, min: 0, max: 6, avg: 6.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 9631643
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               19.286s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 52.384s
  Time for transition matches:                        16.983s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                      9791576 (count: 9792838, min: 0, max: 1, avg: 1.00) [0 x 1262, 1 x 9791576]

CPA algorithm statistics
------------------------
Number of iterations:            8870888
Max size of waitlist:            18215
Average size of waitlist:        8493
Number of computed successors:   9631643
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         740152
Number of times breaked:         6

Total time for CPA algorithm:       650.050s (Max:   618.291s)
  Time for choose from waitlist:      7.520s
  Time for precision adjustment:     69.699s
  Time for transfer relation:       128.095s
  Time for stop operator:           377.684s
  Time for adding to reached set:    23.862s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              6
Total number of targets found:            6
Time for completing refinement:           5.382s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 817095
Max. size of reached set after ref.:  2
Avg. size of reached set before ref.: 148170.67
Avg. size of reached set after ref.:  2.00

Total time for CEGAR algorithm:     655.500s
Time for refinements:                 5.450s
Average time for refinement:          0.908s
Max time for refinement:              4.035s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          2959
  Total lines:            4769
  Line coverage:          0.620
  Visited conditions:     13621
  Total conditions:       15642
  Condition coverage:     0.871

CPAchecker general statistics
-----------------------------
Number of program locations:     8994
Number of CFA edges:             16818
Number of relevant variables:    11
Number of functions:             5
Number of loops:                 1
Size of reached set:             8002480
  Size of final wait list        18213

Time for analysis setup:          6.060s
  Time for loading CPAs:          0.508s
  Time for loading parser:        0.506s
  Time for CFA construction:      4.963s
    Time for parsing file(s):     1.160s
    Time for AST to CFA:          1.553s
    Time for CFA sanity check:    0.294s
    Time for post-processing:     1.761s
      Time for var class.:        0.000s
Time for Analysis:              655.500s
CPU time for analysis:          890.500s
Total time for CPAchecker:      661.567s
Total CPU time for CPAchecker:  901.710s

Time for Garbage Collector:     236.615s (in 67 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               7731MB (  7372 MiB) max;   3979MB (  3795 MiB) avg;   9075MB (  8655 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:        5396MB (  5146 MiB) max;   2707MB (  2582 MiB) avg;   5448MB (  5195 MiB) peak
Allocated heap memory:          9741MB (  9290 MiB) max;   6286MB (  5994 MiB) avg
Allocated non-heap memory:        46MB (    43 MiB) max;     40MB (    39 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
