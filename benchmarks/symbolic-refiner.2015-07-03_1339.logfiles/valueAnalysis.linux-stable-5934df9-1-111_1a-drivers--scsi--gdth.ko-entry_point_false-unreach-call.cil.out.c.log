scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-validator-v0.6/ALL.prp ../svcomp15/ldv-validator-v0.6/linux-stable-5934df9-1-111_1a-drivers--scsi--gdth.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1232362472_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7109: Function pointer *(ops->alloc_coherent) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7157: Function pointer *(ops->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6959: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6870: Function pointer *(ops->map_sg) with type int (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7001: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6915: Function pointer *(ops->unmap_sg) with type void (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6803: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5774-5776: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

Skipping recursive function call from gdth_scsi_done to gdth_pci_remove_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __gdth_interrupt to gdth_next (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from gdth_next to gdth_scsi_done (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from gdth_next to gdth_wait (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __gdth_queuecommand to gdth_next (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from gdth_flush to gdth_execute (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __gdth_execute to __gdth_queuecommand (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from gdth_remove_one to gdth_flush (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from gdth_pci_remove_one to gdth_remove_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from gdth_wait to __gdth_interrupt (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from gdth_execute to __gdth_execute (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7322: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7109: Ignoring function call through function pointer *(ops->alloc_coherent): memory = (*(ops->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Infeasible counterexample found, but could not remove it from the ARG. Therefore, we cannot prove safety. (CounterexampleCheckAlgorithm.checkCounterexample, WARNING)

line 7322: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7109: Ignoring function call through function pointer *(ops->alloc_coherent): memory = (*(ops->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7322: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7109: Ignoring function call through function pointer *(ops->alloc_coherent): memory = (*(ops->alloc_coherent))(dev, size, dma_handle, tmp___1); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7322: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (CounterexampleCheck:PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Analysis incomplete: no errors found, but not everything could be checked. (CPAchecker.analyzeResult, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               14044543 (count: 4709989, min: 0, max: 8, avg: 2.98)
Number of global variables:                        12202545 (count: 4709989, min: 0, max: 3, avg: 2.59)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                10371134
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               26.376s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                136.933s
  Time for transition matches:                        53.361s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     15466293 (count: 15466293, min: 1, max: 1, avg: 1.00) [1 x 15466293]

CPA algorithm statistics
------------------------
Number of iterations:            9286040
Max size of waitlist:            94
Average size of waitlist:        57
Number of computed successors:   10371134
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         1085001
Number of times breaked:         28

Total time for CPA algorithm:       556.092s (Max:   169.377s)
  Time for choose from waitlist:     17.888s
  Time for precision adjustment:    105.964s
  Time for transfer relation:       279.902s
  Time for stop operator:            26.107s
  Time for adding to reached set:    30.990s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             28
Total number of targets found:           28
Time for completing refinement:          21.871s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 4603165
Max. size of reached set after ref.:  4603150
Avg. size of reached set before ref.: 3672947.04
Avg. size of reached set after ref.:  3328216.83

Total time for CEGAR algorithm:     598.667s
Time for refinements:                23.703s
Average time for refinement:          0.846s
Max time for refinement:              8.190s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    4
Number of infeasible paths:         4 (100%)
Time for counterexample checks:        96.027s

Code Coverage
-----------------------------
  Function coverage:      0.888
  Visited lines:          13446
  Total lines:            13764
  Line coverage:          0.977
  Visited conditions:     2048
  Total conditions:       2184
  Condition coverage:     0.938

CPAchecker general statistics
-----------------------------
Number of program locations:     5689
Number of CFA edges:             8105
Number of relevant variables:    1720
Number of functions:             214
Number of loops:                 83
Size of reached set:             4709989

Time for analysis setup:          7.236s
  Time for loading CPAs:          0.751s
  Time for loading parser:        0.732s
  Time for CFA construction:      5.643s
    Time for parsing file(s):     1.655s
    Time for AST to CFA:          2.108s
    Time for CFA sanity check:    0.246s
    Time for post-processing:     1.299s
      Time for var class.:        0.000s
Time for Analysis:              703.650s
CPU time for analysis:          840.630s
Total time for CPAchecker:      710.892s
Total CPU time for CPAchecker:  854.000s

Time for Garbage Collector:     121.554s (in 58 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4872MB (  4646 MiB) max;   2997MB (  2858 MiB) avg;   7362MB (  7021 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     22MB (    21 MiB) avg;     26MB (    25 MiB) peak
Used in PS Old Gen pool:        3502MB (  3340 MiB) max;   1940MB (  1851 MiB) avg;   3502MB (  3340 MiB) peak
Allocated heap memory:          8113MB (  7737 MiB) max;   5794MB (  5526 MiB) avg
Allocated non-heap memory:        47MB (    45 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  14741MB ( 14058 MiB) max;  13653MB ( 13020 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
