scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/systemc/ALL.prp ../svcomp15/systemc/token_ring.12_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1726153639_tempdir
Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               45259645 (count: 1873757, min: 0, max: 25, avg: 24.15)
Number of global variables:                        45259645 (count: 1873757, min: 0, max: 25, avg: 24.15)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 9264698
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               63.793s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                211.622s
  Time for transition matches:                        83.993s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     13819767 (count: 13819767, min: 1, max: 1, avg: 1.00) [1 x 13819767]

CPA algorithm statistics
------------------------
Number of iterations:            7824135
Max size of waitlist:            2092
Average size of waitlist:        821
Number of computed successors:   9264698
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         1440657
Number of times breaked:         28

Total time for CPA algorithm:       783.747s (Max:   288.878s)
  Time for choose from waitlist:     28.304s
  Time for precision adjustment:    149.058s
  Time for transfer relation:       319.280s
  Time for stop operator:           101.613s
  Time for adding to reached set:    32.758s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             28
Total number of targets found:           28
Time for completing refinement:          28.070s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 2709121
Max. size of reached set after ref.:  1234025
Avg. size of reached set before ref.: 271503.93
Avg. size of reached set after ref.:  58993.75

Total time for CEGAR algorithm:     812.634s
Time for refinements:                28.406s
Average time for refinement:          1.014s
Max time for refinement:              8.607s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.902
  Visited lines:          883
  Total lines:            1014
  Line coverage:          0.871
  Visited conditions:     293
  Total conditions:       400
  Condition coverage:     0.733

CPAchecker general statistics
-----------------------------
Number of program locations:     893
Number of CFA edges:             1172
Number of relevant variables:    127
Number of functions:             41
Number of loops:                 2
Size of reached set:             1873757
  Size of final wait list        1231

Time for analysis setup:          2.223s
  Time for loading CPAs:          0.525s
  Time for loading parser:        0.503s
  Time for CFA construction:      1.109s
    Time for parsing file(s):     0.403s
    Time for AST to CFA:          0.292s
    Time for CFA sanity check:    0.077s
    Time for post-processing:     0.239s
      Time for var class.:        0.000s
Time for Analysis:              812.634s
CPU time for analysis:          899.510s
Total time for CPAchecker:      814.863s
Total CPU time for CPAchecker:  903.290s

Time for Garbage Collector:      80.514s (in 36 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4402MB (  4198 MiB) max;   2430MB (  2317 MiB) avg;   6519MB (  6217 MiB) peak
Used non-heap memory:             22MB (    21 MiB) max;     20MB (    19 MiB) avg;     22MB (    21 MiB) peak
Used in PS Old Gen pool:        2729MB (  2603 MiB) max;   1104MB (  1052 MiB) avg;   2920MB (  2785 MiB) peak
Allocated heap memory:          6036MB (  5757 MiB) max;   4911MB (  4684 MiB) avg
Allocated non-heap memory:        45MB (    42 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
