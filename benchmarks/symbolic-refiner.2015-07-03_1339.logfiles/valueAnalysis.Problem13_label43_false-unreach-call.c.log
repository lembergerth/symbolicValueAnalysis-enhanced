scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem13_label43_false-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1622556025_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               67021262 (count: 8370879, min: 0, max: 9, avg: 8.01)
Number of global variables:                        50225262 (count: 8370879, min: 0, max: 6, avg: 6.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 9990375
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               20.832s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 57.686s
  Time for transition matches:                        23.684s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                     10137641 (count: 10139216, min: 0, max: 1, avg: 1.00) [0 x 1575, 1 x 10137641]

CPA algorithm statistics
------------------------
Number of iterations:            9532039
Max size of waitlist:            14467
Average size of waitlist:        6573
Number of computed successors:   9990375
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         441190
Number of times breaked:         8

Total time for CPA algorithm:       649.169s (Max:   600.473s)
  Time for choose from waitlist:     10.709s
  Time for precision adjustment:     50.085s
  Time for transfer relation:       193.964s
  Time for stop operator:           285.909s
  Time for adding to reached set:    50.248s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              8
Total number of targets found:            8
Time for completing refinement:           5.346s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 730487
Max. size of reached set after ref.:  165894
Avg. size of reached set before ref.: 168027.88
Avg. size of reached set after ref.:  20739.50

Total time for CEGAR algorithm:     654.724s
Time for refinements:                 5.475s
Average time for refinement:          0.684s
Max time for refinement:              1.774s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          2674
  Total lines:            4769
  Line coverage:          0.561
  Visited conditions:     13176
  Total conditions:       15642
  Condition coverage:     0.842

CPAchecker general statistics
-----------------------------
Number of program locations:     8994
Number of CFA edges:             16818
Number of relevant variables:    11
Number of functions:             5
Number of loops:                 1
Size of reached set:             8370879
  Size of final wait list        14462

Time for analysis setup:          5.984s
  Time for loading CPAs:          0.510s
  Time for loading parser:        0.534s
  Time for CFA construction:      4.859s
    Time for parsing file(s):     1.123s
    Time for AST to CFA:          1.425s
    Time for CFA sanity check:    0.486s
    Time for post-processing:     1.610s
      Time for var class.:        0.000s
Time for Analysis:              654.724s
CPU time for analysis:          891.470s
Total time for CPAchecker:      660.714s
Total CPU time for CPAchecker:  902.440s

Time for Garbage Collector:     235.594s (in 61 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               7317MB (  6978 MiB) max;   3847MB (  3668 MiB) avg;   9558MB (  9115 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:        5736MB (  5471 MiB) max;   2630MB (  2509 MiB) avg;   5736MB (  5471 MiB) peak
Allocated heap memory:          9380MB (  8945 MiB) max;   6270MB (  5979 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     39MB (    38 MiB) avg
Total process virtual memory:  13581MB ( 12952 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
