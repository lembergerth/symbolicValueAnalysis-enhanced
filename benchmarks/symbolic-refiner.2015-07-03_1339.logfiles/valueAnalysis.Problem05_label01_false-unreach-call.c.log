scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem05_label01_false-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-972979667_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               29387410 (count: 2755605, min: 0, max: 11, avg: 10.66)
Number of global variables:                        22044824 (count: 2755605, min: 0, max: 8, avg: 8.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                12321846
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               50.616s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                177.290s
  Time for transition matches:                        70.735s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                     12482688 (count: 12483271, min: 0, max: 1, avg: 1.00) [0 x 583, 1 x 12482688]

CPA algorithm statistics
------------------------
Number of iterations:            11295823
Max size of waitlist:            607
Average size of waitlist:        288
Number of computed successors:   12321846
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         1023363
Number of times breaked:         13

Total time for CPA algorithm:       732.686s (Max:   280.876s)
  Time for choose from waitlist:     31.238s
  Time for precision adjustment:    123.199s
  Time for transfer relation:       310.435s
  Time for stop operator:            44.105s
  Time for adding to reached set:    60.893s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             13
Total number of targets found:           13
Time for completing refinement:          60.085s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 4545807
Max. size of reached set after ref.:  585725
Avg. size of reached set before ref.: 702214.31
Avg. size of reached set after ref.:  45069.77

Total time for CEGAR algorithm:     794.847s
Time for refinements:                62.035s
Average time for refinement:          4.771s
Max time for refinement:             16.779s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          4915
  Total lines:            10607
  Line coverage:          0.463
  Visited conditions:     28489
  Total conditions:       35260
  Condition coverage:     0.808

CPAchecker general statistics
-----------------------------
Number of program locations:     19906
Number of CFA edges:             37543
Number of relevant variables:    17
Number of functions:             9
Number of loops:                 1
Size of reached set:             2755605
  Size of final wait list        375

Time for analysis setup:          7.743s
  Time for loading CPAs:          0.940s
  Time for loading parser:        0.550s
  Time for CFA construction:      6.156s
    Time for parsing file(s):     1.312s
    Time for AST to CFA:          1.894s
    Time for CFA sanity check:    0.347s
    Time for post-processing:     2.383s
      Time for var class.:        0.000s
Time for Analysis:              794.847s
CPU time for analysis:          887.520s
Total time for CPAchecker:      802.597s
Total CPU time for CPAchecker:  901.460s

Time for Garbage Collector:      85.276s (in 44 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6933MB (  6612 MiB) max;   3036MB (  2895 MiB) avg;   8074MB (  7700 MiB) peak
Used non-heap memory:             24MB (    23 MiB) max;     22MB (    20 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:        4180MB (  3986 MiB) max;   1545MB (  1473 MiB) avg;   4449MB (  4243 MiB) peak
Allocated heap memory:          8059MB (  7686 MiB) max;   5689MB (  5426 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
