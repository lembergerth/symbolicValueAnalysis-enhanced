scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/systemc/ALL.prp ../svcomp15/systemc/token_ring.11_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-247588644_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               30070825 (count: 1202835, min: 0, max: 25, avg: 25.00)
Number of global variables:                        30070825 (count: 1202835, min: 0, max: 25, avg: 25.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                15417641
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               89.574s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                105.417s
  Time for transition matches:                        41.116s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     23023211 (count: 23023211, min: 1, max: 1, avg: 1.00) [1 x 23023211]

CPA algorithm statistics
------------------------
Number of iterations:            13072732
Max size of waitlist:            5739
Average size of waitlist:        1540
Number of computed successors:   15417641
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         2341316
Number of times breaked:         29

Total time for CPA algorithm:       683.651s (Max:   203.687s)
  Time for choose from waitlist:     14.419s
  Time for precision adjustment:    156.902s
  Time for transfer relation:       240.197s
  Time for stop operator:           158.439s
  Time for adding to reached set:    31.476s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             29
Total number of targets found:           29
Time for completing refinement:          51.034s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 3885773
Max. size of reached set after ref.:  1047329
Avg. size of reached set before ref.: 457877.00
Avg. size of reached set after ref.:  48446.28

Total time for CEGAR algorithm:     735.398s
Time for refinements:                51.379s
Average time for refinement:          1.771s
Max time for refinement:             17.716s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.821
  Visited lines:          748
  Total lines:            944
  Line coverage:          0.792
  Visited conditions:     228
  Total conditions:       370
  Condition coverage:     0.616

CPAchecker general statistics
-----------------------------
Number of program locations:     832
Number of CFA edges:             1092
Number of relevant variables:    118
Number of functions:             39
Number of loops:                 2
Size of reached set:             1202835
  Size of final wait list        3702

Time for analysis setup:          2.080s
  Time for loading CPAs:          0.485s
  Time for loading parser:        0.544s
  Time for CFA construction:      0.966s
    Time for parsing file(s):     0.340s
    Time for AST to CFA:          0.276s
    Time for CFA sanity check:    0.071s
    Time for post-processing:     0.224s
      Time for var class.:        0.000s
Time for Analysis:              735.398s
CPU time for analysis:          900.750s
Total time for CPAchecker:      737.484s
Total CPU time for CPAchecker:  904.200s

Time for Garbage Collector:     161.252s (in 78 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5820MB (  5551 MiB) max;   2986MB (  2848 MiB) avg;   8302MB (  7917 MiB) peak
Used non-heap memory:             22MB (    21 MiB) max;     20MB (    19 MiB) avg;     22MB (    21 MiB) peak
Used in PS Old Gen pool:        3934MB (  3752 MiB) max;   1799MB (  1716 MiB) avg;   4186MB (  3992 MiB) peak
Allocated heap memory:          6883MB (  6564 MiB) max;   5602MB (  5342 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  13580MB ( 12951 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
