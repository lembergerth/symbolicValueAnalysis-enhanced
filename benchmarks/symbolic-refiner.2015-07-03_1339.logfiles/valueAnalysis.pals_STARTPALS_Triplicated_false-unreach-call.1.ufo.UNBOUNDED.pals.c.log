scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/seq-mthreaded/ALL.prp ../svcomp15/seq-mthreaded/pals_STARTPALS_Triplicated_false-unreach-call.1.ufo.UNBOUNDED.pals.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_646412394_tempdir
Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Infeasible counterexample found, but could not remove it from the ARG. Therefore, we cannot prove safety. (CounterexampleCheckAlgorithm.checkCounterexample, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               21073337 (count: 1271751, min: 0, max: 22, avg: 16.57)
Number of global variables:                        17009507 (count: 1271751, min: 0, max: 14, avg: 13.37)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 1744845
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                7.475s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 35.996s
  Time for transition matches:                         4.462s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      2428792 (count: 2428792, min: 1, max: 1, avg: 1.00) [1 x 2428792]

CPA algorithm statistics
------------------------
Number of iterations:            1676591
Max size of waitlist:            4912
Average size of waitlist:        2357
Number of computed successors:   1744845
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         58683
Number of times breaked:         2244

Total time for CPA algorithm:       238.274s (Max:   163.635s)
  Time for choose from waitlist:      1.740s
  Time for precision adjustment:     12.389s
  Time for transfer relation:        49.737s
  Time for stop operator:           161.563s
  Time for adding to reached set:     3.939s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:           2244
Total number of targets found:         2244
Time for completing refinement:          30.103s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2244
Number of successful refinements:     57
Number of failed refinements:         0
Max. size of reached set before ref.: 1271751
Max. size of reached set after ref.:  67835
Avg. size of reached set before ref.: 297917.34
Avg. size of reached set after ref.:  11244.18

Total time for CEGAR algorithm:     273.810s
Time for refinements:                35.483s
Average time for refinement:          0.015s
Max time for refinement:              0.551s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    2187
Number of infeasible paths:         2186 (100%)
Time for counterexample checks:       375.119s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          334
  Total lines:            351
  Line coverage:          0.952
  Visited conditions:     141
  Total conditions:       172
  Condition coverage:     0.820

CPAchecker general statistics
-----------------------------
Number of program locations:     325
Number of CFA edges:             486
Number of relevant variables:    91
Number of functions:             14
Number of loops:                 3
Size of reached set:             1271751
  Size of final wait list        4850

Time for analysis setup:          1.795s
  Time for loading CPAs:          0.430s
  Time for loading parser:        0.576s
  Time for CFA construction:      0.696s
    Time for parsing file(s):     0.257s
    Time for AST to CFA:          0.196s
    Time for CFA sanity check:    0.039s
    Time for post-processing:     0.149s
      Time for var class.:        0.000s
Time for Analysis:              824.488s
CPU time for analysis:          897.530s
Total time for CPAchecker:      826.289s
Total CPU time for CPAchecker:  900.410s

Time for Garbage Collector:      54.888s (in 98 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5065MB (  4830 MiB) max;   2789MB (  2660 MiB) avg;   5445MB (  5193 MiB) peak
Used non-heap memory:             28MB (    27 MiB) max;     27MB (    26 MiB) avg;     29MB (    27 MiB) peak
Used in PS Old Gen pool:        1832MB (  1747 MiB) max;   1153MB (  1100 MiB) avg;   1837MB (  1752 MiB) peak
Allocated heap memory:          5679MB (  5416 MiB) max;   5165MB (  4925 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  13665MB ( 13032 MiB) max;  13664MB ( 13031 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
