scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/seq-pthread/ALL.prp ../svcomp15/seq-pthread/cs_queue_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1811610095_tempdir
Infeasible counterexample found, but could not remove it from the ARG. Therefore, we cannot prove safety. (CounterexampleCheckAlgorithm.checkCounterexample, WARNING)

line 1296: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1296: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1296: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1296: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1296: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1296: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1296: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1296: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1296: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1296: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1296: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1296: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1296: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1296: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1296: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1296: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Analysis incomplete: no errors found, but not everything could be checked. (CPAchecker.analyzeResult, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 519222 (count: 34238, min: 0, max: 17, avg: 15.17)
Number of global variables:                          506611 (count: 34238, min: 0, max: 15, avg: 14.80)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  312652
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                1.224s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.997s
  Time for transition matches:                         0.885s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       420835 (count: 420835, min: 1, max: 1, avg: 1.00) [1 x 420835]

CPA algorithm statistics
------------------------
Number of iterations:            268983
Max size of waitlist:            1803
Average size of waitlist:        101
Number of computed successors:   312652
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         31101
Number of times breaked:         68

Total time for CPA algorithm:        12.619s (Max:     1.259s)
  Time for choose from waitlist:      0.302s
  Time for precision adjustment:      2.353s
  Time for transfer relation:         6.590s
  Time for stop operator:             0.978s
  Time for adding to reached set:     0.707s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             68
Total number of targets found:           68
Time for completing refinement:           4.246s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                68
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 34202
Max. size of reached set after ref.:  307
Avg. size of reached set before ref.: 30674.69
Avg. size of reached set after ref.:  44.07

Total time for CEGAR algorithm:      17.726s
Time for refinements:                 5.106s
Average time for refinement:          0.075s
Max time for refinement:              0.685s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    54
Number of infeasible paths:         54 (100%)
Time for counterexample checks:       732.670s

Code Coverage
-----------------------------
  Function coverage:      0.652
  Visited lines:          709
  Total lines:            751
  Line coverage:          0.944
  Visited conditions:     290
  Total conditions:       326
  Condition coverage:     0.890

CPAchecker general statistics
-----------------------------
Number of program locations:     536
Number of CFA edges:             806
Number of relevant variables:    73
Number of functions:             23
Number of loops:                 4
Size of reached set:             34238
  Number of reached locations:   461 (86%)
    Avg states per location:     74
    Max states per location:     2726 (at node N8)
  Number of reached functions:   15 (65%)
  Number of partitions:          24388
    Avg size of partitions:      1
    Max size of partitions:      34 (with key [N681 (before line 1299), Function main called from node N598, stack depth 1 [3297d38], stack [main], Init])
  Number of target states:       0

Time for analysis setup:          2.290s
  Time for loading CPAs:          0.470s
  Time for loading parser:        0.543s
  Time for CFA construction:      1.208s
    Time for parsing file(s):     0.433s
    Time for AST to CFA:          0.323s
    Time for CFA sanity check:    0.051s
    Time for post-processing:     0.207s
      Time for var class.:        0.000s
Time for Analysis:              751.022s
CPU time for analysis:          767.910s
Total time for CPAchecker:      753.318s
Total CPU time for CPAchecker:  771.720s

Time for Garbage Collector:       1.114s (in 8 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3369MB (  3213 MiB) max;   1274MB (  1215 MiB) avg;   3431MB (  3272 MiB) peak
Used non-heap memory:             28MB (    26 MiB) max;     27MB (    26 MiB) avg;     28MB (    27 MiB) peak
Used in PS Old Gen pool:          61MB (    58 MiB) max;      5MB (     4 MiB) avg;     61MB (    58 MiB) peak
Allocated heap memory:          4778MB (  4557 MiB) max;   4096MB (  3906 MiB) avg
Allocated non-heap memory:        28MB (    27 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:  15023MB ( 14327 MiB) max;  14801MB ( 14116 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
