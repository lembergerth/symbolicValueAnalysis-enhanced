scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--wireless--libertas_tf--libertas_tf.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-972432512_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11313: Function pointer *(priv->hw_host_to_card) with type int (*)(struct lbtf_private *, u8 , u8 *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8463: Function pointer *(priv->hw_host_to_card) with type int (*)(struct lbtf_private *, u8 , u8 *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

Skipping recursive function call from lbtf_op_start to lbtf_op_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Infeasible counterexample found, but could not remove it from the ARG. Therefore, we cannot prove safety. (CounterexampleCheckAlgorithm.checkCounterexample, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Analysis incomplete: no errors found, but not everything could be checked. (CPAchecker.analyzeResult, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                1768735 (count: 345350, min: 0, max: 7, avg: 5.12)
Number of global variables:                         1725898 (count: 345350, min: 0, max: 5, avg: 5.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  998591
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                2.231s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.712s
  Time for transition matches:                         2.387s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      1418768 (count: 1418768, min: 1, max: 1, avg: 1.00) [1 x 1418768]

CPA algorithm statistics
------------------------
Number of iterations:            888791
Max size of waitlist:            43
Average size of waitlist:        23
Number of computed successors:   998591
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         109601
Number of times breaked:         47

Total time for CPA algorithm:        35.082s (Max:     5.651s)
  Time for choose from waitlist:      0.907s
  Time for precision adjustment:      6.003s
  Time for transfer relation:        19.053s
  Time for stop operator:             2.021s
  Time for adding to reached set:     2.153s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             47
Total number of targets found:           47
Time for completing refinement:           5.482s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                47
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 183508
Max. size of reached set after ref.:  13243
Avg. size of reached set before ref.: 77695.34
Avg. size of reached set after ref.:  5040.94

Total time for CEGAR algorithm:      42.524s
Time for refinements:                 7.395s
Average time for refinement:          0.157s
Max time for refinement:              0.692s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    31
Number of infeasible paths:         31 (100%)
Time for counterexample checks:        37.290s

Code Coverage
-----------------------------
  Function coverage:      0.533
  Visited lines:          8036
  Total lines:            9017
  Line coverage:          0.891
  Visited conditions:     583
  Total conditions:       884
  Condition coverage:     0.660

CPAchecker general statistics
-----------------------------
Number of program locations:     2595
Number of CFA edges:             3569
Number of relevant variables:    749
Number of functions:             135
Number of loops:                 17
Size of reached set:             345350
  Number of reached locations:   1621 (62%)
    Avg states per location:     213
    Max states per location:     14468 (at node N11)
  Number of reached functions:   72 (53%)
  Number of partitions:          315248
    Avg size of partitions:      1
    Max size of partitions:      120 (with key [N3472 (before lines 12891-12903), Function ldv_set_remove called from node N3553, stack depth 5 [5d848ed6], stack [main, lbtf_op_bss_info_changed, ldv_kfree_skb_15, ldv_skb_free, ldv_set_remove], Init])
  Number of target states:       0

Time for analysis setup:          4.601s
  Time for loading CPAs:          0.572s
  Time for loading parser:        0.499s
  Time for CFA construction:      3.461s
    Time for parsing file(s):     1.309s
    Time for AST to CFA:          1.178s
    Time for CFA sanity check:    0.107s
    Time for post-processing:     0.590s
      Time for var class.:        0.000s
Time for Analysis:               81.083s
CPU time for analysis:          100.830s
Total time for CPAchecker:       85.690s
Total CPU time for CPAchecker:  109.050s

Time for Garbage Collector:       1.540s (in 8 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3432MB (  3273 MiB) max;   1192MB (  1137 MiB) avg;   3517MB (  3354 MiB) peak
Used non-heap memory:             29MB (    28 MiB) max;     26MB (    25 MiB) avg;     29MB (    28 MiB) peak
Used in PS Old Gen pool:         134MB (   128 MiB) max;     39MB (    37 MiB) avg;    134MB (   128 MiB) peak
Allocated heap memory:          4764MB (  4544 MiB) max;   3748MB (  3575 MiB) avg
Allocated non-heap memory:        30MB (    28 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:  13665MB ( 13032 MiB) max;  13640MB ( 13008 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
