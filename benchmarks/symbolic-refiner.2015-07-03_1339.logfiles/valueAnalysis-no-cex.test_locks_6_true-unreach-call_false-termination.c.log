scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop analysis.checkCounterexamples=false -timelimit 900s -stats -spec ../svcomp15/locks/ALL.prp ../svcomp15/locks/test_locks_6_true-unreach-call_false-termination.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_835691671_tempdir
The following configuration options were specified but are not used:
 counterexample.checker
 counterexample.checker.config 
 (CPAchecker.printConfigurationWarnings, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                  10473 (count: 1234, min: 0, max: 12, avg: 8.49)
Number of global variables:                               0 (count: 1234, min: 0, max: 0, avg: 0.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                    5048
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.155s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.143s
Automaton transfers with branching:                0
Automaton transfer successors:                         6833 (count: 6833, min: 1, max: 1, avg: 1.00) [1 x 6833]

CPA algorithm statistics
------------------------
Number of iterations:            4322
Max size of waitlist:            97
Average size of waitlist:        51
Number of computed successors:   5048
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         588
Number of times breaked:         12

Total time for CPA algorithm:         1.408s (Max:     0.292s)
  Time for choose from waitlist:      0.048s
  Time for precision adjustment:      0.340s
  Time for transfer relation:         0.617s
  Time for stop operator:             0.208s
  Time for adding to reached set:     0.087s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             12
Total number of targets found:           12
Time for completing refinement:           0.231s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 1329
Max. size of reached set after ref.:  611
Avg. size of reached set before ref.: 410.58
Avg. size of reached set after ref.:  141.67

Total time for CEGAR algorithm:       1.692s
Time for refinements:                 0.278s
Average time for refinement:          0.023s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          91
  Total lines:            93
  Line coverage:          0.978
  Visited conditions:     32
  Total conditions:       38
  Condition coverage:     0.842

CPAchecker general statistics
-----------------------------
Number of program locations:     73
Number of CFA edges:             91
Number of relevant variables:    13
Number of functions:             1
Number of loops:                 1
Size of reached set:             1234
  Number of reached locations:   64 (88%)
    Avg states per location:     19
    Max states per location:     64 (at node N56)
  Number of reached functions:   1 (100%)
  Number of partitions:          64
    Avg size of partitions:      19
    Max size of partitions:      64 (with key [N56 (before line 72), Function main called from node N1, stack depth 1 [5e90264], stack [main], Init])
  Number of target states:       0

Time for analysis setup:          1.453s
  Time for loading CPAs:          0.382s
  Time for loading parser:        0.497s
  Time for CFA construction:      0.505s
    Time for parsing file(s):     0.288s
    Time for AST to CFA:          0.106s
    Time for CFA sanity check:    0.010s
    Time for post-processing:     0.073s
      Time for var class.:        0.000s
Time for Analysis:                1.693s
CPU time for analysis:            2.810s
Total time for CPAchecker:        3.152s
Total CPU time for CPAchecker:    5.140s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                180MB (   172 MiB) max;    123MB (   118 MiB) avg;    180MB (   172 MiB) peak
Used non-heap memory:             20MB (    19 MiB) max;     16MB (    15 MiB) avg;     20MB (    19 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
