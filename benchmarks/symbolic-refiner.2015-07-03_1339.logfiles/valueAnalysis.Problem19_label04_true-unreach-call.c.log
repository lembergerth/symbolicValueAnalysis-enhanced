scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem19_label04_true-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1410210734_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               39310330 (count: 7862068, min: 0, max: 5, avg: 5.00)
Number of global variables:                        39310330 (count: 7862068, min: 0, max: 5, avg: 5.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 8457529
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               17.336s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 41.708s
  Time for transition matches:                        15.350s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.026s
Automaton transfers with branching:                0
Automaton transfer successors:                      8565827 (count: 8569888, min: 0, max: 1, avg: 1.00) [0 x 4061, 1 x 8565827]

CPA algorithm statistics
------------------------
Number of iterations:            7881865
Max size of waitlist:            13564
Average size of waitlist:        6820
Number of computed successors:   8457529
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         562039
Number of times breaked:         5

Total time for CPA algorithm:       668.750s (Max:   665.303s)
  Time for choose from waitlist:      7.702s
  Time for precision adjustment:     73.514s
  Time for transfer relation:       119.436s
  Time for stop operator:           369.531s
  Time for adding to reached set:    52.234s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              5
Total number of targets found:            5
Time for completing refinement:           4.521s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 16587
Max. size of reached set after ref.:  2
Avg. size of reached set before ref.: 6686.60
Avg. size of reached set after ref.:  2.00

Total time for CEGAR algorithm:     673.483s
Time for refinements:                 4.732s
Average time for refinement:          0.946s
Max time for refinement:              2.207s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          4691
  Total lines:            8025
  Line coverage:          0.585
  Visited conditions:     19283
  Total conditions:       23766
  Condition coverage:     0.811

CPAchecker general statistics
-----------------------------
Number of program locations:     13714
Number of CFA edges:             25602
Number of relevant variables:    12
Number of functions:             7
Number of loops:                 1
Size of reached set:             7862068
  Size of final wait list        13563

Time for analysis setup:          6.695s
  Time for loading CPAs:          0.557s
  Time for loading parser:        0.646s
  Time for CFA construction:      5.402s
    Time for parsing file(s):     1.204s
    Time for AST to CFA:          1.710s
    Time for CFA sanity check:    0.260s
    Time for post-processing:     1.959s
      Time for var class.:        0.000s
Time for Analysis:              673.483s
CPU time for analysis:          889.380s
Total time for CPAchecker:      680.185s
Total CPU time for CPAchecker:  901.420s

Time for Garbage Collector:     214.175s (in 73 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6920MB (  6599 MiB) max;   4170MB (  3977 MiB) avg;   9480MB (  9041 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     24MB (    22 MiB) peak
Used in PS Old Gen pool:        5527MB (  5271 MiB) max;   2841MB (  2710 MiB) avg;   5599MB (  5339 MiB) peak
Allocated heap memory:          8779MB (  8373 MiB) max;   6443MB (  6145 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:  13581MB ( 12952 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
