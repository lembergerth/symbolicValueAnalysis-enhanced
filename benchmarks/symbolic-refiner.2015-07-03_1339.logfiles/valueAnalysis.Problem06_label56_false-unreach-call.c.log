scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem06_label56_false-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-809320845_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               38144971 (count: 1392869, min: 0, max: 28, avg: 27.39)
Number of global variables:                        34821675 (count: 1392869, min: 0, max: 25, avg: 25.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                10619061
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               85.358s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                166.575s
  Time for transition matches:                        66.589s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                     10848471 (count: 10849448, min: 0, max: 1, avg: 1.00) [0 x 977, 1 x 10848471]

CPA algorithm statistics
------------------------
Number of iterations:            9870870
Max size of waitlist:            797
Average size of waitlist:        272
Number of computed successors:   10619061
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         743286
Number of times breaked:         28

Total time for CPA algorithm:       728.014s (Max:   223.503s)
  Time for choose from waitlist:     30.716s
  Time for precision adjustment:    155.677s
  Time for transfer relation:       282.822s
  Time for stop operator:            44.539s
  Time for adding to reached set:    55.416s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             28
Total number of targets found:           28
Time for completing refinement:          73.638s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 2823551
Max. size of reached set after ref.:  614922
Avg. size of reached set before ref.: 346645.00
Avg. size of reached set after ref.:  43684.04

Total time for CEGAR algorithm:     802.330s
Time for refinements:                74.046s
Average time for refinement:          2.644s
Max time for refinement:             17.273s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          4031
  Total lines:            9151
  Line coverage:          0.440
  Visited conditions:     24230
  Total conditions:       31852
  Condition coverage:     0.761

CPAchecker general statistics
-----------------------------
Number of program locations:     17295
Number of CFA edges:             33225
Number of relevant variables:    36
Number of functions:             6
Number of loops:                 1
Size of reached set:             1392869
  Size of final wait list        311

Time for analysis setup:          7.209s
  Time for loading CPAs:          0.731s
  Time for loading parser:        0.747s
  Time for CFA construction:      5.606s
    Time for parsing file(s):     1.220s
    Time for AST to CFA:          1.743s
    Time for CFA sanity check:    0.370s
    Time for post-processing:     2.094s
      Time for var class.:        0.000s
Time for Analysis:              802.330s
CPU time for analysis:          887.400s
Total time for CPAchecker:      809.546s
Total CPU time for CPAchecker:  900.410s

Time for Garbage Collector:      77.613s (in 46 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4447MB (  4241 MiB) max;   2511MB (  2394 MiB) avg;   7265MB (  6928 MiB) peak
Used non-heap memory:             24MB (    23 MiB) max;     22MB (    21 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:        3047MB (  2906 MiB) max;   1093MB (  1042 MiB) avg;   3047MB (  2906 MiB) peak
Allocated heap memory:          6550MB (  6247 MiB) max;   5248MB (  5005 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  13581MB ( 12952 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
