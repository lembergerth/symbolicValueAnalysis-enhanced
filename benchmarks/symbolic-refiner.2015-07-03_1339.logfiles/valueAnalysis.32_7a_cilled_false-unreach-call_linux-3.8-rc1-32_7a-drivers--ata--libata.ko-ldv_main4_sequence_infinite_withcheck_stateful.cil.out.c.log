scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_false-unreach-call_linux-3.8-rc1-32_7a-drivers--ata--libata.ko-ldv_main4_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1138012257_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 13955: Function pointer *(ap->ops->mode_filter) with type unsigned long int (*)(struct ata_device *, unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33590: Function pointer *(ap->ops->port_suspend) with type int (*)(struct ata_port *, pm_message_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 32720: Function pointer *(link->ap->ops->set_lpm) with type int (*)(struct ata_link *, enum ata_lpm_policy , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 32375: Function pointer *(ap->ops->set_lpm) with type int (*)(struct ata_link *, enum ata_lpm_policy , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 32379: Function pointer *(ap->ops->set_lpm) with type int (*)(struct ata_link *, enum ata_lpm_policy , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20317: Function pointer *(ap->ops->sw_activity_show) with type ssize_t  (*)(struct ata_device *, char *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20368: Function pointer *(ap->ops->sw_activity_store) with type ssize_t  (*)(struct ata_device *, enum sw_activity ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20245: Function pointer *(ap->ops->em_show) with type ssize_t  (*)(struct ata_port *, char *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6371: Function pointer *(ops->map_sg) with type int (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6416: Function pointer *(ops->unmap_sg) with type void (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15192: Function pointer *(link->ap->ops->scr_read) with type int (*)(struct ata_link *, unsigned int, u32 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15227: Function pointer *(link->ap->ops->scr_write) with type int (*)(struct ata_link *, unsigned int, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15262: Function pointer *(link->ap->ops->scr_write) with type int (*)(struct ata_link *, unsigned int, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15266: Function pointer *(link->ap->ops->scr_read) with type int (*)(struct ata_link *, unsigned int, u32 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

Skipping recursive function call from atapi_sense_complete to atapi_sense_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_thaw to atapi_sense_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_thaw to ata_sff_thaw (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from atapi_qc_complete to atapi_sense_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from atapi_qc_complete to ata_sff_thaw (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from atapi_qc_complete to atapi_qc_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_busy_wait to ata_sff_qc_fill_rtf (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

line 36073: Ignoring function call through function pointer *(ap->ops->sff_check_status): status = (*(ap->ops->sff_check_status))(ap); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Infeasible counterexample found, but could not remove it from the ARG. Therefore, we cannot prove safety. (CounterexampleCheckAlgorithm.checkCounterexample, WARNING)

Skipping recursive function call from fill_result_tf to atapi_sense_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from fill_result_tf to ata_sff_thaw (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from fill_result_tf to atapi_qc_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from fill_result_tf to ata_sff_pio_task (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __ata_port_freeze to atapi_sense_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __ata_port_freeze to ata_sff_thaw (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __ata_port_freeze to atapi_qc_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __ata_port_freeze to ata_sff_pio_task (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __ata_port_freeze to ata_eh_fastdrain_timerfn (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __ata_port_freeze to ata_sff_qc_fill_rtf (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_altstatus to ata_sff_qc_fill_rtf (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_irq_status to ata_sff_qc_fill_rtf (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __ata_sff_port_intr to atapi_sense_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __ata_sff_port_intr to ata_sff_thaw (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __ata_sff_port_intr to atapi_qc_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __ata_sff_port_intr to ata_sff_pio_task (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __ata_sff_port_intr to ata_eh_fastdrain_timerfn (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __ata_sff_port_intr to ata_sff_qc_fill_rtf (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __ata_sff_port_intr to ata_sff_lost_interrupt (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_scsi_cmd_error_handler to atapi_sense_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_scsi_cmd_error_handler to ata_sff_thaw (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_scsi_cmd_error_handler to atapi_qc_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_scsi_cmd_error_handler to ata_sff_pio_task (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_scsi_cmd_error_handler to ata_eh_fastdrain_timerfn (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_scsi_cmd_error_handler to ata_sff_qc_fill_rtf (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_scsi_cmd_error_handler to ata_sff_lost_interrupt (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_scsi_cmd_error_handler to ata_scsi_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_drain_fifo to ata_sff_qc_fill_rtf (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_sync to atapi_sense_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_sync to ata_sff_thaw (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_sync to atapi_qc_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_sync to ata_sff_pio_task (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_sync to ata_eh_fastdrain_timerfn (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_sync to ata_sff_qc_fill_rtf (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_sync to ata_sff_lost_interrupt (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_sync to ata_scsi_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_sync to ata_sff_freeze (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_post_internal_cmd to atapi_sense_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_post_internal_cmd to ata_sff_thaw (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_post_internal_cmd to atapi_qc_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_post_internal_cmd to ata_sff_pio_task (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_post_internal_cmd to ata_eh_fastdrain_timerfn (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_post_internal_cmd to ata_sff_qc_fill_rtf (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_post_internal_cmd to ata_sff_lost_interrupt (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_post_internal_cmd to ata_scsi_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_post_internal_cmd to ata_sff_freeze (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_post_internal_cmd to ata_bmdma_post_internal_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_error_handler to ata_sff_qc_fill_rtf (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_error_handler to atapi_sense_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_error_handler to ata_sff_thaw (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_error_handler to atapi_qc_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_error_handler to ata_sff_pio_task (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_error_handler to ata_eh_fastdrain_timerfn (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_error_handler to ata_sff_lost_interrupt (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_error_handler to ata_scsi_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_error_handler to ata_sff_freeze (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_error_handler to ata_bmdma_post_internal_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_bmdma_error_handler to ata_bmdma_error_handler (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_error_handler to atapi_sense_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_error_handler to ata_sff_thaw (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_error_handler to atapi_qc_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_error_handler to ata_sff_pio_task (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_error_handler to ata_eh_fastdrain_timerfn (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_error_handler to ata_sff_qc_fill_rtf (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_error_handler to ata_sff_lost_interrupt (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_error_handler to ata_scsi_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_error_handler to ata_sff_freeze (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_error_handler to ata_bmdma_post_internal_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_error_handler to ata_bmdma_error_handler (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_error_handler to ata_sff_error_handler (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_eh_link_autopsy to sata_scr_read (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_read_log_page to ata_exec_internal (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sata_down_spd_limit to sata_scr_read (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from atapi_eh_request_sense to ata_exec_internal (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_freeze to ata_sff_set_devctl (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_freeze to atapi_sense_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_freeze to ata_sff_thaw (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_freeze to atapi_qc_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_freeze to ata_sff_pio_task (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_freeze to ata_eh_fastdrain_timerfn (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_freeze to ata_sff_qc_fill_rtf (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_freeze to ata_sff_lost_interrupt (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_freeze to ata_scsi_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ata_sff_freeze to ata_sff_freeze (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 36073: Ignoring function call through function pointer *(ap->ops->sff_check_status): status = (*(ap->ops->sff_check_status))(ap); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 36073: Ignoring function call through function pointer *(ap->ops->sff_check_status): status = (*(ap->ops->sff_check_status))(ap); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                1633199 (count: 100997, min: 0, max: 19, avg: 16.17)
Number of global variables:                          706944 (count: 100997, min: 0, max: 7, avg: 7.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 6602822
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               40.711s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 32.014s
  Time for transition matches:                        13.471s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      8425879 (count: 8425879, min: 1, max: 1, avg: 1.00) [1 x 8425879]

CPA algorithm statistics
------------------------
Number of iterations:            5939130
Max size of waitlist:            489
Average size of waitlist:        416
Number of computed successors:   6602822
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         657767
Number of times breaked:         61

Total time for CPA algorithm:       800.227s (Max:    33.646s)
  Time for choose from waitlist:      5.889s
  Time for precision adjustment:     59.909s
  Time for transfer relation:       300.616s
  Time for stop operator:           388.914s
  Time for adding to reached set:    15.353s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             61
Total number of targets found:           61
Time for completing refinement:          24.010s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                61
Number of successful refinements:     58
Number of failed refinements:         0
Max. size of reached set before ref.: 241035
Max. size of reached set after ref.:  26350
Avg. size of reached set before ref.: 106432.49
Avg. size of reached set after ref.:  11102.29

Total time for CEGAR algorithm:     826.732s
Time for refinements:                26.497s
Average time for refinement:          0.434s
Max time for refinement:              1.143s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    3
Number of infeasible paths:         3 (100%)
Time for counterexample checks:        25.785s

Code Coverage
-----------------------------
  Function coverage:      0.107
  Visited lines:          7119
  Total lines:            23648
  Line coverage:          0.301
  Visited conditions:     918
  Total conditions:       10398
  Condition coverage:     0.088

CPAchecker general statistics
-----------------------------
Number of program locations:     21979
Number of CFA edges:             35599
Number of relevant variables:    4924
Number of functions:             810
Number of loops:                 211
Size of reached set:             100997
  Number of reached locations:   1642 (7%)
    Avg states per location:     61
    Max states per location:     6251 (at node N23219)
  Number of reached functions:   87 (11%)
  Number of partitions:          72603
    Avg size of partitions:      1
    Max size of partitions:      1311 (with key [N13014 (before line 27995), Function ata_eh_nr_in_flight called from node N13032, stack depth 25 [7a481a90], stack [main, ata_sff_interrupt, __ata_sff_interrupt, ata_sff_qc_fill_rtf, ata_sff_postreset, ata_std_postreset, sata_scr_read, sata_pmp_scr_read, sata_pmp_read, ata_exec_internal, ata_exec_internal_sg, ata_qc_issue, atapi_sense_complete, ata_sff_thaw, atapi_qc_complete, ata_sff_pio_task, ata_sff_hsm_move, ata_hsm_qc_complete, ata_sff_irq_on, ata_sff_set_devctl, ata_sff_dev_select, ata_sff_pause, ata_sff_sync, ata_eh_fastdrain_timerfn, ata_eh_nr_in_flight], Init])
  Number of target states:       0
  Size of final wait list        403

Time for analysis setup:         11.948s
  Time for loading CPAs:          0.798s
  Time for loading parser:        0.512s
  Time for CFA construction:     10.558s
    Time for parsing file(s):     2.677s
    Time for AST to CFA:          3.753s
    Time for CFA sanity check:    0.335s
    Time for post-processing:     3.510s
      Time for var class.:        0.000s
Time for Analysis:              852.527s
CPU time for analysis:          877.470s
Total time for CPAchecker:      864.481s
Total CPU time for CPAchecker:  900.000s

Time for Garbage Collector:      12.251s (in 45 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3952MB (  3769 MiB) max;   2040MB (  1946 MiB) avg;   4146MB (  3954 MiB) peak
Used non-heap memory:             30MB (    28 MiB) max;     29MB (    28 MiB) avg;     30MB (    28 MiB) peak
Used in PS Old Gen pool:         720MB (   687 MiB) max;    439MB (   419 MiB) avg;    720MB (   687 MiB) peak
Allocated heap memory:          4784MB (  4562 MiB) max;   4552MB (  4341 MiB) avg
Allocated non-heap memory:        30MB (    29 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:  14405MB ( 13738 MiB) max;  13670MB ( 13037 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
