scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/systemc/ALL.prp ../svcomp15/systemc/transmitter.13_false-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_2140918326_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               92824966 (count: 3570193, min: 0, max: 26, avg: 26.00)
Number of global variables:                        92824966 (count: 3570193, min: 0, max: 26, avg: 26.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                17572253
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:              114.053s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                103.463s
  Time for transition matches:                        41.484s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     26198767 (count: 26198767, min: 1, max: 1, avg: 1.00) [1 x 26198767]

CPA algorithm statistics
------------------------
Number of iterations:            14758503
Max size of waitlist:            2887
Average size of waitlist:        1463
Number of computed successors:   17572253
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         2805663
Number of times breaked:         31

Total time for CPA algorithm:       754.947s (Max:   244.108s)
  Time for choose from waitlist:     14.284s
  Time for precision adjustment:    188.223s
  Time for transfer relation:       292.407s
  Time for stop operator:           139.019s
  Time for adding to reached set:    34.514s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             31
Total number of targets found:           31
Time for completing refinement:          45.508s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 3603364
Max. size of reached set after ref.:  321374
Avg. size of reached set before ref.: 376245.13
Avg. size of reached set after ref.:  15071.00

Total time for CEGAR algorithm:     800.988s
Time for refinements:                45.886s
Average time for refinement:          1.480s
Max time for refinement:             14.173s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.884
  Visited lines:          893
  Total lines:            1057
  Line coverage:          0.845
  Visited conditions:     289
  Total conditions:       422
  Condition coverage:     0.685

CPAchecker general statistics
-----------------------------
Number of program locations:     941
Number of CFA edges:             1233
Number of relevant variables:    133
Number of functions:             43
Number of loops:                 2
Size of reached set:             3570193
  Size of final wait list        2731

Time for analysis setup:          2.265s
  Time for loading CPAs:          0.519s
  Time for loading parser:        0.565s
  Time for CFA construction:      1.097s
    Time for parsing file(s):     0.398s
    Time for AST to CFA:          0.285s
    Time for CFA sanity check:    0.081s
    Time for post-processing:     0.244s
      Time for var class.:        0.000s
Time for Analysis:              800.988s
CPU time for analysis:         1007.330s
Total time for CPAchecker:      803.259s
Total CPU time for CPAchecker: 1011.120s

Time for Garbage Collector:     200.821s (in 63 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6478MB (  6177 MiB) max;   2962MB (  2825 MiB) avg;   8154MB (  7776 MiB) peak
Used non-heap memory:             22MB (    21 MiB) max;     20MB (    19 MiB) avg;     22MB (    21 MiB) peak
Used in PS Old Gen pool:        3982MB (  3797 MiB) max;   1591MB (  1517 MiB) avg;   4509MB (  4300 MiB) peak
Allocated heap memory:          8942MB (  8528 MiB) max;   5615MB (  5355 MiB) avg
Allocated non-heap memory:        45MB (    42 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  13580MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
