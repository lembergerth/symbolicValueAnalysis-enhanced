scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem06_label34_true-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1393298361_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               76473528 (count: 3186399, min: 0, max: 24, avg: 24.00)
Number of global variables:                        76473528 (count: 3186399, min: 0, max: 24, avg: 24.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                13183163
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               84.292s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 68.696s
  Time for transition matches:                        24.706s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                     13483572 (count: 13485682, min: 0, max: 1, avg: 1.00) [0 x 2110, 1 x 13483572]

CPA algorithm statistics
------------------------
Number of iterations:            11955488
Max size of waitlist:            3501
Average size of waitlist:        1188
Number of computed successors:   13183163
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         1218519
Number of times breaked:         29

Total time for CPA algorithm:       547.627s (Max:   235.892s)
  Time for choose from waitlist:     11.977s
  Time for precision adjustment:    126.295s
  Time for transfer relation:       243.579s
  Time for stop operator:            64.153s
  Time for adding to reached set:    37.807s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             29
Total number of targets found:           29
Time for completing refinement:         122.372s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 4861333
Max. size of reached set after ref.:  345
Avg. size of reached set before ref.: 302739.38
Avg. size of reached set after ref.:  41.24

Total time for CEGAR algorithm:     670.327s
Time for refinements:               122.699s
Average time for refinement:          4.231s
Max time for refinement:             84.945s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          6530
  Total lines:            9151
  Line coverage:          0.714
  Visited conditions:     29132
  Total conditions:       31852
  Condition coverage:     0.915

CPAchecker general statistics
-----------------------------
Number of program locations:     17295
Number of CFA edges:             33225
Number of relevant variables:    36
Number of functions:             6
Number of loops:                 1
Size of reached set:             3186399
  Size of final wait list        1843

Time for analysis setup:          7.029s
  Time for loading CPAs:          0.664s
  Time for loading parser:        0.554s
  Time for CFA construction:      5.727s
    Time for parsing file(s):     1.233s
    Time for AST to CFA:          1.728s
    Time for CFA sanity check:    0.617s
    Time for post-processing:     1.978s
      Time for var class.:        0.000s
Time for Analysis:              670.327s
CPU time for analysis:          887.920s
Total time for CPAchecker:      677.362s
Total CPU time for CPAchecker:  900.760s

Time for Garbage Collector:     213.565s (in 71 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6907MB (  6587 MiB) max;   3522MB (  3358 MiB) avg;  10201MB (  9729 MiB) peak
Used non-heap memory:             24MB (    23 MiB) max;     22MB (    21 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:        5611MB (  5351 MiB) max;   2176MB (  2075 MiB) avg;   5741MB (  5475 MiB) peak
Allocated heap memory:          8748MB (  8343 MiB) max;   6398MB (  6101 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
