scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/seq-mthreaded/ALL.prp ../svcomp15/seq-mthreaded/pals_STARTPALS_Triplicated_false-unreach-call.1.ufo.BOUNDED-10.pals.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1923917117_tempdir
Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Infeasible counterexample found, but could not remove it from the ARG. Therefore, we cannot prove safety. (CounterexampleCheckAlgorithm.checkCounterexample, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               18642663 (count: 1130805, min: 0, max: 22, avg: 16.49)
Number of global variables:                        15107041 (count: 1130805, min: 0, max: 14, avg: 13.36)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 1600210
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               11.752s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 46.229s
  Time for transition matches:                        18.469s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                      2237131 (count: 2237131, min: 1, max: 1, avg: 1.00) [1 x 2237131]

CPA algorithm statistics
------------------------
Number of iterations:            1536336
Max size of waitlist:            4096
Average size of waitlist:        2166
Number of computed successors:   1600210
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         55505
Number of times breaked:         1923

Total time for CPA algorithm:       355.277s (Max:   236.121s)
  Time for choose from waitlist:      6.984s
  Time for precision adjustment:     27.037s
  Time for transfer relation:        71.166s
  Time for stop operator:           206.515s
  Time for adding to reached set:     8.532s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:           1923
Total number of targets found:         1923
Time for completing refinement:          27.564s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1923
Number of successful refinements:     57
Number of failed refinements:         0
Max. size of reached set before ref.: 1130805
Max. size of reached set after ref.:  67846
Avg. size of reached set before ref.: 148008.70
Avg. size of reached set after ref.:  11247.12

Total time for CEGAR algorithm:     388.145s
Time for refinements:                32.815s
Average time for refinement:          0.017s
Max time for refinement:              0.549s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    1866
Number of infeasible paths:         1865 (100%)
Time for counterexample checks:       361.032s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          335
  Total lines:            352
  Line coverage:          0.952
  Visited conditions:     143
  Total conditions:       174
  Condition coverage:     0.822

CPAchecker general statistics
-----------------------------
Number of program locations:     327
Number of CFA edges:             488
Number of relevant variables:    91
Number of functions:             14
Number of loops:                 3
Size of reached set:             1130805
  Size of final wait list        3969

Time for analysis setup:          2.158s
  Time for loading CPAs:          0.588s
  Time for loading parser:        0.572s
  Time for CFA construction:      0.895s
    Time for parsing file(s):     0.398s
    Time for AST to CFA:          0.229s
    Time for CFA sanity check:    0.043s
    Time for post-processing:     0.185s
      Time for var class.:        0.000s
Time for Analysis:              829.580s
CPU time for analysis:          896.840s
Total time for CPAchecker:      831.745s
Total CPU time for CPAchecker:  900.120s

Time for Garbage Collector:      46.032s (in 63 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4731MB (  4512 MiB) max;   2454MB (  2340 MiB) avg;   5145MB (  4907 MiB) peak
Used non-heap memory:             28MB (    27 MiB) max;     27MB (    26 MiB) avg;     28MB (    27 MiB) peak
Used in PS Old Gen pool:        1557MB (  1485 MiB) max;    843MB (   804 MiB) avg;   1557MB (  1485 MiB) peak
Allocated heap memory:          5726MB (  5461 MiB) max;   4943MB (  4714 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:  13665MB ( 13032 MiB) max;  13664MB ( 13031 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
