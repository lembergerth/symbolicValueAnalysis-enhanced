scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem13_label04_false-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1428983962_tempdir
Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               76575349 (count: 9566378, min: 0, max: 9, avg: 8.00)
Number of global variables:                        57398256 (count: 9566378, min: 0, max: 6, avg: 6.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                12236021
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               30.289s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 61.764s
  Time for transition matches:                        24.582s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                     12417505 (count: 12419482, min: 0, max: 1, avg: 1.00) [0 x 1977, 1 x 12417505]

CPA algorithm statistics
------------------------
Number of iterations:            11533544
Max size of waitlist:            16475
Average size of waitlist:        7143
Number of computed successors:   12236021
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         681339
Number of times breaked:         8

Total time for CPA algorithm:       690.470s (Max:   603.050s)
  Time for choose from waitlist:     11.880s
  Time for precision adjustment:     70.875s
  Time for transfer relation:       243.815s
  Time for stop operator:           268.376s
  Time for adding to reached set:    30.499s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              8
Total number of targets found:            8
Time for completing refinement:           8.982s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 865203
Max. size of reached set after ref.:  165894
Avg. size of reached set before ref.: 269277.63
Avg. size of reached set after ref.:  20739.50

Total time for CEGAR algorithm:     699.617s
Time for refinements:                 9.106s
Average time for refinement:          1.138s
Max time for refinement:              4.117s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          2674
  Total lines:            4769
  Line coverage:          0.561
  Visited conditions:     13176
  Total conditions:       15642
  Condition coverage:     0.842

CPAchecker general statistics
-----------------------------
Number of program locations:     8994
Number of CFA edges:             16818
Number of relevant variables:    11
Number of functions:             5
Number of loops:                 1
Size of reached set:             9566378
  Size of final wait list        16474

Time for analysis setup:          6.039s
  Time for loading CPAs:          0.556s
  Time for loading parser:        0.587s
  Time for CFA construction:      4.813s
    Time for parsing file(s):     1.117s
    Time for AST to CFA:          1.494s
    Time for CFA sanity check:    0.213s
    Time for post-processing:     1.754s
      Time for var class.:        0.000s
Time for Analysis:              699.617s
CPU time for analysis:          889.360s
Total time for CPAchecker:      705.663s
Total CPU time for CPAchecker:  900.310s

Time for Garbage Collector:     187.468s (in 67 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               8427MB (  8036 MiB) max;   4188MB (  3994 MiB) avg;  10032MB (  9567 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     24MB (    22 MiB) peak
Used in PS Old Gen pool:        6229MB (  5940 MiB) max;   2893MB (  2759 MiB) avg;   6437MB (  6139 MiB) peak
Allocated heap memory:          9753MB (  9302 MiB) max;   6693MB (  6383 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  13580MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
