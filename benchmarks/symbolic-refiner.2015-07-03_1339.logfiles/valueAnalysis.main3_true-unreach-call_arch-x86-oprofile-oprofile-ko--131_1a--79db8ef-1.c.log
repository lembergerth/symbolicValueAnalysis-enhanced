scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-commit-tester/ALL.prp ../svcomp15/ldv-commit-tester/main3_true-unreach-call_arch-x86-oprofile-oprofile-ko--131_1a--79db8ef-1.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_320781376_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 10247: Function pointer *(apic->read) with type u32  (*)(u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10259: Function pointer *(apic->write) with type void (*)(u32 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9388: Function pointer *(timer___0->base->get_time) with type ktime_t  (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 10363-10365: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 14086-14088: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_up (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_resume to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_shutdown to nmi_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_up (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_down (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_switch to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_switch to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_down to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_switch (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_up to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to switch_worker (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to switch_worker (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_down (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_switch (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from switch_worker to nmi_setup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_shutdown to nmi_cpu_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_down to nmi_cpu_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_shutdown to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_shutdown to nmi_cpu_down (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_shutdown to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_shutdown to nmi_cpu_switch (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                      0 (count: 749858, min: 0, max: 0, avg: 0.00)
Number of global variables:                               0 (count: 749858, min: 0, max: 0, avg: 0.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  827652
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                2.086s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.023s
  Time for transition matches:                         6.008s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1370429 (count: 1370429, min: 1, max: 1, avg: 1.00) [1 x 1370429]

CPA algorithm statistics
------------------------
Number of iterations:            749858
Max size of waitlist:            81
Average size of waitlist:        47
Number of computed successors:   827652
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         77795
Number of times breaked:         0

Total time for CPA algorithm:        47.834s (Max:    47.834s)
  Time for choose from waitlist:      1.792s
  Time for precision adjustment:      6.474s
  Time for transfer relation:        25.940s
  Time for stop operator:             2.234s
  Time for adding to reached set:     2.196s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              0
Total number of targets found:            0
Time for completing refinement:           0.000s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.635
  Visited lines:          6948
  Total lines:            9247
  Line coverage:          0.751
  Visited conditions:     864
  Total conditions:       1504
  Condition coverage:     0.574

CPAchecker general statistics
-----------------------------
Number of program locations:     4483
Number of CFA edges:             6394
Number of relevant variables:    1452
Number of functions:             288
Number of loops:                 76
Size of reached set:             749858
  Number of reached locations:   2730 (61%)
    Avg states per location:     274
    Max states per location:     34094 (at node N7054)
  Number of reached functions:   183 (64%)
  Number of partitions:          749858
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          6.114s
  Time for loading CPAs:          0.747s
  Time for loading parser:        0.550s
  Time for CFA construction:      4.730s
    Time for parsing file(s):     1.099s
    Time for AST to CFA:          2.156s
    Time for CFA sanity check:    0.154s
    Time for post-processing:     1.084s
      Time for var class.:        0.000s
Time for Analysis:               48.471s
CPU time for analysis:           53.660s
Total time for CPAchecker:       54.591s
Total CPU time for CPAchecker:   64.950s

Time for Garbage Collector:       2.393s (in 5 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               2359MB (  2250 MiB) max;    815MB (   777 MiB) avg;   2683MB (  2558 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     22MB (    21 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:         267MB (   255 MiB) max;    125MB (   119 MiB) avg;    479MB (   457 MiB) peak
Allocated heap memory:          3611MB (  3444 MiB) max;   2775MB (  2647 MiB) avg
Allocated non-heap memory:        25MB (    24 MiB) max;     25MB (    24 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
