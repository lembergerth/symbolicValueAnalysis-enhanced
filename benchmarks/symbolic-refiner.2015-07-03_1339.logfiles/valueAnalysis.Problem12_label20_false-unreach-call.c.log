scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem12_label20_false-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1199529658_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               53722365 (count: 7685633, min: 0, max: 8, avg: 6.99)
Number of global variables:                        38428155 (count: 7685633, min: 0, max: 5, avg: 5.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                10350795
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               20.936s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 82.851s
  Time for transition matches:                        22.387s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                     10556650 (count: 10560226, min: 0, max: 1, avg: 1.00) [0 x 3576, 1 x 10556650]

CPA algorithm statistics
------------------------
Number of iterations:            9593679
Max size of waitlist:            16696
Average size of waitlist:        7050
Number of computed successors:   10350795
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         734469
Number of times breaked:         7

Total time for CPA algorithm:       674.056s (Max:   466.523s)
  Time for choose from waitlist:     11.087s
  Time for precision adjustment:     53.704s
  Time for transfer relation:       168.882s
  Time for stop operator:           354.165s
  Time for adding to reached set:    28.888s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              7
Total number of targets found:            7
Time for completing refinement:           9.381s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 2786420
Max. size of reached set after ref.:  2733768
Avg. size of reached set before ref.: 666354.71
Avg. size of reached set after ref.:  390541.29

Total time for CEGAR algorithm:     684.258s
Time for refinements:                 9.646s
Average time for refinement:          1.378s
Max time for refinement:              4.587s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          3943
  Total lines:            3979
  Line coverage:          0.991
  Visited conditions:     13250
  Total conditions:       13318
  Condition coverage:     0.995

CPAchecker general statistics
-----------------------------
Number of program locations:     7552
Number of CFA edges:             14214
Number of relevant variables:    10
Number of functions:             5
Number of loops:                 1
Size of reached set:             7685633
  Size of final wait list        16695

Time for analysis setup:          5.819s
  Time for loading CPAs:          0.543s
  Time for loading parser:        0.499s
  Time for CFA construction:      4.690s
    Time for parsing file(s):     0.907s
    Time for AST to CFA:          1.292s
    Time for CFA sanity check:    0.446s
    Time for post-processing:     1.727s
      Time for var class.:        0.000s
Time for Analysis:              684.258s
CPU time for analysis:          889.560s
Total time for CPAchecker:      690.083s
Total CPU time for CPAchecker:  900.060s

Time for Garbage Collector:     204.023s (in 55 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               7273MB (  6936 MiB) max;   3801MB (  3625 MiB) avg;   8744MB (  8339 MiB) peak
Used non-heap memory:             24MB (    22 MiB) max;     21MB (    20 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:        5247MB (  5004 MiB) max;   2384MB (  2273 MiB) avg;   5284MB (  5039 MiB) peak
Allocated heap memory:          9668MB (  9220 MiB) max;   6131MB (  5847 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
