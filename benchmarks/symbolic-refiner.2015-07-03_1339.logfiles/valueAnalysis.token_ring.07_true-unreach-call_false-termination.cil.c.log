scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/systemc/ALL.prp ../svcomp15/systemc/token_ring.07_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1886838030_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               92309465 (count: 4013457, min: 0, max: 23, avg: 23.00)
Number of global variables:                        92309465 (count: 4013457, min: 0, max: 23, avg: 23.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                13637283
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               88.668s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 83.056s
  Time for transition matches:                        33.813s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     20669454 (count: 20669454, min: 1, max: 1, avg: 1.00) [1 x 20669454]

CPA algorithm statistics
------------------------
Number of iterations:            12063079
Max size of waitlist:            7932
Average size of waitlist:        1834
Number of computed successors:   13637283
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         1573548
Number of times breaked:         28

Total time for CPA algorithm:       748.052s (Max:   321.046s)
  Time for choose from waitlist:     11.994s
  Time for precision adjustment:    135.763s
  Time for transfer relation:       171.475s
  Time for stop operator:           306.446s
  Time for adding to reached set:    53.555s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             28
Total number of targets found:           28
Time for completing refinement:          31.056s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 2487551
Max. size of reached set after ref.:  1533776
Avg. size of reached set before ref.: 363913.14
Avg. size of reached set after ref.:  76403.18

Total time for CEGAR algorithm:     780.040s
Time for refinements:                31.341s
Average time for refinement:          1.119s
Max time for refinement:              9.325s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.871
  Visited lines:          594
  Total lines:            664
  Line coverage:          0.895
  Visited conditions:     192
  Total conditions:       250
  Condition coverage:     0.768

CPAchecker general statistics
-----------------------------
Number of program locations:     588
Number of CFA edges:             772
Number of relevant variables:    82
Number of functions:             31
Number of loops:                 2
Size of reached set:             4013457
  Size of final wait list        3606

Time for analysis setup:          1.904s
  Time for loading CPAs:          0.466s
  Time for loading parser:        0.552s
  Time for CFA construction:      0.811s
    Time for parsing file(s):     0.305s
    Time for AST to CFA:          0.224s
    Time for CFA sanity check:    0.052s
    Time for post-processing:     0.169s
      Time for var class.:        0.000s
Time for Analysis:              780.040s
CPU time for analysis:          897.380s
Total time for CPAchecker:      781.950s
Total CPU time for CPAchecker:  900.380s

Time for Garbage Collector:     113.912s (in 65 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5447MB (  5195 MiB) max;   2783MB (  2654 MiB) avg;   6418MB (  6121 MiB) peak
Used non-heap memory:             22MB (    21 MiB) max;     20MB (    19 MiB) avg;     22MB (    21 MiB) peak
Used in PS Old Gen pool:        2924MB (  2789 MiB) max;   1411MB (  1346 MiB) avg;   2924MB (  2789 MiB) peak
Allocated heap memory:          8271MB (  7888 MiB) max;   5429MB (  5177 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
