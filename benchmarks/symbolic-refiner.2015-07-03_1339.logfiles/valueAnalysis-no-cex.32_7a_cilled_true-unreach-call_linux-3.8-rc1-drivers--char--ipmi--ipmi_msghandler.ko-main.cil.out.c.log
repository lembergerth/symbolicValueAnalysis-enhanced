scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop analysis.checkCounterexamples=false -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--char--ipmi--ipmi_msghandler.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_574708761_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5409: Function pointer *(w->new_smi) with type void (*)(int, struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11138: Function pointer *(intf->handlers->sender) with type void (*)(void *, struct ipmi_smi_msg *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9894: Function pointer *(handlers->sender) with type void (*)(void *, struct ipmi_smi_msg *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7617: Function pointer *(handlers->sender) with type void (*)(void *, struct ipmi_smi_msg *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6039: Function pointer *(intf->handlers->inc_usecount) with type int (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5307: Function pointer *(watcher->new_smi) with type void (*)(int, struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9712: Function pointer *(w->smi_gone) with type void (*)(int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6478: Function pointer *(intf->handlers->set_maintenance_mode) with type void (*)(void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12027: Function pointer *(intf->handlers->set_run_to_completion) with type void (*)(void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11752: Function pointer *(intf->handlers->set_run_to_completion) with type void (*)(void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker
 counterexample.checker.config 
 (CPAchecker.printConfigurationWarnings, WARNING)

Skipping recursive function call from ipmi_free_smi_msg to intf_free (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_request_event to intf_free (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_request_event to ipmi_timeout (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from send_channel_info_cmd to i_ipmi_request (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from deliver_response to ipmi_free_recv_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_bmc_rsp to ipmi_free_recv_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_read_event_rsp to ipmi_free_recv_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_new_recv_msgs to intf_free (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_new_recv_msgs to ipmi_timeout (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_new_recv_msgs to smi_recv_tasklet (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_new_recv_msgs to ipmi_free_smi_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from check_msg_timeout to ipmi_free_smi_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_request_event to smi_recv_tasklet (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from free_recv_msg_list to ipmi_free_recv_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from clean_up_interface_data to ipmi_free_recv_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_free_smi_msg to ipmi_timeout (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_free_smi_msg to smi_recv_tasklet (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from free_smi_msg_list to ipmi_free_smi_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_free_recv_msg to intf_free (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_free_recv_msg to ipmi_timeout (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_free_recv_msg to smi_recv_tasklet (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_bmc_rsp to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_read_event_rsp to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_oem_get_msg_cmd to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_lan_get_msg_cmd to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_lan_get_msg_rsp to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_ipmb_get_msg_cmd to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_ipmb_get_msg_rsp to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_one_recv_msg to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from deliver_err_response to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from i_ipmi_request to ipmi_free_smi_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from i_ipmi_request to ipmi_free_recv_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from smi_recv_tasklet to handle_new_recv_msgs (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               35516291 (count: 3228774, min: 0, max: 11, avg: 11.00)
Number of global variables:                        35516290 (count: 3228774, min: 0, max: 11, avg: 11.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 3679964
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               10.514s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 20.245s
  Time for transition matches:                         8.697s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      5341155 (count: 5341155, min: 1, max: 1, avg: 1.00) [1 x 5341155]

CPA algorithm statistics
------------------------
Number of iterations:            3240518
Max size of waitlist:            77
Average size of waitlist:        48
Number of computed successors:   3679964
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         439396
Number of times breaked:         11

Total time for CPA algorithm:       152.685s (Max:   150.504s)
  Time for choose from waitlist:      3.049s
  Time for precision adjustment:     24.318s
  Time for transfer relation:        50.913s
  Time for stop operator:            51.603s
  Time for adding to reached set:     6.822s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             11
Total number of targets found:           11
Time for completing refinement:           0.813s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 9030
Max. size of reached set after ref.:  169
Avg. size of reached set before ref.: 1092.55
Avg. size of reached set after ref.:  20.27

Total time for CEGAR algorithm:     154.248s
Time for refinements:                 1.561s
Average time for refinement:          0.141s
Max time for refinement:              0.416s

Code Coverage
-----------------------------
  Function coverage:      0.373
  Visited lines:          5796
  Total lines:            8099
  Line coverage:          0.716
  Visited conditions:     746
  Total conditions:       1380
  Condition coverage:     0.541

CPAchecker general statistics
-----------------------------
Number of program locations:     4158
Number of CFA edges:             5899
Number of relevant variables:    1177
Number of functions:             271
Number of loops:                 49
Size of reached set:             3228774

Time for analysis setup:          4.916s
  Time for loading CPAs:          0.581s
  Time for loading parser:        0.607s
  Time for CFA construction:      3.658s
    Time for parsing file(s):     1.114s
    Time for AST to CFA:          1.220s
    Time for CFA sanity check:    0.174s
    Time for post-processing:     0.908s
      Time for var class.:        0.000s
Time for Analysis:              154.248s
CPU time for analysis:          216.150s
Total time for CPAchecker:      159.169s
Total CPU time for CPAchecker:  225.070s

Time for Garbage Collector:      58.960s (in 15 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4012MB (  3827 MiB) max;   1926MB (  1837 MiB) avg;   4915MB (  4687 MiB) peak
Used non-heap memory:             24MB (    23 MiB) max;     22MB (    21 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:        1881MB (  1793 MiB) max;    773MB (   737 MiB) avg;   1881MB (  1793 MiB) peak
Allocated heap memory:          5706MB (  5442 MiB) max;   3943MB (  3760 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
