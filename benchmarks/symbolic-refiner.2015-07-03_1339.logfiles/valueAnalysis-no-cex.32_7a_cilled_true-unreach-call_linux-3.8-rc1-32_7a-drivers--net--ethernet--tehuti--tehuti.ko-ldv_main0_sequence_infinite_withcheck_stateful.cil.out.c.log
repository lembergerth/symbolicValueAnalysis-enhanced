scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop analysis.checkCounterexamples=false -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--tehuti--tehuti.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-2061545606_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7484: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7532: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7288: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7195-7196: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7375: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7330: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7242: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker
 counterexample.checker.config 
 (CPAchecker.printConfigurationWarnings, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                  32295 (count: 10770, min: 0, max: 3, avg: 3.00)
Number of global variables:                           32295 (count: 10770, min: 0, max: 3, avg: 3.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                   46865
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.334s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.431s
Automaton transfers with branching:                0
Automaton transfer successors:                        68546 (count: 68546, min: 1, max: 1, avg: 1.00) [1 x 68546]

CPA algorithm statistics
------------------------
Number of iterations:            43059
Max size of waitlist:            36
Average size of waitlist:        15
Number of computed successors:   46865
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         3804
Number of times breaked:         3

Total time for CPA algorithm:         4.680s (Max:     1.795s)
  Time for choose from waitlist:      0.091s
  Time for precision adjustment:      0.823s
  Time for transfer relation:         2.588s
  Time for stop operator:             0.258s
  Time for adding to reached set:     0.222s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              3
Total number of targets found:            3
Time for completing refinement:           0.458s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 10771
Max. size of reached set after ref.:  5
Avg. size of reached set before ref.: 10769.00
Avg. size of reached set after ref.:  5.00

Total time for CEGAR algorithm:       5.570s
Time for refinements:                 0.890s
Average time for refinement:          0.296s
Max time for refinement:              0.434s

Code Coverage
-----------------------------
  Function coverage:      0.763
  Visited lines:          8279
  Total lines:            8764
  Line coverage:          0.945
  Visited conditions:     521
  Total conditions:       664
  Condition coverage:     0.785

CPAchecker general statistics
-----------------------------
Number of program locations:     2575
Number of CFA edges:             3574
Number of relevant variables:    925
Number of functions:             186
Number of loops:                 38
Size of reached set:             10770
  Number of reached locations:   2056 (80%)
    Avg states per location:     5
    Max states per location:     334 (at node N3733)
  Number of reached functions:   142 (76%)
  Number of partitions:          10770
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.487s
  Time for loading CPAs:          0.583s
  Time for loading parser:        0.636s
  Time for CFA construction:      4.199s
    Time for parsing file(s):     1.254s
    Time for AST to CFA:          1.785s
    Time for CFA sanity check:    0.136s
    Time for post-processing:     0.695s
      Time for var class.:        0.000s
Time for Analysis:                5.570s
CPU time for analysis:           10.000s
Total time for CPAchecker:       11.064s
Total CPU time for CPAchecker:   20.050s

Time for Garbage Collector:       0.203s (in 1 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                529MB (   504 MiB) max;    245MB (   233 MiB) avg;    567MB (   541 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     18MB (    17 MiB) avg;     24MB (    22 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        25MB (    24 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13581MB ( 12952 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
