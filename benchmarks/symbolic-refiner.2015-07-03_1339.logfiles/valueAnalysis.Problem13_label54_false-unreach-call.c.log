scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem13_label54_false-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1037485785_tempdir
Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               71323583 (count: 8909225, min: 0, max: 9, avg: 8.01)
Number of global variables:                        53455338 (count: 8909225, min: 0, max: 6, avg: 6.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                11701925
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               37.784s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 74.826s
  Time for transition matches:                        47.690s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                     11876320 (count: 11878201, min: 0, max: 1, avg: 1.00) [0 x 1881, 1 x 11876320]

CPA algorithm statistics
------------------------
Number of iterations:            11115098
Max size of waitlist:            15400
Average size of waitlist:        6516
Number of computed successors:   11701925
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         566798
Number of times breaked:         8

Total time for CPA algorithm:       640.545s (Max:   568.265s)
  Time for choose from waitlist:     10.171s
  Time for precision adjustment:     74.732s
  Time for transfer relation:       183.665s
  Time for stop operator:           285.182s
  Time for adding to reached set:    32.020s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              8
Total number of targets found:            8
Time for completing refinement:          23.238s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 1491455
Max. size of reached set after ref.:  165894
Avg. size of reached set before ref.: 298977.38
Avg. size of reached set after ref.:  20739.50

Total time for CEGAR algorithm:     663.955s
Time for refinements:                23.370s
Average time for refinement:          2.921s
Max time for refinement:             17.499s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          2674
  Total lines:            4769
  Line coverage:          0.561
  Visited conditions:     13176
  Total conditions:       15642
  Condition coverage:     0.842

CPAchecker general statistics
-----------------------------
Number of program locations:     8994
Number of CFA edges:             16818
Number of relevant variables:    11
Number of functions:             5
Number of loops:                 1
Size of reached set:             8909225
  Size of final wait list        15397

Time for analysis setup:          5.973s
  Time for loading CPAs:          0.547s
  Time for loading parser:        0.530s
  Time for CFA construction:      4.815s
    Time for parsing file(s):     1.170s
    Time for AST to CFA:          1.518s
    Time for CFA sanity check:    0.299s
    Time for post-processing:     1.620s
      Time for var class.:        0.000s
Time for Analysis:              663.955s
CPU time for analysis:          892.530s
Total time for CPAchecker:      669.934s
Total CPU time for CPAchecker:  903.440s

Time for Garbage Collector:     226.366s (in 72 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               8005MB (  7634 MiB) max;   3980MB (  3795 MiB) avg;   9583MB (  9139 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     24MB (    22 MiB) peak
Used in PS Old Gen pool:        5887MB (  5614 MiB) max;   2765MB (  2637 MiB) avg;   5887MB (  5614 MiB) peak
Allocated heap memory:          9628MB (  9182 MiB) max;   6437MB (  6139 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:  13581MB ( 12952 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
