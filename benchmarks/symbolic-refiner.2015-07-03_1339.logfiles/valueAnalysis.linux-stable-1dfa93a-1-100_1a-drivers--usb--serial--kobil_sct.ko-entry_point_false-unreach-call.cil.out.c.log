scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-validator-v0.6/ALL.prp ../svcomp15/ldv-validator-v0.6/linux-stable-1dfa93a-1-100_1a-drivers--usb--serial--kobil_sct.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-620950508_tempdir
lines 4791-4796: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

Infeasible counterexample found, but could not remove it from the ARG. Therefore, we cannot prove safety. (CounterexampleCheckAlgorithm.checkCounterexample, WARNING)

The void * pointer kmalloc::__retval__ to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 lines 5848-5849:	N563 -{port->write_urb->transfer_buffer = kmalloc((size_t )write_urb_transfer_buffer_length, 208U);}-> N584) (CounterexampleCheck:PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer kmalloc::__retval__ to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 lines 5848-5849:	N563 -{port->write_urb->transfer_buffer = kmalloc((size_t )write_urb_transfer_buffer_length, 208U);}-> N584) (CounterexampleCheck:PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer kmalloc::__retval__ to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 lines 5848-5849:	N563 -{port->write_urb->transfer_buffer = kmalloc((size_t )write_urb_transfer_buffer_length, 208U);}-> N584) (CounterexampleCheck:PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer kmalloc::__retval__ to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 lines 5848-5849:	N563 -{port->write_urb->transfer_buffer = kmalloc((size_t )write_urb_transfer_buffer_length, 208U);}-> N584) (CounterexampleCheck:PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer kmalloc::__retval__ to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 lines 5848-5849:	N563 -{port->write_urb->transfer_buffer = kmalloc((size_t )write_urb_transfer_buffer_length, 208U);}-> N584) (CounterexampleCheck:PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

Analysis incomplete: no errors found, but not everything could be checked. (CPAchecker.analyzeResult, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                   2680 (count: 2764, min: 0, max: 1, avg: 0.97)
Number of global variables:                            2680 (count: 2764, min: 0, max: 1, avg: 0.97)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                    4411
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.081s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.108s
Automaton transfers with branching:                0
Automaton transfer successors:                         6374 (count: 6374, min: 1, max: 1, avg: 1.00) [1 x 6374]

CPA algorithm statistics
------------------------
Number of iterations:            3859
Max size of waitlist:            21
Average size of waitlist:        10
Number of computed successors:   4411
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         529
Number of times breaked:         12

Total time for CPA algorithm:         0.977s (Max:     0.480s)
  Time for choose from waitlist:      0.032s
  Time for precision adjustment:      0.239s
  Time for transfer relation:         0.430s
  Time for stop operator:             0.075s
  Time for adding to reached set:     0.062s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             12
Total number of targets found:           12
Time for completing refinement:           1.235s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 2626
Max. size of reached set after ref.:  84
Avg. size of reached set before ref.: 1794.42
Avg. size of reached set after ref.:  84.00

Total time for CEGAR algorithm:       2.741s
Time for refinements:                 1.763s
Average time for refinement:          0.146s
Max time for refinement:              0.432s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    11
Number of infeasible paths:         11 (100%)
Time for counterexample checks:         9.296s

Code Coverage
-----------------------------
  Function coverage:      0.758
  Visited lines:          5439
  Total lines:            5595
  Line coverage:          0.972
  Visited conditions:     352
  Total conditions:       424
  Condition coverage:     0.830

CPAchecker general statistics
-----------------------------
Number of program locations:     1134
Number of CFA edges:             1498
Number of relevant variables:    313
Number of functions:             62
Number of loops:                 7
Size of reached set:             2764
  Number of reached locations:   944 (83%)
    Avg states per location:     2
    Max states per location:     25 (at node N385)
  Number of reached functions:   47 (76%)
  Number of partitions:          2249
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1180 (before line 6771), Function main called from node N1133, stack depth 1 [45a48dda], stack [main], Init])
  Number of target states:       0

Time for analysis setup:          3.402s
  Time for loading CPAs:          0.568s
  Time for loading parser:        0.659s
  Time for CFA construction:      2.089s
    Time for parsing file(s):     0.764s
    Time for AST to CFA:          0.645s
    Time for CFA sanity check:    0.104s
    Time for post-processing:     0.369s
      Time for var class.:        0.000s
Time for Analysis:               12.060s
CPU time for analysis:           19.760s
Total time for CPAchecker:       15.469s
Total CPU time for CPAchecker:   25.610s

Time for Garbage Collector:       0.272s (in 2 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                560MB (   534 MiB) max;    257MB (   245 MiB) avg;    561MB (   535 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     21MB (    20 MiB) avg;     26MB (    24 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2553MB (  2435 MiB) max;   2139MB (  2040 MiB) avg
Allocated non-heap memory:        26MB (    25 MiB) max;     25MB (    24 MiB) avg
Total process virtual memory:  13766MB ( 13129 MiB) max;  13641MB ( 13009 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
