scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/linux-3.8-rc1-32_7a-drivers--md--persistent-data--dm-persistent-data.ko-ldv_main3_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1703565720_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                    424 (count: 217, min: 0, max: 2, avg: 1.95)
Number of global variables:                             424 (count: 217, min: 0, max: 2, avg: 1.95)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                     261
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.012s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.030s
Automaton transfers with branching:                0
Automaton transfer successors:                         1383 (count: 1383, min: 1, max: 1, avg: 1.00) [1 x 1383]

CPA algorithm statistics
------------------------
Number of iterations:            245
Max size of waitlist:            8
Average size of waitlist:        3
Number of computed successors:   261
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         13
Number of times breaked:         2

Total time for CPA algorithm:         0.165s (Max:     0.092s)
  Time for choose from waitlist:      0.013s
  Time for precision adjustment:      0.028s
  Time for transfer relation:         0.113s
  Time for stop operator:             0.000s
  Time for adding to reached set:     0.004s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              2
Total number of targets found:            2
Time for completing refinement:           0.059s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 22
Max. size of reached set after ref.:  5
Avg. size of reached set before ref.: 21.00
Avg. size of reached set after ref.:  5.00

Total time for CEGAR algorithm:       0.452s
Time for refinements:                 0.286s
Average time for refinement:          0.143s
Max time for refinement:              0.175s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.030
  Visited lines:          3629
  Total lines:            8830
  Line coverage:          0.411
  Visited conditions:     28
  Total conditions:       2034
  Condition coverage:     0.014

CPAchecker general statistics
-----------------------------
Number of program locations:     5795
Number of CFA edges:             9053
Number of relevant variables:    2030
Number of functions:             365
Number of loops:                 46
Size of reached set:             217
  Number of reached locations:   127 (2%)
    Avg states per location:     1
    Max states per location:     10 (at node N1526)
  Number of reached functions:   11 (3%)
  Number of partitions:          217
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          6.576s
  Time for loading CPAs:          0.663s
  Time for loading parser:        0.498s
  Time for CFA construction:      5.324s
    Time for parsing file(s):     1.163s
    Time for AST to CFA:          1.789s
    Time for CFA sanity check:    0.189s
    Time for post-processing:     1.906s
      Time for var class.:        0.000s
Time for Analysis:                0.454s
CPU time for analysis:            0.790s
Total time for CPAchecker:        7.036s
Total CPU time for CPAchecker:   12.910s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                363MB (   346 MiB) max;    191MB (   182 MiB) avg;    363MB (   346 MiB) peak
Used non-heap memory:             22MB (    21 MiB) max;     15MB (    14 MiB) avg;     23MB (    21 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        25MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
