scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.12-rc1/ALL.prp ../svcomp15/ldv-linux-3.12-rc1/linux-3.12-rc1.tar.xz-144_2a-drivers--usb--serial--usbserial.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1894096478_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6423: Function pointer *(port->serial->type->set_termios) with type void (*)(struct tty_struct *, struct usb_serial_port *, struct ktermios *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11726: Function pointer *(port->serial->type->tx_empty) with type bool  (*)(struct usb_serial_port *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13642: Ignoring call via function pointer completeFnInt for which no suitable target was found in line: (*completeFnInt)(usb_urb); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ldv_submit_urb to usb_serial_generic_write_bulk_callback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Skipping recursive function call from ldv_usb_submit_urb_41 to ldv_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_get_icount to serial_get_icount (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_get_icount to usb_serial_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_port_activate to serial_get_icount (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_port_activate to usb_serial_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_port_activate to serial_port_activate (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13651: Ignoring call via function pointer completeFnBulk for which no suitable target was found in line: (*completeFnBulk)(usb_urb); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Infeasible counterexample found, but could not remove it from the ARG. Therefore, we cannot prove safety. (CounterexampleCheckAlgorithm.checkCounterexample, WARNING)

Skipping recursive function call from serial_cleanup to usb_serial_put (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from destroy_serial to destroy_serial (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_unthrottle to destroy_serial (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_unthrottle to serial_unthrottle (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_throttle to destroy_serial (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_throttle to serial_unthrottle (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_throttle to serial_throttle (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_serial_disconnect to destroy_serial (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_serial_disconnect to serial_unthrottle (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_serial_disconnect to serial_throttle (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_serial_disconnect to usb_serial_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_serial_generic_read_bulk_callback to destroy_serial (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_serial_generic_read_bulk_callback to serial_unthrottle (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_serial_generic_read_bulk_callback to serial_throttle (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_serial_generic_read_bulk_callback to usb_serial_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_serial_generic_read_bulk_callback to usb_serial_generic_read_bulk_callback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_port_shutdown to destroy_serial (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_port_shutdown to serial_unthrottle (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_port_shutdown to serial_throttle (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_port_shutdown to usb_serial_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_port_shutdown to usb_serial_generic_read_bulk_callback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_port_shutdown to serial_port_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_serial_generic_read_bulk_callback to serial_port_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_serial_disconnect to usb_serial_put (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_serial_disconnect to usb_serial_generic_read_bulk_callback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_serial_disconnect to serial_port_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_throttle to usb_serial_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_throttle to usb_serial_generic_read_bulk_callback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_throttle to serial_port_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_unthrottle to serial_throttle (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_unthrottle to usb_serial_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_unthrottle to usb_serial_generic_read_bulk_callback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from serial_unthrottle to serial_port_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                6275241 (count: 450644, min: 0, max: 17, avg: 13.93)
Number of global variables:                         5859624 (count: 450644, min: 0, max: 14, avg: 13.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  537621
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                2.261s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.115s
  Time for transition matches:                         1.339s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       741637 (count: 741637, min: 1, max: 1, avg: 1.00) [1 x 741637]

CPA algorithm statistics
------------------------
Number of iterations:            487827
Max size of waitlist:            145
Average size of waitlist:        111
Number of computed successors:   537621
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         47578
Number of times breaked:         703

Total time for CPA algorithm:        17.473s (Max:     0.217s)
  Time for choose from waitlist:      0.535s
  Time for precision adjustment:      3.960s
  Time for transfer relation:         8.055s
  Time for stop operator:             1.088s
  Time for adding to reached set:     1.222s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:            703
Total number of targets found:          703
Time for completing refinement:          28.758s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                703
Number of successful refinements:     66
Number of failed refinements:         0
Max. size of reached set before ref.: 450644
Max. size of reached set after ref.:  351496
Avg. size of reached set before ref.: 219052.17
Avg. size of reached set after ref.:  128656.23

Total time for CEGAR algorithm:      57.587s
Time for refinements:                40.098s
Average time for refinement:          0.057s
Max time for refinement:              0.443s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    637
Number of infeasible paths:         636 (100%)
Time for counterexample checks:       766.242s

Code Coverage
-----------------------------
  Function coverage:      0.521
  Visited lines:          6094
  Total lines:            8450
  Line coverage:          0.721
  Visited conditions:     580
  Total conditions:       1636
  Condition coverage:     0.355

CPAchecker general statistics
-----------------------------
Number of program locations:     4221
Number of CFA edges:             6286
Number of relevant variables:    1173
Number of functions:             217
Number of loops:                 41
Size of reached set:             450644
  Number of reached locations:   1693 (40%)
    Avg states per location:     266
    Max states per location:     6645 (at node N3605)
  Number of reached functions:   113 (52%)
  Number of partitions:          443020
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N3334 (before line 10257), Function main called from node N2726, stack depth 1 [13f53cbc], stack [main], Init])
  Number of target states:       1
  Size of final wait list        127

Time for analysis setup:          5.129s
  Time for loading CPAs:          0.737s
  Time for loading parser:        0.564s
  Time for CFA construction:      3.752s
    Time for parsing file(s):     1.131s
    Time for AST to CFA:          1.158s
    Time for CFA sanity check:    0.125s
    Time for post-processing:     1.072s
      Time for var class.:        0.000s
Time for Analysis:              859.887s
CPU time for analysis:          891.100s
Total time for CPAchecker:      865.022s
Total CPU time for CPAchecker:  900.400s

Time for Garbage Collector:       9.341s (in 74 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4603MB (  4390 MiB) max;   2179MB (  2078 MiB) avg;   4667MB (  4451 MiB) peak
Used non-heap memory:             31MB (    29 MiB) max;     30MB (    29 MiB) avg;     31MB (    30 MiB) peak
Used in PS Old Gen pool:        1156MB (  1102 MiB) max;    576MB (   549 MiB) avg;   1156MB (  1102 MiB) peak
Allocated heap memory:          4878MB (  4652 MiB) max;   4548MB (  4337 MiB) avg
Allocated non-heap memory:        31MB (    30 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:  13665MB ( 13032 MiB) max;  13664MB ( 13031 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
