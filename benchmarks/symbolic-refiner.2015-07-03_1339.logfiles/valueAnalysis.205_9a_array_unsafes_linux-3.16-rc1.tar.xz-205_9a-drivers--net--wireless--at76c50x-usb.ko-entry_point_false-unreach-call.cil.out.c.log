scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--wireless--at76c50x-usb.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1632087476_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Infeasible counterexample found, but could not remove it from the ARG. Therefore, we cannot prove safety. (CounterexampleCheckAlgorithm.checkCounterexample, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Cannot get declaration of function __builtin_memcpy, ignoring calls to it. (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               27129021 (count: 3471892, min: 0, max: 13, avg: 7.81)
Number of global variables:                        20471320 (count: 3471892, min: 0, max: 6, avg: 5.90)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 5368594
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               17.378s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 29.667s
  Time for transition matches:                        12.347s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      7372442 (count: 7372442, min: 1, max: 1, avg: 1.00) [1 x 7372442]

CPA algorithm statistics
------------------------
Number of iterations:            4715867
Max size of waitlist:            74
Average size of waitlist:        35
Number of computed successors:   5368594
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         653207
Number of times breaked:         128

Total time for CPA algorithm:       168.510s (Max:    18.254s)
  Time for choose from waitlist:      4.460s
  Time for precision adjustment:     31.939s
  Time for transfer relation:        71.381s
  Time for stop operator:            22.067s
  Time for adding to reached set:    12.918s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:            128
Total number of targets found:          128
Time for completing refinement:          40.249s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                128
Number of successful refinements:     101
Number of failed refinements:         0
Max. size of reached set before ref.: 3471892
Max. size of reached set after ref.:  327362
Avg. size of reached set before ref.: 270081.92
Avg. size of reached set after ref.:  118051.90

Total time for CEGAR algorithm:     214.278s
Time for refinements:                45.554s
Average time for refinement:          0.355s
Max time for refinement:             28.783s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    27
Number of infeasible paths:         26 (96%)
Time for counterexample checks:       582.274s

Code Coverage
-----------------------------
  Function coverage:      0.781
  Visited lines:          9877
  Total lines:            10198
  Line coverage:          0.969
  Visited conditions:     745
  Total conditions:       830
  Condition coverage:     0.898

CPAchecker general statistics
-----------------------------
Number of program locations:     2486
Number of CFA edges:             3264
Number of relevant variables:    790
Number of functions:             146
Number of loops:                 14
Size of reached set:             3471892
  Size of final wait list        34

Time for analysis setup:          5.157s
  Time for loading CPAs:          0.556s
  Time for loading parser:        0.530s
  Time for CFA construction:      3.999s
    Time for parsing file(s):     1.496s
    Time for AST to CFA:          1.287s
    Time for CFA sanity check:    0.174s
    Time for post-processing:     0.698s
      Time for var class.:        0.000s
Time for Analysis:              803.425s
CPU time for analysis:          890.830s
Total time for CPAchecker:      808.588s
Total CPU time for CPAchecker:  900.180s

Time for Garbage Collector:      69.476s (in 55 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5360MB (  5111 MiB) max;   2602MB (  2482 MiB) avg;   6543MB (  6240 MiB) peak
Used non-heap memory:             30MB (    28 MiB) max;     28MB (    26 MiB) avg;     30MB (    28 MiB) peak
Used in PS Old Gen pool:        2906MB (  2771 MiB) max;   1061MB (  1012 MiB) avg;   2906MB (  2771 MiB) peak
Allocated heap memory:          7784MB (  7424 MiB) max;   5170MB (  4931 MiB) avg
Allocated non-heap memory:        55MB (    52 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  14005MB ( 13356 MiB) max;  13717MB ( 13081 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
