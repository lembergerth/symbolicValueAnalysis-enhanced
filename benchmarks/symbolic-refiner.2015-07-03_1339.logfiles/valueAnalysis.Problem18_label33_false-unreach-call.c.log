scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem18_label33_false-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-232034223_tempdir
Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               49110042 (count: 7722079, min: 0, max: 8, avg: 6.36)
Number of global variables:                        30888308 (count: 7722079, min: 0, max: 4, avg: 4.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                12749919
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               25.257s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 55.993s
  Time for transition matches:                        21.075s
  Time for transition assertions:                      0.019s
  Time for transition actions:                         0.035s
Automaton transfers with branching:                0
Automaton transfer successors:                     12923844 (count: 12940807, min: 0, max: 1, avg: 1.00) [0 x 16963, 1 x 12923844]

CPA algorithm statistics
------------------------
Number of iterations:            12445031
Max size of waitlist:            10248
Average size of waitlist:        3705
Number of computed successors:   12749919
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         286036
Number of times breaked:         13

Total time for CPA algorithm:       731.383s (Max:   356.473s)
  Time for choose from waitlist:     11.738s
  Time for precision adjustment:     83.542s
  Time for transfer relation:       148.028s
  Time for stop operator:           389.367s
  Time for adding to reached set:    38.148s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             13
Total number of targets found:           13
Time for completing refinement:          20.057s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 4497043
Max. size of reached set after ref.:  4470172
Avg. size of reached set before ref.: 912665.00
Avg. size of reached set after ref.:  547910.77

Total time for CEGAR algorithm:     753.310s
Time for refinements:                20.343s
Average time for refinement:          1.564s
Max time for refinement:              3.478s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          3382
  Total lines:            3419
  Line coverage:          0.989
  Visited conditions:     9470
  Total conditions:       9656
  Condition coverage:     0.981

CPAchecker general statistics
-----------------------------
Number of program locations:     5656
Number of CFA edges:             10486
Number of relevant variables:    8
Number of functions:             4
Number of loops:                 1
Size of reached set:             7722079
  Size of final wait list        10247

Time for analysis setup:          5.120s
  Time for loading CPAs:          0.496s
  Time for loading parser:        0.572s
  Time for CFA construction:      3.969s
    Time for parsing file(s):     0.895s
    Time for AST to CFA:          1.127s
    Time for CFA sanity check:    0.279s
    Time for post-processing:     1.427s
      Time for var class.:        0.000s
Time for Analysis:              753.310s
CPU time for analysis:          890.810s
Total time for CPAchecker:      758.437s
Total CPU time for CPAchecker:  899.990s

Time for Garbage Collector:     134.156s (in 67 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               7582MB (  7231 MiB) max;   3839MB (  3661 MiB) avg;   8588MB (  8190 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:        5085MB (  4850 MiB) max;   2432MB (  2319 MiB) avg;   5159MB (  4920 MiB) peak
Allocated heap memory:          9904MB (  9445 MiB) max;   6391MB (  6095 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
