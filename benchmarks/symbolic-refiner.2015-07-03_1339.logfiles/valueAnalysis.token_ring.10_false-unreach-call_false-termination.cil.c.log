scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/systemc/ALL.prp ../svcomp15/systemc/token_ring.10_false-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1864267142_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               111063048 (count: 4627629, min: 0, max: 24, avg: 24.00)
Number of global variables:                        111063048 (count: 4627629, min: 0, max: 24, avg: 24.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                16176813
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               80.365s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 86.168s
  Time for transition matches:                        34.634s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     24183694 (count: 24183694, min: 1, max: 1, avg: 1.00) [1 x 24183694]

CPA algorithm statistics
------------------------
Number of iterations:            13799161
Max size of waitlist:            5739
Average size of waitlist:        2000
Number of computed successors:   16176813
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         2376280
Number of times breaked:         28

Total time for CPA algorithm:       713.128s (Max:   290.824s)
  Time for choose from waitlist:     12.539s
  Time for precision adjustment:    148.376s
  Time for transfer relation:       217.403s
  Time for stop operator:           199.283s
  Time for adding to reached set:    60.978s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             28
Total number of targets found:           28
Time for completing refinement:          34.975s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 2987715
Max. size of reached set after ref.:  875001
Avg. size of reached set before ref.: 369632.07
Avg. size of reached set after ref.:  42028.32

Total time for CEGAR algorithm:     748.779s
Time for refinements:                35.312s
Average time for refinement:          1.261s
Max time for refinement:             11.268s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      0.892
  Visited lines:          803
  Total lines:            887
  Line coverage:          0.905
  Visited conditions:     268
  Total conditions:       346
  Condition coverage:     0.775

CPAchecker general statistics
-----------------------------
Number of program locations:     780
Number of CFA edges:             1026
Number of relevant variables:    110
Number of functions:             37
Number of loops:                 2
Size of reached set:             4627629
  Size of final wait list        1459

Time for analysis setup:          1.985s
  Time for loading CPAs:          0.458s
  Time for loading parser:        0.509s
  Time for CFA construction:      0.932s
    Time for parsing file(s):     0.345s
    Time for AST to CFA:          0.258s
    Time for CFA sanity check:    0.067s
    Time for post-processing:     0.204s
      Time for var class.:        0.000s
Time for Analysis:              748.779s
CPU time for analysis:          947.490s
Total time for CPAchecker:      750.771s
Total CPU time for CPAchecker:  950.790s

Time for Garbage Collector:     195.238s (in 82 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5518MB (  5263 MiB) max;   2997MB (  2858 MiB) avg;   8517MB (  8123 MiB) peak
Used non-heap memory:             22MB (    21 MiB) max;     20MB (    19 MiB) avg;     23MB (    21 MiB) peak
Used in PS Old Gen pool:        4147MB (  3955 MiB) max;   1802MB (  1718 MiB) avg;   4156MB (  3963 MiB) peak
Allocated heap memory:          9381MB (  8946 MiB) max;   5808MB (  5539 MiB) avg
Allocated non-heap memory:        45MB (    42 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:  13580MB ( 12951 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
