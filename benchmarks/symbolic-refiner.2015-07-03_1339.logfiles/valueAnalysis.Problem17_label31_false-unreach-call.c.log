scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem17_label31_false-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_671795330_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               29716688 (count: 4252544, min: 0, max: 8, avg: 6.99)
Number of global variables:                        21262710 (count: 4252544, min: 0, max: 5, avg: 5.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 9964105
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               20.820s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 39.560s
  Time for transition matches:                        15.010s
  Time for transition assertions:                      0.019s
  Time for transition actions:                         0.042s
Automaton transfers with branching:                0
Automaton transfer successors:                     10112512 (count: 10124213, min: 0, max: 1, avg: 1.00) [0 x 11701, 1 x 10112512]

CPA algorithm statistics
------------------------
Number of iterations:            9699715
Max size of waitlist:            14627
Average size of waitlist:        7229
Number of computed successors:   9964105
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         238600
Number of times breaked:         22

Total time for CPA algorithm:       698.490s (Max:   146.638s)
  Time for choose from waitlist:      8.136s
  Time for precision adjustment:     44.897s
  Time for transfer relation:       108.714s
  Time for stop operator:           466.232s
  Time for adding to reached set:    27.247s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             22
Total number of targets found:           22
Time for completing refinement:          40.020s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 5811570
Max. size of reached set after ref.:  4678935
Avg. size of reached set before ref.: 2335557.09
Avg. size of reached set after ref.:  2086786.09

Total time for CEGAR algorithm:     750.575s
Time for refinements:                40.350s
Average time for refinement:          1.834s
Max time for refinement:             18.189s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          1335
  Total lines:            2167
  Line coverage:          0.616
  Visited conditions:     6396
  Total conditions:       7756
  Condition coverage:     0.825

CPAchecker general statistics
-----------------------------
Number of program locations:     4535
Number of CFA edges:             8414
Number of relevant variables:    8
Number of functions:             3
Number of loops:                 1
Size of reached set:             4252544
  Size of final wait list        10793

Time for analysis setup:          4.464s
  Time for loading CPAs:          0.495s
  Time for loading parser:        0.505s
  Time for CFA construction:      3.386s
    Time for parsing file(s):     0.716s
    Time for AST to CFA:          1.086s
    Time for CFA sanity check:    0.204s
    Time for post-processing:     1.066s
      Time for var class.:        0.000s
Time for Analysis:              750.575s
CPU time for analysis:          892.190s
Total time for CPAchecker:      755.047s
Total CPU time for CPAchecker:  900.040s

Time for Garbage Collector:     137.387s (in 73 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5934MB (  5659 MiB) max;   3614MB (  3447 MiB) avg;   7169MB (  6837 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:        3500MB (  3338 MiB) max;   2269MB (  2164 MiB) avg;   3500MB (  3338 MiB) peak
Allocated heap memory:          7741MB (  7382 MiB) max;   5949MB (  5674 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
