scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_bitvector_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--dwc3--dwc3.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1304357865_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5633: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5680: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5451-5452: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5498: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

Skipping recursive function call from usb_phy_init to dwc3_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dwc3_core_soft_reset to usb_phy_init (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dwc3_resume to usb_phy_init (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_phy_init to dwc3_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

The void * pointer kmalloc_array::__retval__ to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 6281:	N714 -{dwc->scratchbuf = kmalloc_array(__CPAchecker_TMP_0, 4096UL, 208U);}-> N715) (CounterexampleCheck:PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

lines 5451-5452: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)-24189255811072L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9144: Ignoring function call through function pointer *(req->request.complete): (*(req->request.complete))(&(dep->endpoint), &(req->request)); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5633: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Infeasible counterexample found, but could not remove it from the ARG. Therefore, we cannot prove safety. (CounterexampleCheckAlgorithm.checkCounterexample, WARNING)

The void * pointer kmalloc_array::__retval__ to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 6281:	N714 -{dwc->scratchbuf = kmalloc_array(__CPAchecker_TMP_0, 4096UL, 208U);}-> N715) (CounterexampleCheck:PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

lines 5451-5452: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)-24189255811072L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9144: Ignoring function call through function pointer *(req->request.complete): (*(req->request.complete))(&(dep->endpoint), &(req->request)); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5633: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

The void * pointer kmalloc_array::__retval__ to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 6281:	N714 -{dwc->scratchbuf = kmalloc_array(__CPAchecker_TMP_0, 4096UL, 208U);}-> N715) (CounterexampleCheck:PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

lines 5451-5452: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)-24189255811072L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9144: Ignoring function call through function pointer *(req->request.complete): (*(req->request.complete))(&(dep->endpoint), &(req->request)); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5633: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

The void * pointer kmalloc_array::__retval__ to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 6281:	N714 -{dwc->scratchbuf = kmalloc_array(__CPAchecker_TMP_0, 4096UL, 208U);}-> N715) (CounterexampleCheck:PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

lines 5451-5452: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)-24189255811072L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9144: Ignoring function call through function pointer *(req->request.complete): (*(req->request.complete))(&(dep->endpoint), &(req->request)); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5633: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

The void * pointer kmalloc_array::__retval__ to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 6281:	N714 -{dwc->scratchbuf = kmalloc_array(__CPAchecker_TMP_0, 4096UL, 208U);}-> N715) (CounterexampleCheck:PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

lines 5451-5452: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)-24189255811072L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9144: Ignoring function call through function pointer *(req->request.complete): (*(req->request.complete))(&(dep->endpoint), &(req->request)); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5633: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

The void * pointer kmalloc_array::__retval__ to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 6281:	N714 -{dwc->scratchbuf = kmalloc_array(__CPAchecker_TMP_0, 4096UL, 208U);}-> N715) (CounterexampleCheck:PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

lines 5451-5452: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)-24189255811072L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9144: Ignoring function call through function pointer *(req->request.complete): (*(req->request.complete))(&(dep->endpoint), &(req->request)); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5633: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

The void * pointer kmalloc_array::__retval__ to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 6281:	N714 -{dwc->scratchbuf = kmalloc_array(__CPAchecker_TMP_0, 4096UL, 208U);}-> N715) (CounterexampleCheck:PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

lines 5451-5452: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)-24189255811072L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9144: Ignoring function call through function pointer *(req->request.complete): (*(req->request.complete))(&(dep->endpoint), &(req->request)); (CounterexampleCheck:PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               26717294 (count: 2456082, min: 0, max: 15, avg: 10.88)
Number of global variables:                        14736477 (count: 2456082, min: 0, max: 6, avg: 6.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 3578924
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               25.248s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 93.460s
  Time for transition matches:                        38.035s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      5065935 (count: 5065935, min: 1, max: 1, avg: 1.00) [1 x 5065935]

CPA algorithm statistics
------------------------
Number of iterations:            3371273
Max size of waitlist:            545
Average size of waitlist:        264
Number of computed successors:   3578924
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         206621
Number of times breaked:         84

Total time for CPA algorithm:       757.959s (Max:   314.333s)
  Time for choose from waitlist:     13.582s
  Time for precision adjustment:     55.475s
  Time for transfer relation:       190.990s
  Time for stop operator:           410.383s
  Time for adding to reached set:    17.692s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             84
Total number of targets found:           84
Time for completing refinement:           9.750s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                84
Number of successful refinements:     77
Number of failed refinements:         0
Max. size of reached set before ref.: 1493017
Max. size of reached set after ref.:  1491955
Avg. size of reached set before ref.: 781267.08
Avg. size of reached set after ref.:  733645.04

Total time for CEGAR algorithm:     771.062s
Time for refinements:                12.367s
Average time for refinement:          0.147s
Max time for refinement:              0.887s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    7
Number of infeasible paths:         7 (100%)
Time for counterexample checks:        65.894s

Code Coverage
-----------------------------
  Function coverage:      0.760
  Visited lines:          9574
  Total lines:            11813
  Line coverage:          0.810
  Visited conditions:     1318
  Total conditions:       1940
  Condition coverage:     0.679

CPAchecker general statistics
-----------------------------
Number of program locations:     5299
Number of CFA edges:             7663
Number of relevant variables:    1786
Number of functions:             262
Number of loops:                 29
Size of reached set:             2456082
  Size of final wait list        482

Time for analysis setup:          7.358s
  Time for loading CPAs:          0.739s
  Time for loading parser:        0.557s
  Time for CFA construction:      5.918s
    Time for parsing file(s):     1.584s
    Time for AST to CFA:          1.852s
    Time for CFA sanity check:    0.790s
    Time for post-processing:     1.473s
      Time for var class.:        0.000s
Time for Analysis:              839.527s
CPU time for analysis:          886.510s
Total time for CPAchecker:      846.894s
Total CPU time for CPAchecker:  900.200s

Time for Garbage Collector:      26.951s (in 32 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4926MB (  4698 MiB) max;   2434MB (  2321 MiB) avg;   5169MB (  4930 MiB) peak
Used non-heap memory:             29MB (    28 MiB) max;     27MB (    25 MiB) avg;     29MB (    28 MiB) peak
Used in PS Old Gen pool:        1708MB (  1629 MiB) max;    815MB (   778 MiB) avg;   1708MB (  1629 MiB) peak
Allocated heap memory:          5722MB (  5457 MiB) max;   4811MB (  4588 MiB) avg
Allocated non-heap memory:        49MB (    46 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:  14675MB ( 13995 MiB) max;  13657MB ( 13024 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
