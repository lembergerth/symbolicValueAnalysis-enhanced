scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem12_label52_false-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_2051141438_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               52727063 (count: 7520673, min: 0, max: 8, avg: 7.01)
Number of global variables:                        37603355 (count: 7520673, min: 0, max: 5, avg: 5.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                10079535
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               21.045s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 51.089s
  Time for transition matches:                        20.360s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                     10266970 (count: 10270118, min: 0, max: 1, avg: 1.00) [0 x 3148, 1 x 10266970]

CPA algorithm statistics
------------------------
Number of iterations:            9519068
Max size of waitlist:            16889
Average size of waitlist:        7057
Number of computed successors:   10079535
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         538132
Number of times breaked:         7

Total time for CPA algorithm:       669.483s (Max:   590.196s)
  Time for choose from waitlist:      9.927s
  Time for precision adjustment:     64.486s
  Time for transfer relation:       150.567s
  Time for stop operator:           362.077s
  Time for adding to reached set:    27.707s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:              7
Total number of targets found:            7
Time for completing refinement:           9.284s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 1563832
Max. size of reached set after ref.:  351531
Avg. size of reached set before ref.: 338897.57
Avg. size of reached set after ref.:  50221.71

Total time for CEGAR algorithm:     679.009s
Time for refinements:                 9.446s
Average time for refinement:          1.349s
Max time for refinement:              3.616s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          3928
  Total lines:            3979
  Line coverage:          0.987
  Visited conditions:     13178
  Total conditions:       13318
  Condition coverage:     0.989

CPAchecker general statistics
-----------------------------
Number of program locations:     7552
Number of CFA edges:             14214
Number of relevant variables:    10
Number of functions:             5
Number of loops:                 1
Size of reached set:             7520673
  Size of final wait list        16888

Time for analysis setup:          6.124s
  Time for loading CPAs:          0.547s
  Time for loading parser:        0.714s
  Time for CFA construction:      4.768s
    Time for parsing file(s):     0.949s
    Time for AST to CFA:          1.296s
    Time for CFA sanity check:    0.503s
    Time for post-processing:     1.809s
      Time for var class.:        0.000s
Time for Analysis:              679.010s
CPU time for analysis:          895.210s
Total time for CPAchecker:      685.140s
Total CPU time for CPAchecker:  906.420s

Time for Garbage Collector:     213.691s (in 60 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               7018MB (  6693 MiB) max;   3742MB (  3569 MiB) avg;   8956MB (  8541 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     24MB (    22 MiB) peak
Used in PS Old Gen pool:        5251MB (  5008 MiB) max;   2397MB (  2286 MiB) avg;   5251MB (  5008 MiB) peak
Allocated heap memory:          9582MB (  9139 MiB) max;   6087MB (  5805 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
