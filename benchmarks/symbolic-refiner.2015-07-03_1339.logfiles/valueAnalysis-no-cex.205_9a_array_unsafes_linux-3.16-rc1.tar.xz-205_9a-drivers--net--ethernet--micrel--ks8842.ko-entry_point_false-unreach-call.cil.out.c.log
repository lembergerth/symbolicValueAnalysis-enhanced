scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -setprop analysis.checkCounterexamples=false -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ethernet--micrel--ks8842.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-764708031_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6534-6535: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6627-6628: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6581: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6420: Function pointer *(chan->device->device_prep_slave_sg) with type struct dma_async_tx_descriptor * (*)(struct dma_chan *, struct scatterlist *, unsigned int, enum dma_transfer_direction , unsigned long, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8999: Function pointer *(rx_ctl->chan->device->device_control) with type int (*)(struct dma_chan *, enum dma_ctrl_cmd , unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8990: Function pointer *(tx_ctl->chan->device->device_control) with type int (*)(struct dma_chan *, enum dma_ctrl_cmd , unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker
 counterexample.checker.config 
 (CPAchecker.printConfigurationWarnings, WARNING)

Skipping recursive function call from dma_mapping_error to ks8842_xmit_frame (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __ks8842_start_new_rx_dma to ks8842_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ks8842_tx_frame_dma to ks8842_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                6176484 (count: 745097, min: 0, max: 11, avg: 8.29)
Number of global variables:                         5435039 (count: 745097, min: 0, max: 8, avg: 7.29)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 2808958
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               14.683s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 75.674s
  Time for transition matches:                        30.069s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      3589506 (count: 3589506, min: 1, max: 1, avg: 1.00) [1 x 3589506]

CPA algorithm statistics
------------------------
Number of iterations:            2566967
Max size of waitlist:            171
Average size of waitlist:        72
Number of computed successors:   2808958
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         241933
Number of times breaked:         73

Total time for CPA algorithm:       257.549s (Max:    79.009s)
  Time for choose from waitlist:     11.704s
  Time for precision adjustment:     42.388s
  Time for transfer relation:       115.812s
  Time for stop operator:            14.136s
  Time for adding to reached set:    13.045s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             73
Total number of targets found:           73
Time for completing refinement:           9.698s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                73
Number of successful refinements:     72
Number of failed refinements:         0
Max. size of reached set before ref.: 745097
Max. size of reached set after ref.:  305482
Avg. size of reached set before ref.: 250192.37
Avg. size of reached set after ref.:  218014.13

Total time for CEGAR algorithm:     280.161s
Time for refinements:                13.673s
Average time for refinement:          0.187s
Max time for refinement:              1.722s

Code Coverage
-----------------------------
  Function coverage:      0.703
  Visited lines:          6942
  Total lines:            7457
  Line coverage:          0.931
  Visited conditions:     364
  Total conditions:       484
  Condition coverage:     0.752

CPAchecker general statistics
-----------------------------
Number of program locations:     1782
Number of CFA edges:             2518
Number of relevant variables:    610
Number of functions:             148
Number of loops:                 13
Size of reached set:             745097
  Number of reached locations:   1299 (73%)
    Avg states per location:     573
    Max states per location:     20598 (at node N483)
  Number of reached functions:   104 (70%)
  Number of partitions:          662429
    Avg size of partitions:      1
    Max size of partitions:      57 (with key [N2325 (before line 10513), Function main called from node N2075, stack depth 1 [31adfcea], stack [main], Init])
  Number of target states:       1
  Size of final wait list        22

Time for analysis setup:          5.050s
  Time for loading CPAs:          0.800s
  Time for loading parser:        0.895s
  Time for CFA construction:      3.231s
    Time for parsing file(s):     1.255s
    Time for AST to CFA:          1.110s
    Time for CFA sanity check:    0.093s
    Time for post-processing:     0.557s
      Time for var class.:        0.000s
Time for Analysis:              280.169s
CPU time for analysis:          297.520s
Total time for CPAchecker:      285.229s
Total CPU time for CPAchecker:  306.240s

Time for Garbage Collector:       6.500s (in 11 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3492MB (  3330 MiB) max;   1572MB (  1500 MiB) avg;   4009MB (  3823 MiB) peak
Used non-heap memory:             25MB (    23 MiB) max;     24MB (    23 MiB) avg;     25MB (    24 MiB) peak
Used in PS Old Gen pool:         693MB (   661 MiB) max;    234MB (   223 MiB) avg;    693MB (   661 MiB) peak
Allocated heap memory:          4642MB (  4427 MiB) max;   3899MB (  3719 MiB) avg
Allocated non-heap memory:        26MB (    25 MiB) max;     26MB (    24 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 6876) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
