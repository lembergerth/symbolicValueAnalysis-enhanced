scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis -timelimit 900s -stats -spec ../svcomp15/eca-rers2012/ALL.prp ../svcomp15/eca-rers2012/Problem06_label25_true-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-2368910_tempdir
Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               148539681 (count: 6458249, min: 0, max: 23, avg: 23.00)
Number of global variables:                        148539681 (count: 6458249, min: 0, max: 23, avg: 23.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                12094277
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               65.163s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.000s
Replaced symbolic expressions: 0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 74.841s
  Time for transition matches:                        29.637s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.012s
Automaton transfers with branching:                0
Automaton transfer successors:                     12406106 (count: 12407957, min: 0, max: 1, avg: 1.00) [0 x 1851, 1 x 12406106]

CPA algorithm statistics
------------------------
Number of iterations:            10857653
Max size of waitlist:            4294
Average size of waitlist:        1637
Number of computed successors:   12094277
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         1227156
Number of times breaked:         25

Total time for CPA algorithm:       632.835s (Max:   407.008s)
  Time for choose from waitlist:     13.828s
  Time for precision adjustment:    107.693s
  Time for transfer relation:       229.608s
  Time for stop operator:            75.709s
  Time for adding to reached set:    56.023s

ValueAnalysisRefiner statistics
-------------------------------
Total number of refinements:             25
Total number of targets found:           25
Time for completing refinement:          42.325s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of infeasible sliced prefixes:                   0 (count: 0, min: 0, max: 0, avg: 0.00)
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
Total number of root relocations:         0
Total number of similar, repeated refinements:         0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 3489454
Max. size of reached set after ref.:  14554
Avg. size of reached set before ref.: 176942.56
Avg. size of reached set after ref.:  587.64

Total time for CEGAR algorithm:     677.487s
Time for refinements:                44.638s
Average time for refinement:          1.785s
Max time for refinement:             22.789s

Counterexample-Check Algorithm statistics
-----------------------------------------
Number of counterexample checks:    0

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          7069
  Total lines:            9151
  Line coverage:          0.772
  Visited conditions:     29664
  Total conditions:       31852
  Condition coverage:     0.931

CPAchecker general statistics
-----------------------------
Number of program locations:     17295
Number of CFA edges:             33225
Number of relevant variables:    36
Number of functions:             6
Number of loops:                 1
Size of reached set:             6458249
  Size of final wait list        4291

Time for analysis setup:          6.926s
  Time for loading CPAs:          0.598s
  Time for loading parser:        0.559s
  Time for CFA construction:      5.682s
    Time for parsing file(s):     1.313s
    Time for AST to CFA:          1.796s
    Time for CFA sanity check:    0.313s
    Time for post-processing:     2.040s
      Time for var class.:        0.000s
Time for Analysis:              677.487s
CPU time for analysis:          890.190s
Total time for CPAchecker:      684.418s
Total CPU time for CPAchecker:  902.770s

Time for Garbage Collector:     209.455s (in 65 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6107MB (  5824 MiB) max;   3327MB (  3172 MiB) avg;   8514MB (  8120 MiB) peak
Used non-heap memory:             24MB (    23 MiB) max;     22MB (    21 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:        4148MB (  3956 MiB) max;   2009MB (  1916 MiB) avg;   4148MB (  3956 MiB) peak
Allocated heap memory:          9078MB (  8658 MiB) max;   6152MB (  5867 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  13579MB ( 12950 MiB) max;  13579MB ( 12950 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
