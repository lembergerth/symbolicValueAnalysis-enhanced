scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=CONSTRAINTS_FIRST -setprop cpa.constraints.lessOrEqualType=SUBSET -setprop cegar.refiner=cpa.value.symbolic.refiner.delegation.SymbolicDelegatingRefiner -setprop cpa.value.refinement.pathSlicing=true -setprop cpa.value.refinement.prefixPreference=DOMAIN_GOOD_SHORT -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--char--ipmi--ipmi_msghandler.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_703345899_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5409: Function pointer *(w->new_smi) with type void (*)(int, struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11138: Function pointer *(intf->handlers->sender) with type void (*)(void *, struct ipmi_smi_msg *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9894: Function pointer *(handlers->sender) with type void (*)(void *, struct ipmi_smi_msg *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7617: Function pointer *(handlers->sender) with type void (*)(void *, struct ipmi_smi_msg *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6039: Function pointer *(intf->handlers->inc_usecount) with type int (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5307: Function pointer *(watcher->new_smi) with type void (*)(int, struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9712: Function pointer *(w->smi_gone) with type void (*)(int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6478: Function pointer *(intf->handlers->set_maintenance_mode) with type void (*)(void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12027: Function pointer *(intf->handlers->set_run_to_completion) with type void (*)(void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11752: Function pointer *(intf->handlers->set_run_to_completion) with type void (*)(void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Skipping recursive function call from ipmi_free_smi_msg to intf_free (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_request_event to intf_free (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_request_event to ipmi_timeout (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from send_channel_info_cmd to i_ipmi_request (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from deliver_response to ipmi_free_recv_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_bmc_rsp to ipmi_free_recv_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_read_event_rsp to ipmi_free_recv_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_new_recv_msgs to intf_free (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_new_recv_msgs to ipmi_timeout (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_new_recv_msgs to smi_recv_tasklet (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_new_recv_msgs to ipmi_free_smi_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from check_msg_timeout to ipmi_free_smi_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_request_event to smi_recv_tasklet (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from free_recv_msg_list to ipmi_free_recv_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from clean_up_interface_data to ipmi_free_recv_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_free_smi_msg to ipmi_timeout (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_free_smi_msg to smi_recv_tasklet (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from free_smi_msg_list to ipmi_free_smi_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_free_recv_msg to intf_free (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_free_recv_msg to ipmi_timeout (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_free_recv_msg to smi_recv_tasklet (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_bmc_rsp to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_read_event_rsp to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_oem_get_msg_cmd to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_lan_get_msg_cmd to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_lan_get_msg_rsp to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_ipmb_get_msg_cmd to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_ipmb_get_msg_rsp to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_one_recv_msg to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from deliver_err_response to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from i_ipmi_request to ipmi_free_smi_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from i_ipmi_request to ipmi_free_recv_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from smi_recv_tasklet to handle_new_recv_msgs (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               35517277 (count: 3228860, min: 0, max: 12, avg: 11.00)
Number of global variables:                        35517236 (count: 3228860, min: 0, max: 11, avg: 11.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 3680195
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               51.626s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     7.050s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 1
Constraints after refinement in state: 0
Constraints before refinement in state: 48
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 8616ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 47.191s
  Time for transition matches:                         9.720s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      5341434 (count: 5341434, min: 1, max: 1, avg: 1.00) [1 x 5341434]

CPA algorithm statistics
------------------------
Number of iterations:            3240744
Max size of waitlist:            77
Average size of waitlist:        48
Number of computed successors:   3680195
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         439380
Number of times breaked:         11

Total time for CPA algorithm:       228.370s (Max:   224.881s)
  Time for choose from waitlist:      3.431s
  Time for precision adjustment:     77.032s
  Time for transfer relation:       108.917s
  Time for stop operator:             8.234s
  Time for adding to reached set:     8.095s

SymbolicDelegatingRefiner statistics
------------------------------------
Explicit refinements: 11
Successful explicit refinements: 11
Symbolic refinements: 0
Successful symbolic refinements: 0
Overall explicit refinement time: 1952ms
Average explicit refinement time: 177ms
Overall symbolic refinement time: 0ms
Average symbolic refinement time: 0ms

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 9030
Max. size of reached set after ref.:  169
Avg. size of reached set before ref.: 1107.18
Avg. size of reached set after ref.:  20.27

Total time for CEGAR algorithm:     230.323s
Time for refinements:                 1.952s
Average time for refinement:          0.177s
Max time for refinement:              0.382s

Code Coverage
-----------------------------
  Function coverage:      0.373
  Visited lines:          5796
  Total lines:            8099
  Line coverage:          0.716
  Visited conditions:     746
  Total conditions:       1380
  Condition coverage:     0.541

CPAchecker general statistics
-----------------------------
Number of program locations:     4158
Number of CFA edges:             5899
Number of relevant variables:    1177
Number of functions:             271
Number of loops:                 49
Size of reached set:             3228860

Time for analysis setup:          5.184s
  Time for loading CPAs:          0.522s
  Time for loading parser:        0.650s
  Time for CFA construction:      3.926s
    Time for parsing file(s):     1.086s
    Time for AST to CFA:          1.463s
    Time for CFA sanity check:    0.147s
    Time for post-processing:     0.993s
      Time for var class.:        0.000s
Time for Analysis:              230.323s
CPU time for analysis:          321.560s
Total time for CPAchecker:      235.512s
Total CPU time for CPAchecker:  331.070s

Time for Garbage Collector:      85.196s (in 23 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5026MB (  4793 MiB) max;   2587MB (  2467 MiB) avg;   7220MB (  6885 MiB) peak
Used non-heap memory:             24MB (    23 MiB) max;     22MB (    21 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:        3760MB (  3585 MiB) max;   1464MB (  1396 MiB) avg;   3760MB (  3585 MiB) peak
Allocated heap memory:          7097MB (  6768 MiB) max;   4814MB (  4591 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:  13597MB ( 12967 MiB) max;  13596MB ( 12966 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
