scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=CONSTRAINTS_FIRST -setprop cpa.constraints.lessOrEqualType=SUBSET -setprop cegar.refiner=cpa.value.symbolic.refiner.delegation.SymbolicDelegatingRefiner -setprop cpa.value.refinement.pathSlicing=true -setprop cpa.value.refinement.prefixPreference=DOMAIN_GOOD_SHORT -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.4-simple/ALL.prp ../svcomp15/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--mtd--inftl.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-971103795_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 2562: Ignoring call via function pointer mtd_read_oob::__cil_tmp15 for which no suitable target was found in line: tmp___8 = (*__cil_tmp15)(mtd, from, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from inftl_readblock to inftl_read_oob (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from INFTL_deleteblock to inftl_read_oob (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2644: Ignoring call via function pointer mtd_write_oob::__cil_tmp19 for which no suitable target was found in line: tmp___8 = (*__cil_tmp19)(mtd, to, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from mtd_write_oob to inftl_writeblock (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from check_free_sectors to inftl_read_oob (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from INFTL_trydeletechain to inftl_read_oob (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from INFTL_findwriteunit to inftl_read_oob (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from INFTL_foldchain to inftl_read_oob (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from mtd_read_oob to inftl_readblock (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from INFTL_deleteblock to inftl_write_oob (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from INFTL_trydeletechain to INFTL_formatblock (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from INFTL_foldchain to INFTL_formatblock (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from inftl_write to mtd_write_oob (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from INFTL_findwriteunit to inftl_write_oob (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from mtd_read_oob to inftl_writeblock (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from mtd_write_oob to inftl_readblock (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                  38767 (count: 19386, min: 0, max: 2, avg: 2.00)
Number of global variables:                           19384 (count: 19386, min: 0, max: 1, avg: 1.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                   44907
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.578s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.615s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 1
Constraints after refinement in state: 0
Constraints before refinement in state: 2
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 89ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.039s
  Time for transition matches:                         0.426s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       166617 (count: 166617, min: 1, max: 1, avg: 1.00) [1 x 166617]

CPA algorithm statistics
------------------------
Number of iterations:            38763
Max size of waitlist:            50
Average size of waitlist:        29
Number of computed successors:   44907
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         6144
Number of times breaked:         1

Total time for CPA algorithm:         7.495s (Max:     4.229s)
  Time for choose from waitlist:      0.116s
  Time for precision adjustment:      1.275s
  Time for transfer relation:         5.056s
  Time for stop operator:             0.223s
  Time for adding to reached set:     0.228s

SymbolicDelegatingRefiner statistics
------------------------------------
Explicit refinements: 1
Successful explicit refinements: 1
Symbolic refinements: 0
Successful symbolic refinements: 0
Overall explicit refinement time: 664ms
Average explicit refinement time: 664ms
Overall symbolic refinement time: 0ms
Average symbolic refinement time: 0ms

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 19380
Max. size of reached set after ref.:  2
Avg. size of reached set before ref.: 19380.00
Avg. size of reached set after ref.:  2.00

Total time for CEGAR algorithm:       8.160s
Time for refinements:                 0.664s
Average time for refinement:          0.664s
Max time for refinement:              0.664s

Code Coverage
-----------------------------
  Function coverage:      0.795
  Visited lines:          12021
  Total lines:            12068
  Line coverage:          0.996
  Visited conditions:     501
  Total conditions:       522
  Condition coverage:     0.960

CPAchecker general statistics
-----------------------------
Number of program locations:     1626
Number of CFA edges:             2080
Number of relevant variables:    2514
Number of functions:             44
Number of loops:                 38
Size of reached set:             19386
  Number of reached locations:   1552 (95%)
    Avg states per location:     12
    Max states per location:     395 (at node N3651)
  Number of reached functions:   35 (80%)
  Number of partitions:          19384
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3557 (before line 8458), Function main called from node N3475, stack depth 1 [14ce1472], stack [main], Init])
  Number of target states:       0

Time for analysis setup:          4.733s
  Time for loading CPAs:          0.571s
  Time for loading parser:        0.620s
  Time for CFA construction:      3.454s
    Time for parsing file(s):     1.165s
    Time for AST to CFA:          0.952s
    Time for CFA sanity check:    0.161s
    Time for post-processing:     0.988s
      Time for var class.:        0.000s
Time for Analysis:                8.160s
CPU time for analysis:           13.980s
Total time for CPAchecker:       12.898s
Total CPU time for CPAchecker:   22.500s

Time for Garbage Collector:       0.117s (in 1 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                529MB (   504 MiB) max;    240MB (   229 MiB) avg;    582MB (   555 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     19MB (    18 MiB) avg;     23MB (    22 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        26MB (    24 MiB) max;     25MB (    23 MiB) avg
Total process virtual memory:  13597MB ( 12967 MiB) max;  13590MB ( 12961 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
