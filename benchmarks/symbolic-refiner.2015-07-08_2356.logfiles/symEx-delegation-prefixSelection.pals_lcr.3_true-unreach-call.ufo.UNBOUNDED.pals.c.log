scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=CONSTRAINTS_FIRST -setprop cpa.constraints.lessOrEqualType=SUBSET -setprop cegar.refiner=cpa.value.symbolic.refiner.delegation.SymbolicDelegatingRefiner -setprop cpa.value.refinement.pathSlicing=true -setprop cpa.value.refinement.prefixPreference=DOMAIN_GOOD_SHORT -timelimit 900s -stats -spec ../svcomp15/seq-mthreaded/ALL.prp ../svcomp15/seq-mthreaded/pals_lcr.3_true-unreach-call.ufo.UNBOUNDED.pals.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1760302200_tempdir
The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                  48431 (count: 2128, min: 0, max: 24, avg: 22.76)
Number of global variables:                           42520 (count: 2128, min: 0, max: 20, avg: 19.98)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                   58941
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.499s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     5.279s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 10
Most constraints before refinement in state: 11
Constraints after refinement in state: 108067
Constraints before refinement in state: 116183
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 352ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.452s
Automaton transfers with branching:                0
Automaton transfer successors:                        88827 (count: 88827, min: 1, max: 1, avg: 1.00) [1 x 88827]

CPA algorithm statistics
------------------------
Number of iterations:            56525
Max size of waitlist:            57
Average size of waitlist:        16
Number of computed successors:   58941
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         1357
Number of times breaked:         59

Total time for CPA algorithm:        25.702s (Max:     1.109s)
  Time for choose from waitlist:      0.108s
  Time for precision adjustment:      1.308s
  Time for transfer relation:        23.088s
  Time for stop operator:             0.421s
  Time for adding to reached set:     0.270s

SymbolicDelegatingRefiner statistics
------------------------------------
Explicit refinements: 59
Successful explicit refinements: 20
Symbolic refinements: 39
Successful symbolic refinements: 38
Overall explicit refinement time: 828ms
Average explicit refinement time: 14ms
Overall symbolic refinement time: 856948ms
Average symbolic refinement time: 21423ms

CEGAR algorithm statistics
--------------------------
Number of refinements:                59
Number of successful refinements:     58
Number of failed refinements:         0
Max. size of reached set before ref.: 2542
Max. size of reached set after ref.:  186
Avg. size of reached set before ref.: 1004.81
Avg. size of reached set after ref.:  29.29

Total time for CEGAR algorithm:     883.358s
Time for refinements:               857.651s
Average time for refinement:         14.536s
Max time for refinement:             97.121s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          167
  Total lines:            168
  Line coverage:          0.994
  Visited conditions:     78
  Total conditions:       82
  Condition coverage:     0.951

CPAchecker general statistics
-----------------------------
Number of program locations:     166
Number of CFA edges:             214
Number of relevant variables:    34
Number of functions:             8
Number of loops:                 2
Size of reached set:             2128
  Number of reached locations:   162 (98%)
    Avg states per location:     13
    Max states per location:     59 (at node N57)
  Number of reached functions:   8 (100%)
  Number of partitions:          1603
    Avg size of partitions:      1
    Max size of partitions:      54 (with key [N215 (before line 305), Function main called from node N183, stack depth 1 [3878f444], stack [main], Init])
  Number of target states:       1
  Size of final wait list        40

Time for analysis setup:          1.587s
  Time for loading CPAs:          0.338s
  Time for loading parser:        0.538s
  Time for CFA construction:      0.626s
    Time for parsing file(s):     0.316s
    Time for AST to CFA:          0.150s
    Time for CFA sanity check:    0.020s
    Time for post-processing:     0.106s
      Time for var class.:        0.000s
Time for Analysis:              883.358s
CPU time for analysis:          897.460s
Total time for CPAchecker:      884.950s
Total CPU time for CPAchecker:  900.040s

Time for Garbage Collector:       2.951s (in 47 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                549MB (   524 MiB) max;    223MB (   213 MiB) avg;    613MB (   585 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     23MB (    22 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:          64MB (    61 MiB) max;     32MB (    31 MiB) avg;     64MB (    61 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   1783MB (  1700 MiB) avg
Allocated non-heap memory:        26MB (    25 MiB) max;     26MB (    24 MiB) avg
Total process virtual memory:  13626MB ( 12994 MiB) max;  13604MB ( 12973 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
