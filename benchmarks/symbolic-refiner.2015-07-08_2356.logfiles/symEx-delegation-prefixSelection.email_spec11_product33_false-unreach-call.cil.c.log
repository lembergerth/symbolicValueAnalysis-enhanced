scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=CONSTRAINTS_FIRST -setprop cpa.constraints.lessOrEqualType=SUBSET -setprop cegar.refiner=cpa.value.symbolic.refiner.delegation.SymbolicDelegatingRefiner -setprop cpa.value.refinement.pathSlicing=true -setprop cpa.value.refinement.prefixPreference=DOMAIN_GOOD_SHORT -timelimit 900s -stats -spec ../svcomp15/product-lines/ALL.prp ../svcomp15/product-lines/email_spec11_product33_false-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_347682548_tempdir
line 2201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               20535789 (count: 2271690, min: 0, max: 12, avg: 9.04)
Number of global variables:                        18173504 (count: 2271690, min: 0, max: 8, avg: 8.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 2887466
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               11.549s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     6.406s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 1
Constraints after refinement in state: 0
Constraints before refinement in state: 38056
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 4940ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 18.880s
  Time for transition matches:                         7.623s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      4112671 (count: 4112671, min: 1, max: 1, avg: 1.00) [1 x 4112671]

CPA algorithm statistics
------------------------
Number of iterations:            2271730
Max size of waitlist:            18731
Average size of waitlist:        9288
Number of computed successors:   2887466
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         596797
Number of times breaked:         22

Total time for CPA algorithm:       771.588s (Max:   766.426s)
  Time for choose from waitlist:      2.681s
  Time for precision adjustment:     30.086s
  Time for transfer relation:       167.315s
  Time for stop operator:           546.888s
  Time for adding to reached set:     7.678s

SymbolicDelegatingRefiner statistics
------------------------------------
Explicit refinements: 22
Successful explicit refinements: 22
Symbolic refinements: 0
Successful symbolic refinements: 0
Overall explicit refinement time: 3437ms
Average explicit refinement time: 156ms
Overall symbolic refinement time: 0ms
Average symbolic refinement time: 0ms

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 1727
Max. size of reached set after ref.:  1416
Avg. size of reached set before ref.: 1397.55
Avg. size of reached set after ref.:  534.82

Total time for CEGAR algorithm:     775.063s
Time for refinements:                 3.437s
Average time for refinement:          0.156s
Max time for refinement:              0.552s

Code Coverage
-----------------------------
  Function coverage:      0.287
  Visited lines:          630
  Total lines:            1679
  Line coverage:          0.375
  Visited conditions:     157
  Total conditions:       498
  Condition coverage:     0.315

CPAchecker general statistics
-----------------------------
Number of program locations:     1197
Number of CFA edges:             1597
Number of relevant variables:    415
Number of functions:             115
Number of loops:                 4
Size of reached set:             2271690
  Size of final wait list        18725

Time for analysis setup:          2.660s
  Time for loading CPAs:          0.460s
  Time for loading parser:        0.537s
  Time for CFA construction:      1.573s
    Time for parsing file(s):     0.515s
    Time for AST to CFA:          0.478s
    Time for CFA sanity check:    0.080s
    Time for post-processing:     0.357s
      Time for var class.:        0.000s
Time for Analysis:              775.063s
CPU time for analysis:          895.590s
Total time for CPAchecker:      777.728s
Total CPU time for CPAchecker:  900.170s

Time for Garbage Collector:     112.110s (in 67 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5601MB (  5342 MiB) max;   3074MB (  2932 MiB) avg;   6322MB (  6029 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     24MB (    22 MiB) peak
Used in PS Old Gen pool:        2811MB (  2681 MiB) max;   1627MB (  1552 MiB) avg;   2811MB (  2681 MiB) peak
Allocated heap memory:          6976MB (  6653 MiB) max;   5269MB (  5025 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  13599MB ( 12969 MiB) max;  13599MB ( 12969 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
