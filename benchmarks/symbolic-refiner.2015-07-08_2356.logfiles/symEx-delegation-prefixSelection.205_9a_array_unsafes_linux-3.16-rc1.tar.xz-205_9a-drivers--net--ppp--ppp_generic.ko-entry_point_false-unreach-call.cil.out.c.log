scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=CONSTRAINTS_FIRST -setprop cpa.constraints.lessOrEqualType=SUBSET -setprop cegar.refiner=cpa.value.symbolic.refiner.delegation.SymbolicDelegatingRefiner -setprop cpa.value.refinement.pathSlicing=true -setprop cpa.value.refinement.prefixPreference=DOMAIN_GOOD_SHORT -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--ppp--ppp_generic.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1650019767_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 11053-11054: Function pointer *(ppp->xcomp->compress) with type int (*)(void *, unsigned char *, unsigned char *, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8870: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 13457-13458: Function pointer *(ppp->xcomp->comp_init) with type int (*)(void *, unsigned char *, int, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 13437-13438: Function pointer *(ppp->rcomp->decomp_init) with type int (*)(void *, unsigned char *, int, int, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12430: Function pointer *(ppp->rcomp->incomp) with type void (*)(void *, unsigned char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 12398-12399: Function pointer *(ppp->rcomp->decompress) with type int (*)(void *, unsigned char *, int, unsigned char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9891: Function pointer *(chan->ops->ioctl) with type int (*)(struct ppp_channel *, unsigned int, unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13316: Function pointer *(cp->decomp_alloc) with type void * (*)(unsigned char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13282: Function pointer *(cp->comp_alloc) with type void * (*)(unsigned char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Skipping recursive function call from ppp_ccp_closed to ppp_output_wakeup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ppp_disconnect_channel to ppp_destroy_interface (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ppp_mp_explode to ppp_start_xmit (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ppp_push to ppp_start_xmit (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ppp_send_frame to ppp_start_xmit (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ppp_ccp_peek to ppp_output_wakeup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ppp_ccp_closed to ppp_unregister_channel (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ppp_start_xmit to ppp_xmit_process (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ppp_release to ppp_destroy_interface (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ppp_ccp_peek to ppp_unregister_channel (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ppp_destroy_interface to ppp_ccp_closed (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ppp_unregister_channel to ppp_disconnect_channel (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ppp_channel_push to ppp_release (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ppp_mp_explode to ppp_release (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ppp_push to ppp_release (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ppp_send_frame to ppp_release (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ppp_output_wakeup to ppp_channel_push (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ppp_channel_push to ppp_xmit_process (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                5303938 (count: 5304043, min: 0, max: 2, avg: 1.00)
Number of global variables:                         5303918 (count: 5304043, min: 0, max: 1, avg: 1.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 6243588
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               10.881s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:    12.778s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 1
Constraints after refinement in state: 0
Constraints before refinement in state: 2
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 8184ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 37.719s
  Time for transition matches:                        15.191s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      8525882 (count: 8525882, min: 1, max: 1, avg: 1.00) [1 x 8525882]

CPA algorithm statistics
------------------------
Number of iterations:            5589510
Max size of waitlist:            22366
Average size of waitlist:        10590
Number of computed successors:   6243588
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         631716
Number of times breaked:         2

Total time for CPA algorithm:       780.635s (Max:   763.654s)
  Time for choose from waitlist:      5.748s
  Time for precision adjustment:     47.385s
  Time for transfer relation:       244.795s
  Time for stop operator:           421.966s
  Time for adding to reached set:    28.094s

SymbolicDelegatingRefiner statistics
------------------------------------
Explicit refinements: 2
Successful explicit refinements: 2
Symbolic refinements: 0
Successful symbolic refinements: 0
Overall explicit refinement time: 3172ms
Average explicit refinement time: 1586ms
Overall symbolic refinement time: 0ms
Average symbolic refinement time: 0ms

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 307913
Max. size of reached set after ref.:  307867
Avg. size of reached set before ref.: 307911.00
Avg. size of reached set after ref.:  153996.00

Total time for CEGAR algorithm:     783.958s
Time for refinements:                 3.172s
Average time for refinement:          1.586s
Max time for refinement:              2.881s

Code Coverage
-----------------------------
  Function coverage:      0.406
  Visited lines:          8329
  Total lines:            10717
  Line coverage:          0.777
  Visited conditions:     456
  Total conditions:       1162
  Condition coverage:     0.392

CPAchecker general statistics
-----------------------------
Number of program locations:     3423
Number of CFA edges:             4845
Number of relevant variables:    999
Number of functions:             229
Number of loops:                 24
Size of reached set:             5304043
  Size of final wait list        22360

Time for analysis setup:          6.295s
  Time for loading CPAs:          0.545s
  Time for loading parser:        0.662s
  Time for CFA construction:      4.979s
    Time for parsing file(s):     1.446s
    Time for AST to CFA:          2.151s
    Time for CFA sanity check:    0.335s
    Time for post-processing:     0.823s
      Time for var class.:        0.000s
Time for Analysis:              783.959s
CPU time for analysis:         1070.020s
Total time for CPAchecker:      790.261s
Total CPU time for CPAchecker: 1081.880s

Time for Garbage Collector:     279.914s (in 83 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               8113MB (  7737 MiB) max;   4408MB (  4204 MiB) avg;   9282MB (  8852 MiB) peak
Used non-heap memory:             24MB (    23 MiB) max;     21MB (    20 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:        5809MB (  5540 MiB) max;   3058MB (  2916 MiB) avg;   5809MB (  5540 MiB) peak
Allocated heap memory:          9638MB (  9192 MiB) max;   6497MB (  6196 MiB) avg
Allocated non-heap memory:        47MB (    44 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  13597MB ( 12967 MiB) max;  13596MB ( 12967 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
