scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=CONSTRAINTS_FIRST -setprop cpa.constraints.lessOrEqualType=SUBSET -setprop cegar.refiner=cpa.value.symbolic.refiner.delegation.SymbolicDelegatingRefiner -setprop cpa.value.refinement.pathSlicing=true -setprop cpa.value.refinement.prefixPreference=DOMAIN_GOOD_SHORT -timelimit 900s -stats -spec ../svcomp15/seq-mthreaded/ALL.prp ../svcomp15/seq-mthreaded/pals_lcr-var-start-time.3_false-unreach-call.1.ufo.BOUNDED-6.pals.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1743855702_tempdir
The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 126603 (count: 4923, min: 0, max: 27, avg: 25.72)
Number of global variables:                          113183 (count: 4923, min: 0, max: 23, avg: 22.99)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  568147
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                4.115s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     7.958s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 9
Most constraints before refinement in state: 10
Constraints after refinement in state: 113592
Constraints before refinement in state: 174849
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 1650ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.971s
  Time for transition matches:                         1.267s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       878430 (count: 878430, min: 1, max: 1, avg: 1.00) [1 x 878430]

CPA algorithm statistics
------------------------
Number of iterations:            542041
Max size of waitlist:            1133
Average size of waitlist:        561
Number of computed successors:   568147
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         12175
Number of times breaked:         62

Total time for CPA algorithm:       174.434s (Max:    16.734s)
  Time for choose from waitlist:      0.580s
  Time for precision adjustment:      8.100s
  Time for transfer relation:       133.482s
  Time for stop operator:            27.991s
  Time for adding to reached set:     1.589s

SymbolicDelegatingRefiner statistics
------------------------------------
Explicit refinements: 62
Successful explicit refinements: 33
Symbolic refinements: 29
Successful symbolic refinements: 29
Overall explicit refinement time: 1184ms
Average explicit refinement time: 19ms
Overall symbolic refinement time: 706121ms
Average symbolic refinement time: 24349ms

CEGAR algorithm statistics
--------------------------
Number of refinements:                62
Number of successful refinements:     62
Number of failed refinements:         0
Max. size of reached set before ref.: 45233
Max. size of reached set after ref.:  2738
Avg. size of reached set before ref.: 9148.76
Avg. size of reached set after ref.:  260.85

Total time for CEGAR algorithm:     881.761s
Time for refinements:               707.306s
Average time for refinement:         11.408s
Max time for refinement:            123.724s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          180
  Total lines:            185
  Line coverage:          0.973
  Visited conditions:     106
  Total conditions:       112
  Condition coverage:     0.946

CPAchecker general statistics
-----------------------------
Number of program locations:     207
Number of CFA edges:             269
Number of relevant variables:    40
Number of functions:             8
Number of loops:                 2
Size of reached set:             4923
  Number of reached locations:   198 (96%)
    Avg states per location:     24
    Max states per location:     186 (at node N89)
  Number of reached functions:   8 (100%)
  Number of partitions:          3509
    Avg size of partitions:      1
    Max size of partitions:      167 (with key [N260 (before line 336), Function main called from node N225, stack depth 1 [5a5bb2c8], stack [main], Init])
  Number of target states:       0
  Size of final wait list        139

Time for analysis setup:          1.595s
  Time for loading CPAs:          0.344s
  Time for loading parser:        0.504s
  Time for CFA construction:      0.659s
    Time for parsing file(s):     0.304s
    Time for AST to CFA:          0.160s
    Time for CFA sanity check:    0.026s
    Time for post-processing:     0.116s
      Time for var class.:        0.000s
Time for Analysis:              881.761s
CPU time for analysis:          897.880s
Total time for CPAchecker:      883.360s
Total CPU time for CPAchecker:  900.420s

Time for Garbage Collector:       4.183s (in 34 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               1513MB (  1443 MiB) max;    722MB (   688 MiB) avg;   1898MB (  1810 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     23MB (    22 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:         474MB (   452 MiB) max;    216MB (   206 MiB) avg;    474MB (   452 MiB) peak
Allocated heap memory:          2810MB (  2680 MiB) max;   2363MB (  2254 MiB) avg
Allocated non-heap memory:        26MB (    25 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:  13611MB ( 12981 MiB) max;  13603MB ( 12973 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
