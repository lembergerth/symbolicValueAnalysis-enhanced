scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=CONSTRAINTS_FIRST -setprop cpa.constraints.lessOrEqualType=SUBSET -setprop cegar.refiner=cpa.value.symbolic.refiner.delegation.SymbolicDelegatingRefiner -setprop cpa.value.refinement.pathSlicing=true -setprop cpa.value.refinement.prefixPreference=DOMAIN_GOOD_SHORT -timelimit 900s -stats -spec ../svcomp15/seq-mthreaded/ALL.prp ../svcomp15/seq-mthreaded/pals_lcr.3_false-unreach-call.1.ufo.UNBOUNDED.pals.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1594681638_tempdir
The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                  38736 (count: 1703, min: 0, max: 24, avg: 22.75)
Number of global variables:                           34020 (count: 1703, min: 0, max: 20, avg: 19.98)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                   42827
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.367s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     5.027s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 10
Most constraints before refinement in state: 11
Constraints after refinement in state: 87254
Constraints before refinement in state: 93684
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 312ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.380s
Automaton transfers with branching:                0
Automaton transfer successors:                        64827 (count: 64827, min: 1, max: 1, avg: 1.00) [1 x 64827]

CPA algorithm statistics
------------------------
Number of iterations:            40788
Max size of waitlist:            41
Average size of waitlist:        13
Number of computed successors:   42827
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         1321
Number of times breaked:         56

Total time for CPA algorithm:        22.038s (Max:     1.328s)
  Time for choose from waitlist:      0.104s
  Time for precision adjustment:      1.094s
  Time for transfer relation:        19.855s
  Time for stop operator:             0.272s
  Time for adding to reached set:     0.253s

SymbolicDelegatingRefiner statistics
------------------------------------
Explicit refinements: 56
Successful explicit refinements: 20
Symbolic refinements: 36
Successful symbolic refinements: 35
Overall explicit refinement time: 849ms
Average explicit refinement time: 15ms
Overall symbolic refinement time: 861522ms
Average symbolic refinement time: 23284ms

CEGAR algorithm statistics
--------------------------
Number of refinements:                56
Number of successful refinements:     55
Number of failed refinements:         0
Max. size of reached set before ref.: 1827
Max. size of reached set after ref.:  186
Avg. size of reached set before ref.: 771.32
Avg. size of reached set after ref.:  30.67

Total time for CEGAR algorithm:     884.288s
Time for refinements:               862.246s
Average time for refinement:         15.397s
Max time for refinement:            105.573s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          168
  Total lines:            169
  Line coverage:          0.994
  Visited conditions:     78
  Total conditions:       82
  Condition coverage:     0.951

CPAchecker general statistics
-----------------------------
Number of program locations:     166
Number of CFA edges:             214
Number of relevant variables:    34
Number of functions:             8
Number of loops:                 2
Size of reached set:             1703
  Number of reached locations:   162 (98%)
    Avg states per location:     10
    Max states per location:     43 (at node N59)
  Number of reached functions:   8 (100%)
  Number of partitions:          1288
    Avg size of partitions:      1
    Max size of partitions:      43 (with key [N217 (before line 307), Function main called from node N185, stack depth 1 [3878f444], stack [main], Init])
  Number of target states:       1
  Size of final wait list        30

Time for analysis setup:          1.613s
  Time for loading CPAs:          0.356s
  Time for loading parser:        0.555s
  Time for CFA construction:      0.616s
    Time for parsing file(s):     0.293s
    Time for AST to CFA:          0.156s
    Time for CFA sanity check:    0.020s
    Time for post-processing:     0.109s
      Time for var class.:        0.000s
Time for Analysis:              884.288s
CPU time for analysis:          897.500s
Total time for CPAchecker:      885.905s
Total CPU time for CPAchecker:  900.070s

Time for Garbage Collector:       2.362s (in 43 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                549MB (   524 MiB) max;    214MB (   204 MiB) avg;    595MB (   567 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     23MB (    22 MiB) avg;     24MB (    22 MiB) peak
Used in PS Old Gen pool:          46MB (    43 MiB) max;     24MB (    23 MiB) avg;     46MB (    43 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   1788MB (  1706 MiB) avg
Allocated non-heap memory:        26MB (    25 MiB) max;     26MB (    24 MiB) avg
Total process virtual memory:  13618MB ( 12987 MiB) max;  13604MB ( 12974 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
