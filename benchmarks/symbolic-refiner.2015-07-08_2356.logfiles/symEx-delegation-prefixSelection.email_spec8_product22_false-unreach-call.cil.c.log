scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=CONSTRAINTS_FIRST -setprop cpa.constraints.lessOrEqualType=SUBSET -setprop cegar.refiner=cpa.value.symbolic.refiner.delegation.SymbolicDelegatingRefiner -setprop cpa.value.refinement.pathSlicing=true -setprop cpa.value.refinement.prefixPreference=DOMAIN_GOOD_SHORT -timelimit 900s -stats -spec ../svcomp15/product-lines/ALL.prp ../svcomp15/product-lines/email_spec8_product22_false-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-421822260_tempdir
line 1671: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               38320611 (count: 1653451, min: 0, max: 30, avg: 23.18)
Number of global variables:                         9920694 (count: 1653451, min: 0, max: 6, avg: 6.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 3467194
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               30.819s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:    13.463s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 1
Constraints after refinement in state: 0
Constraints before refinement in state: 145856
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 5923ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 20.428s
  Time for transition matches:                         8.441s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      4920606 (count: 4920606, min: 1, max: 1, avg: 1.00) [1 x 4920606]

CPA algorithm statistics
------------------------
Number of iterations:            3058739
Max size of waitlist:            5061
Average size of waitlist:        1879
Number of computed successors:   3467194
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         401040
Number of times breaked:         29

Total time for CPA algorithm:       811.902s (Max:   510.055s)
  Time for choose from waitlist:      3.259s
  Time for precision adjustment:     53.198s
  Time for transfer relation:       706.136s
  Time for stop operator:            21.428s
  Time for adding to reached set:     9.803s

SymbolicDelegatingRefiner statistics
------------------------------------
Explicit refinements: 29
Successful explicit refinements: 29
Symbolic refinements: 0
Successful symbolic refinements: 0
Overall explicit refinement time: 11018ms
Average explicit refinement time: 379ms
Overall symbolic refinement time: 0ms
Average symbolic refinement time: 0ms

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 1241928
Max. size of reached set after ref.:  97464
Avg. size of reached set before ref.: 88207.55
Avg. size of reached set after ref.:  39493.62

Total time for CEGAR algorithm:     823.467s
Time for refinements:                11.018s
Average time for refinement:          0.379s
Max time for refinement:              6.712s

Code Coverage
-----------------------------
  Function coverage:      0.645
  Visited lines:          958
  Total lines:            1635
  Line coverage:          0.586
  Visited conditions:     257
  Total conditions:       490
  Condition coverage:     0.524

CPAchecker general statistics
-----------------------------
Number of program locations:     1148
Number of CFA edges:             1515
Number of relevant variables:    379
Number of functions:             110
Number of loops:                 4
Size of reached set:             1653451
  Size of final wait list        4935

Time for analysis setup:          2.567s
  Time for loading CPAs:          0.433s
  Time for loading parser:        0.564s
  Time for CFA construction:      1.489s
    Time for parsing file(s):     0.466s
    Time for AST to CFA:          0.466s
    Time for CFA sanity check:    0.076s
    Time for post-processing:     0.332s
      Time for var class.:        0.000s
Time for Analysis:              823.467s
CPU time for analysis:          895.960s
Total time for CPAchecker:      826.039s
Total CPU time for CPAchecker:  900.330s

Time for Garbage Collector:      62.628s (in 32 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4179MB (  3985 MiB) max;   2500MB (  2384 MiB) avg;   6231MB (  5942 MiB) peak
Used non-heap memory:             24MB (    22 MiB) max;     22MB (    21 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:        1903MB (  1815 MiB) max;   1173MB (  1118 MiB) avg;   2292MB (  2186 MiB) peak
Allocated heap memory:          5492MB (  5238 MiB) max;   4847MB (  4622 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:  13610MB ( 12980 MiB) max;  13602MB ( 12972 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
