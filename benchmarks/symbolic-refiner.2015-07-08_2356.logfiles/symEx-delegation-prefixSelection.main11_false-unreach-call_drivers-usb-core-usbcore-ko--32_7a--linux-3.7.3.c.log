scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=CONSTRAINTS_FIRST -setprop cpa.constraints.lessOrEqualType=SUBSET -setprop cegar.refiner=cpa.value.symbolic.refiner.delegation.SymbolicDelegatingRefiner -setprop cpa.value.refinement.pathSlicing=true -setprop cpa.value.refinement.prefixPreference=DOMAIN_GOOD_SHORT -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.7.3/ALL.prp ../svcomp15/ldv-linux-3.7.3/main11_false-unreach-call_drivers-usb-core-usbcore-ko--32_7a--linux-3.7.3.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-2062144248_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 34956: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 35004: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18808: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18719: Function pointer *(ops->map_sg) with type int (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 18605-18606: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18850: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18764: Function pointer *(ops->unmap_sg) with type void (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18652: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9403: Function pointer *(hcd->driver->update_hub_device) with type int (*)(struct usb_hcd *, struct usb_device *, struct usb_tt *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10619: Function pointer *(hcd->driver->update_hub_device) with type int (*)(struct usb_hcd *, struct usb_device *, struct usb_tt *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11501: Function pointer *(hcd->driver->free_dev) with type void (*)(struct usb_hcd *, struct usb_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15723: Function pointer *(hcd->driver->relinquish_port) with type void (*)(struct usb_hcd *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8871: Function pointer *(drv->clear_tt_buffer_complete) with type void (*)(struct usb_hcd *, struct usb_host_endpoint *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20872: Function pointer *(hcd->driver->map_urb_for_dma) with type int (*)(struct usb_hcd *, struct urb *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38736: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 19724-19725: Function pointer *(hcd->driver->hub_control) with type int (*)(struct usb_hcd *, u16 , u16 , u16 , char *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21169: Function pointer *(hcd->driver->urb_dequeue) with type int (*)(struct usb_hcd *, struct urb *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20807: Function pointer *(hcd->driver->unmap_urb_for_dma) with type void (*)(struct usb_hcd *, struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 21918-21919: Function pointer *(hcd->driver->alloc_streams) with type int (*)(struct usb_hcd *, struct usb_device *, struct usb_host_endpoint **, unsigned int, unsigned int, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14193: Function pointer *(hcd->driver->disable_usb3_lpm_timeout) with type int (*)(struct usb_hcd *, struct usb_device *, enum usb3_link_state ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14116: Function pointer *(hcd->driver->enable_usb3_lpm_timeout) with type int (*)(struct usb_hcd *, struct usb_device *, enum usb3_link_state ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14139: Function pointer *(hcd->driver->disable_usb3_lpm_timeout) with type int (*)(struct usb_hcd *, struct usb_device *, enum usb3_link_state ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21976: Function pointer *(hcd->driver->free_streams) with type int (*)(struct usb_hcd *, struct usb_device *, struct usb_host_endpoint **, unsigned int, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21775: Function pointer *(hcd->driver->reset_bandwidth) with type void (*)(struct usb_hcd *, struct usb_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21798: Function pointer *(hcd->driver->endpoint_disable) with type void (*)(struct usb_hcd *, struct usb_host_endpoint *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21827: Function pointer *(hcd->driver->endpoint_reset) with type void (*)(struct usb_hcd *, struct usb_host_endpoint *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21108: Function pointer *(hcd->driver->urb_enqueue) with type int (*)(struct usb_hcd *, struct urb *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31817: Function pointer *(hcd->driver->set_usb2_hw_lpm) with type int (*)(struct usb_hcd *, struct usb_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19157: Function pointer *(mon_ops->urb_complete) with type void (*)(struct usb_bus *, struct urb *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19122: Function pointer *(mon_ops->urb_submit) with type void (*)(struct usb_bus *, struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19140: Function pointer *(mon_ops->urb_submit_error) with type void (*)(struct usb_bus *, struct urb *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Skipping recursive function call from usb_unlink_urb to usb_hcd_unlink_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from get_hub_descriptor to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from set_port_feature to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_set_device_initiated_lpm to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_req_set_sel to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_hcd_alloc_bandwidth to hub_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usbdev_release to destroy_all_async (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_start_wait_urb to usb_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_start_wait_urb to usb_kill_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                3343044 (count: 106003, min: 0, max: 40, avg: 31.54)
Number of global variables:                          317994 (count: 106003, min: 0, max: 3, avg: 3.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 2790633
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               34.476s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:    56.636s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 3
Most constraints before refinement in state: 4
Constraints after refinement in state: 1252
Constraints before refinement in state: 79061
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 5892ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.712s
  Time for transition matches:                         6.965s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      3737468 (count: 3737468, min: 1, max: 1, avg: 1.00) [1 x 3737468]

CPA algorithm statistics
------------------------
Number of iterations:            2543049
Max size of waitlist:            667
Average size of waitlist:        596
Number of computed successors:   2790633
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         242793
Number of times breaked:         43

Total time for CPA algorithm:       729.664s (Max:    61.213s)
  Time for choose from waitlist:      3.156s
  Time for precision adjustment:     52.987s
  Time for transfer relation:       642.340s
  Time for stop operator:             8.640s
  Time for adding to reached set:     7.547s

SymbolicDelegatingRefiner statistics
------------------------------------
Explicit refinements: 43
Successful explicit refinements: 37
Symbolic refinements: 6
Successful symbolic refinements: 6
Overall explicit refinement time: 13889ms
Average explicit refinement time: 323ms
Overall symbolic refinement time: 104455ms
Average symbolic refinement time: 17409ms

CEGAR algorithm statistics
--------------------------
Number of refinements:                43
Number of successful refinements:     43
Number of failed refinements:         0
Max. size of reached set before ref.: 149628
Max. size of reached set after ref.:  148921
Avg. size of reached set before ref.: 74489.23
Avg. size of reached set after ref.:  17702.30

Total time for CEGAR algorithm:     848.423s
Time for refinements:               118.344s
Average time for refinement:          2.752s
Max time for refinement:             26.402s

Code Coverage
-----------------------------
  Function coverage:      0.146
  Visited lines:          7706
  Total lines:            27936
  Line coverage:          0.276
  Visited conditions:     763
  Total conditions:       7336
  Condition coverage:     0.104

CPAchecker general statistics
-----------------------------
Number of program locations:     19413
Number of CFA edges:             28499
Number of relevant variables:    5494
Number of functions:             1082
Number of loops:                 184
Size of reached set:             106003
  Number of reached locations:   2094 (11%)
    Avg states per location:     50
    Max states per location:     2393 (at node N26667)
  Number of reached functions:   158 (15%)
  Number of partitions:          91446
    Avg size of partitions:      1
    Max size of partitions:      40 (with key [N5321 (before line 14265), Function usb_disable_lpm called from node N12833, stack depth 21 [2c50522a], stack [main, usbdev_notify, usbdev_remove, destroy_all_async, destroy_async, usb_kill_urb, usb_hcd_unlink_urb, unlink1, usb_rh_urb_dequeue, usb_hcd_giveback_urb, hub_init_func3, hub_activate, usb_submit_urb, usb_hcd_submit_urb, map_urb_for_dma, usb_hcd_map_urb_for_dma, dma_mapping_error, hub_probe, hub_configure, usb_set_interface, usb_disable_lpm], Init])
  Number of target states:       0
  Size of final wait list        630

Time for analysis setup:         13.518s
  Time for loading CPAs:          0.755s
  Time for loading parser:        0.493s
  Time for CFA construction:     12.190s
    Time for parsing file(s):     2.750s
    Time for AST to CFA:          4.970s
    Time for CFA sanity check:    0.901s
    Time for post-processing:     3.238s
      Time for var class.:        0.000s
Time for Analysis:              848.424s
CPU time for analysis:          874.200s
Total time for CPAchecker:      861.947s
Total CPU time for CPAchecker:  900.020s

Time for Garbage Collector:      13.161s (in 30 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4244MB (  4048 MiB) max;   1989MB (  1897 MiB) avg;   4681MB (  4464 MiB) peak
Used non-heap memory:             28MB (    27 MiB) max;     27MB (    26 MiB) avg;     28MB (    27 MiB) peak
Used in PS Old Gen pool:        1136MB (  1084 MiB) max;    523MB (   499 MiB) avg;   1313MB (  1252 MiB) peak
Allocated heap memory:          4736MB (  4517 MiB) max;   4344MB (  4143 MiB) avg
Allocated non-heap memory:        46MB (    43 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:  13692MB ( 13058 MiB) max;  13606MB ( 12975 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
