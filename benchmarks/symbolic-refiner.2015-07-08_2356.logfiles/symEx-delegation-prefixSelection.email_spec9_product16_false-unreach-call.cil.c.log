scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=CONSTRAINTS_FIRST -setprop cpa.constraints.lessOrEqualType=SUBSET -setprop cegar.refiner=cpa.value.symbolic.refiner.delegation.SymbolicDelegatingRefiner -setprop cpa.value.refinement.pathSlicing=true -setprop cpa.value.refinement.prefixPreference=DOMAIN_GOOD_SHORT -timelimit 900s -stats -spec ../svcomp15/product-lines/ALL.prp ../svcomp15/product-lines/email_spec9_product16_false-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_588650283_tempdir
line 546: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               68176405 (count: 2935868, min: 0, max: 30, avg: 23.22)
Number of global variables:                        17615196 (count: 2935868, min: 0, max: 6, avg: 6.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 4611781
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               38.357s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:    19.396s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 1
Constraints after refinement in state: 0
Constraints before refinement in state: 131520
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 7695ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 28.077s
  Time for transition matches:                        11.016s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      6541604 (count: 6541604, min: 1, max: 1, avg: 1.00) [1 x 6541604]

CPA algorithm statistics
------------------------
Number of iterations:            4090095
Max size of waitlist:            10308
Average size of waitlist:        4048
Number of computed successors:   4611781
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         508905
Number of times breaked:         29

Total time for CPA algorithm:       776.013s (Max:   581.696s)
  Time for choose from waitlist:      4.540s
  Time for precision adjustment:     86.395s
  Time for transfer relation:       596.875s
  Time for stop operator:            49.131s
  Time for adding to reached set:    14.228s

SymbolicDelegatingRefiner statistics
------------------------------------
Explicit refinements: 29
Successful explicit refinements: 29
Symbolic refinements: 0
Successful symbolic refinements: 0
Overall explicit refinement time: 10334ms
Average explicit refinement time: 356ms
Overall symbolic refinement time: 0ms
Average symbolic refinement time: 0ms

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 1028274
Max. size of reached set after ref.:  78273
Avg. size of reached set before ref.: 72038.79
Avg. size of reached set after ref.:  31797.10

Total time for CEGAR algorithm:     786.835s
Time for refinements:                10.334s
Average time for refinement:          0.356s
Max time for refinement:              5.873s

Code Coverage
-----------------------------
  Function coverage:      0.617
  Visited lines:          919
  Total lines:            1615
  Line coverage:          0.569
  Visited conditions:     243
  Total conditions:       488
  Condition coverage:     0.498

CPAchecker general statistics
-----------------------------
Number of program locations:     1124
Number of CFA edges:             1477
Number of relevant variables:    366
Number of functions:             107
Number of loops:                 4
Size of reached set:             2935868
  Size of final wait list        10301

Time for analysis setup:          2.616s
  Time for loading CPAs:          0.451s
  Time for loading parser:        0.513s
  Time for CFA construction:      1.567s
    Time for parsing file(s):     0.485s
    Time for AST to CFA:          0.474s
    Time for CFA sanity check:    0.072s
    Time for post-processing:     0.348s
      Time for var class.:        0.000s
Time for Analysis:              786.835s
CPU time for analysis:          895.460s
Total time for CPAchecker:      789.456s
Total CPU time for CPAchecker:  899.960s

Time for Garbage Collector:     100.717s (in 50 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5949MB (  5673 MiB) max;   3104MB (  2960 MiB) avg;   7576MB (  7225 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     24MB (    22 MiB) peak
Used in PS Old Gen pool:        3964MB (  3780 MiB) max;   1886MB (  1799 MiB) avg;   3965MB (  3781 MiB) peak
Allocated heap memory:          8025MB (  7653 MiB) max;   5526MB (  5270 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  13609MB ( 12978 MiB) max;  13601MB ( 12971 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
