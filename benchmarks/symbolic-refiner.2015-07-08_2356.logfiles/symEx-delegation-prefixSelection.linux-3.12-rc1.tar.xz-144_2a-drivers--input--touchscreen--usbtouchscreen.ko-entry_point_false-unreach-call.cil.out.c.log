scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=CONSTRAINTS_FIRST -setprop cpa.constraints.lessOrEqualType=SUBSET -setprop cegar.refiner=cpa.value.symbolic.refiner.delegation.SymbolicDelegatingRefiner -setprop cpa.value.refinement.pathSlicing=true -setprop cpa.value.refinement.prefixPreference=DOMAIN_GOOD_SHORT -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.12-rc1/ALL.prp ../svcomp15/ldv-linux-3.12-rc1/linux-3.12-rc1.tar.xz-144_2a-drivers--input--touchscreen--usbtouchscreen.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_568335997_tempdir
The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 8082: Ignoring call via function pointer completeFnInt for which no suitable target was found in line: (*completeFnInt)(usb_urb); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ldv_usb_submit_urb_5 to ldv_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usbtouch_probe to usbtouch_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usbtouch_reset_resume to usbtouch_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usbtouch_reset_resume to usbtouch_reset_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ldv_usb_submit_urb_8 to ldv_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usbtouch_process_pkt to usbtouch_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ldv_usb_submit_urb_6 to ldv_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8091: Ignoring call via function pointer completeFnBulk for which no suitable target was found in line: (*completeFnBulk)(usb_urb); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                5914280 (count: 466030, min: 0, max: 14, avg: 12.69)
Number of global variables:                         4060888 (count: 466030, min: 0, max: 9, avg: 8.71)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  661658
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                3.580s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     7.839s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 1
Most constraints before refinement in state: 2
Constraints after refinement in state: 340
Constraints before refinement in state: 25344
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 1409ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.656s
  Time for transition matches:                         1.517s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       905644 (count: 905644, min: 1, max: 1, avg: 1.00) [1 x 905644]

CPA algorithm statistics
------------------------
Number of iterations:            569143
Max size of waitlist:            6700
Average size of waitlist:        1580
Number of computed successors:   661658
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         85210
Number of times breaked:         75

Total time for CPA algorithm:       382.031s (Max:   362.287s)
  Time for choose from waitlist:      0.662s
  Time for precision adjustment:      7.983s
  Time for transfer relation:        70.536s
  Time for stop operator:           297.515s
  Time for adding to reached set:     2.096s

SymbolicDelegatingRefiner statistics
------------------------------------
Explicit refinements: 75
Successful explicit refinements: 46
Symbolic refinements: 29
Successful symbolic refinements: 29
Overall explicit refinement time: 4680ms
Average explicit refinement time: 62ms
Overall symbolic refinement time: 488570ms
Average symbolic refinement time: 16847ms

CEGAR algorithm statistics
--------------------------
Number of refinements:                75
Number of successful refinements:     75
Number of failed refinements:         0
Max. size of reached set before ref.: 235632
Max. size of reached set after ref.:  234132
Avg. size of reached set before ref.: 69418.20
Avg. size of reached set after ref.:  67945.95

Total time for CEGAR algorithm:     877.530s
Time for refinements:               493.250s
Average time for refinement:          6.576s
Max time for refinement:             44.815s

Code Coverage
-----------------------------
  Function coverage:      0.786
  Visited lines:          5353
  Total lines:            5547
  Line coverage:          0.965
  Visited conditions:     497
  Total conditions:       604
  Condition coverage:     0.823

CPAchecker general statistics
-----------------------------
Number of program locations:     1623
Number of CFA edges:             2296
Number of relevant variables:    510
Number of functions:             112
Number of loops:                 9
Size of reached set:             466030
  Number of reached locations:   1294 (80%)
    Avg states per location:     360
    Max states per location:     9195 (at node N759)
  Number of reached functions:   88 (79%)
  Number of partitions:          286945
    Avg size of partitions:      1
    Max size of partitions:      9095 (with key [N759 (before line 5876), Function nexio_init called from node N2258, stack depth 3 [784d6118], stack [main, usbtouch_probe, nexio_init], Init])
  Number of target states:       0
  Size of final wait list        6691

Time for analysis setup:          3.520s
  Time for loading CPAs:          0.470s
  Time for loading parser:        0.533s
  Time for CFA construction:      2.441s
    Time for parsing file(s):     0.783s
    Time for AST to CFA:          0.856s
    Time for CFA sanity check:    0.083s
    Time for post-processing:     0.510s
      Time for var class.:        0.000s
Time for Analysis:              877.531s
CPU time for analysis:          893.750s
Total time for CPAchecker:      881.055s
Total CPU time for CPAchecker:  899.950s

Time for Garbage Collector:       4.758s (in 27 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3383MB (  3226 MiB) max;   1596MB (  1522 MiB) avg;   4197MB (  4003 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     25MB (    23 MiB) avg;     25MB (    24 MiB) peak
Used in PS Old Gen pool:         728MB (   695 MiB) max;    256MB (   244 MiB) avg;    728MB (   695 MiB) peak
Allocated heap memory:          4782MB (  4561 MiB) max;   4027MB (  3840 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:  13609MB ( 12979 MiB) max;  13601MB ( 12971 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
