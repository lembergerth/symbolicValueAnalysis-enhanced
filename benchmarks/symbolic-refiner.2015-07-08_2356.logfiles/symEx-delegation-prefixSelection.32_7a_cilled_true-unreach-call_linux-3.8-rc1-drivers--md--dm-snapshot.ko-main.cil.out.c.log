scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=CONSTRAINTS_FIRST -setprop cpa.constraints.lessOrEqualType=SUBSET -setprop cegar.refiner=cpa.value.symbolic.refiner.delegation.SymbolicDelegatingRefiner -setprop cpa.value.refinement.pathSlicing=true -setprop cpa.value.refinement.prefixPreference=DOMAIN_GOOD_SHORT -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--md--dm-snapshot.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_261846398_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 10752: Function pointer *(type->ctr) with type int (*)(struct dm_exception_store *, unsigned int, char **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8706: Function pointer *fn with type int (*)(struct dm_target *, struct dm_dev *, sector_t , sector_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8268: Function pointer *fn with type int (*)(struct dm_target *, struct dm_dev *, sector_t , sector_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8274: Function pointer *fn with type int (*)(struct dm_target *, struct dm_dev *, sector_t , sector_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Skipping recursive function call from snapshot_map to __find_pending_exception (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_exception_store_destroy to snapshot_dtr (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12025: Ignoring call via function pointer insert_exceptions::callback for which no suitable target was found in line: r = (*callback)(callback_context, (chunk_t )(e.old_chunk), (chunk_t )(e.new_chunk)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from insert_exceptions to persistent_read_metadata (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8706: Ignoring call via function pointer origin_iterate_devices::fn for which no suitable target was found in line: tmp = (*fn)(ti, dev, 0UL, ti->len, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8268: Ignoring call via function pointer snapshot_iterate_devices::fn for which no suitable target was found in line: r = (*fn)(ti, snap->origin, 0UL, ti->len, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8274: Ignoring call via function pointer snapshot_iterate_devices::fn for which no suitable target was found in line: r = (*fn)(ti, snap->cow, 0UL, tmp, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from origin_write_extent to __origin_write (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from snapshot_merge_map to do_origin (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __find_pending_exception to origin_map (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8706: Function pointer origin_iterate_devices::fn points to dm_add_exception, but no corresponding call edge was created during preprocessing. Ignoring function pointer call: tmp = (*fn)(ti, dev, 0UL, ti->len, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8268: Function pointer snapshot_iterate_devices::fn points to dm_add_exception, but no corresponding call edge was created during preprocessing. Ignoring function pointer call: r = (*fn)(ti, snap->origin, 0UL, ti->len, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8274: Function pointer snapshot_iterate_devices::fn points to dm_add_exception, but no corresponding call edge was created during preprocessing. Ignoring function pointer call: r = (*fn)(ti, snap->cow, 0UL, tmp, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from snapshot_dtr to dm_exception_store_destroy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __invalidate_snapshot to snapshot_merge_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from do_origin to __origin_write (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __invalidate_snapshot to snapshot_dtr (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __find_pending_exception to snapshot_map (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __origin_write to __find_pending_exception (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __origin_write to __invalidate_snapshot (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from snapshot_map to __invalidate_snapshot (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from origin_map to do_origin (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11015: Ignoring call via function pointer transient_commit_exception::callback for which no suitable target was found in line: (*callback)(callback_context, 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __find_pending_exception to snapshot_merge_map (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_exception_store_destroy to snapshot_merge_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                1865925 (count: 614283, min: 0, max: 6, avg: 3.04)
Number of global variables:                         1844157 (count: 614283, min: 0, max: 4, avg: 3.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  723581
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                1.725s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     1.869s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 1
Constraints after refinement in state: 0
Constraints before refinement in state: 1506
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 903ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.066s
  Time for transition matches:                         2.029s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1110143 (count: 1110143, min: 1, max: 1, avg: 1.00) [1 x 1110143]

CPA algorithm statistics
------------------------
Number of iterations:            657188
Max size of waitlist:            200
Average size of waitlist:        53
Number of computed successors:   723581
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         66244
Number of times breaked:         3

Total time for CPA algorithm:        37.664s (Max:    30.434s)
  Time for choose from waitlist:      0.834s
  Time for precision adjustment:      5.760s
  Time for transfer relation:        23.665s
  Time for stop operator:             1.685s
  Time for adding to reached set:     1.774s

SymbolicDelegatingRefiner statistics
------------------------------------
Explicit refinements: 3
Successful explicit refinements: 3
Symbolic refinements: 0
Successful symbolic refinements: 0
Overall explicit refinement time: 1497ms
Average explicit refinement time: 499ms
Overall symbolic refinement time: 0ms
Average symbolic refinement time: 0ms

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 21073
Max. size of reached set after ref.:  5
Avg. size of reached set before ref.: 14356.67
Avg. size of reached set after ref.:  5.00

Total time for CEGAR algorithm:      39.162s
Time for refinements:                 1.497s
Average time for refinement:          0.499s
Max time for refinement:              0.762s

Code Coverage
-----------------------------
  Function coverage:      0.767
  Visited lines:          7862
  Total lines:            8216
  Line coverage:          0.957
  Visited conditions:     1093
  Total conditions:       1208
  Condition coverage:     0.905

CPAchecker general statistics
-----------------------------
Number of program locations:     3624
Number of CFA edges:             5107
Number of relevant variables:    1135
Number of functions:             249
Number of loops:                 32
Size of reached set:             614283
  Number of reached locations:   3139 (87%)
    Avg states per location:     195
    Max states per location:     3512 (at node N283)
  Number of reached functions:   191 (77%)
  Number of partitions:          612006
    Avg size of partitions:      1
    Max size of partitions:      126 (with key [N3284 (before line 10061), Function main called from node N2631, stack depth 1 [327be569], stack [main], Init])
  Number of target states:       0

Time for analysis setup:          4.755s
  Time for loading CPAs:          0.573s
  Time for loading parser:        0.699s
  Time for CFA construction:      3.386s
    Time for parsing file(s):     0.900s
    Time for AST to CFA:          1.120s
    Time for CFA sanity check:    0.144s
    Time for post-processing:     0.984s
      Time for var class.:        0.000s
Time for Analysis:               39.162s
CPU time for analysis:           50.210s
Total time for CPAchecker:       43.924s
Total CPU time for CPAchecker:   58.610s

Time for Garbage Collector:       2.290s (in 5 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               2456MB (  2342 MiB) max;    757MB (   722 MiB) avg;   2764MB (  2636 MiB) peak
Used non-heap memory:             24MB (    23 MiB) max;     22MB (    21 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:         560MB (   534 MiB) max;    139MB (   133 MiB) avg;    560MB (   534 MiB) peak
Allocated heap memory:          3611MB (  3444 MiB) max;   2741MB (  2614 MiB) avg
Allocated non-heap memory:        26MB (    25 MiB) max;     26MB (    24 MiB) avg
Total process virtual memory:  13597MB ( 12967 MiB) max;  13595MB ( 12965 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
