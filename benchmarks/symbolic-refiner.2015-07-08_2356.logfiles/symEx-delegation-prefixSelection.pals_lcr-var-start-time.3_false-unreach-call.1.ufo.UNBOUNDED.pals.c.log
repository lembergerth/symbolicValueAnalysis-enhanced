scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=CONSTRAINTS_FIRST -setprop cpa.constraints.lessOrEqualType=SUBSET -setprop cegar.refiner=cpa.value.symbolic.refiner.delegation.SymbolicDelegatingRefiner -setprop cpa.value.refinement.pathSlicing=true -setprop cpa.value.refinement.prefixPreference=DOMAIN_GOOD_SHORT -timelimit 900s -stats -spec ../svcomp15/seq-mthreaded/ALL.prp ../svcomp15/seq-mthreaded/pals_lcr-var-start-time.3_false-unreach-call.1.ufo.UNBOUNDED.pals.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_2049859284_tempdir
The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                1131340 (count: 43747, min: 0, max: 27, avg: 25.86)
Number of global variables:                         1006135 (count: 43747, min: 0, max: 23, avg: 23.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  748709
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                5.620s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     9.263s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 10
Most constraints before refinement in state: 11
Constraints after refinement in state: 172776
Constraints before refinement in state: 253671
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 2005ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.260s
  Time for transition matches:                         2.149s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1147804 (count: 1147804, min: 1, max: 1, avg: 1.00) [1 x 1147804]

CPA algorithm statistics
------------------------
Number of iterations:            714832
Max size of waitlist:            1145
Average size of waitlist:        585
Number of computed successors:   748709
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         15616
Number of times breaked:         66

Total time for CPA algorithm:       240.762s (Max:    17.189s)
  Time for choose from waitlist:      0.908s
  Time for precision adjustment:     11.283s
  Time for transfer relation:       185.168s
  Time for stop operator:            36.820s
  Time for adding to reached set:     2.152s

SymbolicDelegatingRefiner statistics
------------------------------------
Explicit refinements: 66
Successful explicit refinements: 33
Symbolic refinements: 33
Successful symbolic refinements: 32
Overall explicit refinement time: 1215ms
Average explicit refinement time: 18ms
Overall symbolic refinement time: 638606ms
Average symbolic refinement time: 18782ms

CEGAR algorithm statistics
--------------------------
Number of refinements:                66
Number of successful refinements:     65
Number of failed refinements:         0
Max. size of reached set before ref.: 46513
Max. size of reached set after ref.:  2738
Avg. size of reached set before ref.: 11352.95
Avg. size of reached set after ref.:  249.25

Total time for CEGAR algorithm:     880.399s
Time for refinements:               639.606s
Average time for refinement:          9.691s
Max time for refinement:             83.888s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          181
  Total lines:            184
  Line coverage:          0.984
  Visited conditions:     107
  Total conditions:       110
  Condition coverage:     0.973

CPAchecker general statistics
-----------------------------
Number of program locations:     205
Number of CFA edges:             267
Number of relevant variables:    40
Number of functions:             8
Number of loops:                 2
Size of reached set:             43747
  Number of reached locations:   202 (99%)
    Avg states per location:     216
    Max states per location:     1710 (at node N89)
  Number of reached functions:   8 (100%)
  Number of partitions:          30846
    Avg size of partitions:      1
    Max size of partitions:      1324 (with key [N260 (before line 336), Function main called from node N225, stack depth 1 [10cc8ff8], stack [main], Init])
  Number of target states:       1
  Size of final wait list        1072

Time for analysis setup:          1.645s
  Time for loading CPAs:          0.345s
  Time for loading parser:        0.569s
  Time for CFA construction:      0.641s
    Time for parsing file(s):     0.303s
    Time for AST to CFA:          0.161s
    Time for CFA sanity check:    0.024s
    Time for post-processing:     0.117s
      Time for var class.:        0.000s
Time for Analysis:              880.399s
CPU time for analysis:          897.670s
Total time for CPAchecker:      882.049s
Total CPU time for CPAchecker:  900.350s

Time for Garbage Collector:       5.309s (in 41 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               1889MB (  1802 MiB) max;    718MB (   684 MiB) avg;   1929MB (  1840 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     23MB (    22 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:         587MB (   559 MiB) max;    266MB (   254 MiB) avg;    587MB (   559 MiB) peak
Allocated heap memory:          2750MB (  2623 MiB) max;   2311MB (  2204 MiB) avg
Allocated non-heap memory:        26MB (    25 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:  13617MB ( 12987 MiB) max;  13603MB ( 12973 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
