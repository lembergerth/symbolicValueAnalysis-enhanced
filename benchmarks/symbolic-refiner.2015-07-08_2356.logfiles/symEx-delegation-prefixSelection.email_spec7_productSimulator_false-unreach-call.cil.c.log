scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=CONSTRAINTS_FIRST -setprop cpa.constraints.lessOrEqualType=SUBSET -setprop cegar.refiner=cpa.value.symbolic.refiner.delegation.SymbolicDelegatingRefiner -setprop cpa.value.refinement.pathSlicing=true -setprop cpa.value.refinement.prefixPreference=DOMAIN_GOOD_SHORT -timelimit 900s -stats -spec ../svcomp15/product-lines/ALL.prp ../svcomp15/product-lines/email_spec7_productSimulator_false-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-123188272_tempdir
line 4736: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               27042897 (count: 1686503, min: 0, max: 20, avg: 16.03)
Number of global variables:                        25297515 (count: 1686503, min: 0, max: 15, avg: 15.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 2441292
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               14.955s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     7.880s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 1
Constraints after refinement in state: 0
Constraints before refinement in state: 72718
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 3494ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.061s
  Time for transition matches:                         6.186s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      3462974 (count: 3462974, min: 1, max: 1, avg: 1.00) [1 x 3462974]

CPA algorithm statistics
------------------------
Number of iterations:            1912270
Max size of waitlist:            17291
Average size of waitlist:        7562
Number of computed successors:   2441292
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         510340
Number of times breaked:         55

Total time for CPA algorithm:       818.255s (Max:   781.670s)
  Time for choose from waitlist:      2.267s
  Time for precision adjustment:     56.889s
  Time for transfer relation:       215.917s
  Time for stop operator:           524.437s
  Time for adding to reached set:     6.472s

SymbolicDelegatingRefiner statistics
------------------------------------
Explicit refinements: 55
Successful explicit refinements: 55
Symbolic refinements: 0
Successful symbolic refinements: 0
Overall explicit refinement time: 4911ms
Average explicit refinement time: 89ms
Overall symbolic refinement time: 0ms
Average symbolic refinement time: 0ms

CEGAR algorithm statistics
--------------------------
Number of refinements:                55
Number of successful refinements:     55
Number of failed refinements:         0
Max. size of reached set before ref.: 9994
Max. size of reached set after ref.:  2118
Avg. size of reached set before ref.: 6107.09
Avg. size of reached set after ref.:  1662.55

Total time for CEGAR algorithm:     823.240s
Time for refinements:                 4.911s
Average time for refinement:          0.089s
Max time for refinement:              0.558s

Code Coverage
-----------------------------
  Function coverage:      0.311
  Visited lines:          847
  Total lines:            1919
  Line coverage:          0.441
  Visited conditions:     264
  Total conditions:       576
  Condition coverage:     0.458

CPAchecker general statistics
-----------------------------
Number of program locations:     1410
Number of CFA edges:             1934
Number of relevant variables:    469
Number of functions:             132
Number of loops:                 4
Size of reached set:             1686503
  Size of final wait list        17285

Time for analysis setup:          2.755s
  Time for loading CPAs:          0.412s
  Time for loading parser:        0.525s
  Time for CFA construction:      1.735s
    Time for parsing file(s):     0.514s
    Time for AST to CFA:          0.524s
    Time for CFA sanity check:    0.082s
    Time for post-processing:     0.422s
      Time for var class.:        0.000s
Time for Analysis:              823.240s
CPU time for analysis:          895.720s
Total time for CPAchecker:      826.000s
Total CPU time for CPAchecker:  900.420s

Time for Garbage Collector:      62.519s (in 55 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4888MB (  4662 MiB) max;   2772MB (  2644 MiB) avg;   6131MB (  5847 MiB) peak
Used non-heap memory:             24MB (    23 MiB) max;     22MB (    21 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:        2262MB (  2157 MiB) max;   1272MB (  1213 MiB) avg;   2262MB (  2157 MiB) peak
Allocated heap memory:          5669MB (  5407 MiB) max;   4915MB (  4687 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:  13599MB ( 12969 MiB) max;  13599MB ( 12969 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
