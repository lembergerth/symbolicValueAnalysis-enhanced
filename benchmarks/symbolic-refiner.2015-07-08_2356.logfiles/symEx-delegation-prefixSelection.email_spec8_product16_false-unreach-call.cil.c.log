scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=CONSTRAINTS_FIRST -setprop cpa.constraints.lessOrEqualType=SUBSET -setprop cegar.refiner=cpa.value.symbolic.refiner.delegation.SymbolicDelegatingRefiner -setprop cpa.value.refinement.pathSlicing=true -setprop cpa.value.refinement.prefixPreference=DOMAIN_GOOD_SHORT -timelimit 900s -stats -spec ../svcomp15/product-lines/ALL.prp ../svcomp15/product-lines/email_spec8_product16_false-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_2068234056_tempdir
line 2122: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               66189032 (count: 2850811, min: 0, max: 30, avg: 23.22)
Number of global variables:                        17104854 (count: 2850811, min: 0, max: 6, avg: 6.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 4516353
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               35.338s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:    18.196s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 1
Constraints after refinement in state: 0
Constraints before refinement in state: 128976
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 6751ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 29.151s
  Time for transition matches:                        11.897s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      6406145 (count: 6406145, min: 1, max: 1, avg: 1.00) [1 x 6406145]

CPA algorithm statistics
------------------------
Number of iterations:            4005441
Max size of waitlist:            9963
Average size of waitlist:        3920
Number of computed successors:   4516353
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         498534
Number of times breaked:         29

Total time for CPA algorithm:       776.732s (Max:   594.058s)
  Time for choose from waitlist:      4.572s
  Time for precision adjustment:     65.224s
  Time for transfer relation:       573.159s
  Time for stop operator:            62.936s
  Time for adding to reached set:    26.945s

SymbolicDelegatingRefiner statistics
------------------------------------
Explicit refinements: 29
Successful explicit refinements: 29
Symbolic refinements: 0
Successful symbolic refinements: 0
Overall explicit refinement time: 9608ms
Average explicit refinement time: 331ms
Overall symbolic refinement time: 0ms
Average symbolic refinement time: 0ms

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 1028274
Max. size of reached set after ref.:  78273
Avg. size of reached set before ref.: 72038.79
Avg. size of reached set after ref.:  31797.10

Total time for CEGAR algorithm:     786.860s
Time for refinements:                 9.608s
Average time for refinement:          0.331s
Max time for refinement:              5.415s

Code Coverage
-----------------------------
  Function coverage:      0.617
  Visited lines:          919
  Total lines:            1615
  Line coverage:          0.569
  Visited conditions:     243
  Total conditions:       488
  Condition coverage:     0.498

CPAchecker general statistics
-----------------------------
Number of program locations:     1124
Number of CFA edges:             1477
Number of relevant variables:    366
Number of functions:             107
Number of loops:                 4
Size of reached set:             2850811
  Size of final wait list        9898

Time for analysis setup:          2.549s
  Time for loading CPAs:          0.442s
  Time for loading parser:        0.546s
  Time for CFA construction:      1.479s
    Time for parsing file(s):     0.469s
    Time for AST to CFA:          0.468s
    Time for CFA sanity check:    0.073s
    Time for post-processing:     0.342s
      Time for var class.:        0.000s
Time for Analysis:              786.860s
CPU time for analysis:          895.720s
Total time for CPAchecker:      789.415s
Total CPU time for CPAchecker:  900.020s

Time for Garbage Collector:     100.701s (in 49 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5513MB (  5257 MiB) max;   3002MB (  2863 MiB) avg;   7754MB (  7395 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     24MB (    22 MiB) peak
Used in PS Old Gen pool:        3973MB (  3789 MiB) max;   1746MB (  1665 MiB) avg;   4090MB (  3901 MiB) peak
Allocated heap memory:          7633MB (  7279 MiB) max;   5503MB (  5248 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  13605MB ( 12975 MiB) max;  13600MB ( 12970 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
