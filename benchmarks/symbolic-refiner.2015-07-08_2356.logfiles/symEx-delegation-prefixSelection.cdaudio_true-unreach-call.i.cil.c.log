scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=CONSTRAINTS_FIRST -setprop cpa.constraints.lessOrEqualType=SUBSET -setprop cegar.refiner=cpa.value.symbolic.refiner.delegation.SymbolicDelegatingRefiner -setprop cpa.value.refinement.pathSlicing=true -setprop cpa.value.refinement.prefixPreference=DOMAIN_GOOD_SHORT -timelimit 900s -stats -spec ../svcomp15/ntdrivers/ALL.prp ../svcomp15/ntdrivers/cdaudio_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-20039385_tempdir
The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                7999125 (count: 421010, min: 0, max: 25, avg: 19.00)
Number of global variables:                         6314941 (count: 421010, min: 0, max: 15, avg: 15.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  520125
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                4.243s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     1.587s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 1
Constraints after refinement in state: 0
Constraints before refinement in state: 21642
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 836ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.232s
  Time for transition matches:                         1.380s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       911211 (count: 911211, min: 1, max: 1, avg: 1.00) [1 x 911211]

CPA algorithm statistics
------------------------
Number of iterations:            444700
Max size of waitlist:            19129
Average size of waitlist:        8648
Number of computed successors:   520125
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         53538
Number of times breaked:         50

Total time for CPA algorithm:       872.559s (Max:   859.354s)
  Time for choose from waitlist:      0.554s
  Time for precision adjustment:      7.724s
  Time for transfer relation:       103.479s
  Time for stop operator:           756.158s
  Time for adding to reached set:     1.944s

SymbolicDelegatingRefiner statistics
------------------------------------
Explicit refinements: 50
Successful explicit refinements: 50
Symbolic refinements: 0
Successful symbolic refinements: 0
Overall explicit refinement time: 2567ms
Average explicit refinement time: 51ms
Overall symbolic refinement time: 0ms
Average symbolic refinement time: 0ms

CEGAR algorithm statistics
--------------------------
Number of refinements:                50
Number of successful refinements:     50
Number of failed refinements:         0
Max. size of reached set before ref.: 9630
Max. size of reached set after ref.:  7592
Avg. size of reached set before ref.: 5250.18
Avg. size of reached set after ref.:  4338.62

Total time for CEGAR algorithm:     875.317s
Time for refinements:                 2.567s
Average time for refinement:          0.051s
Max time for refinement:              0.210s

Code Coverage
-----------------------------
  Function coverage:      0.207
  Visited lines:          3390
  Total lines:            6461
  Line coverage:          0.525
  Visited conditions:     94
  Total conditions:       924
  Condition coverage:     0.102

CPAchecker general statistics
-----------------------------
Number of program locations:     2222
Number of CFA edges:             2951
Number of relevant variables:    401
Number of functions:             87
Number of loops:                 19
Size of reached set:             421010
  Number of reached locations:   285 (13%)
    Avg states per location:     1477
    Max states per location:     9558 (at node N4472)
  Number of reached functions:   18 (21%)
  Number of partitions:          296634
    Avg size of partitions:      1
    Max size of partitions:      9552 (with key [N274 (before lines 3221-3243), Function CdAudioStartDevice called from node N558, stack depth 3 [658eb67b], stack [main, CdAudioPnp, CdAudioStartDevice], Init])
  Number of target states:       0
  Size of final wait list        19127

Time for analysis setup:          4.506s
  Time for loading CPAs:          0.470s
  Time for loading parser:        0.597s
  Time for CFA construction:      3.356s
    Time for parsing file(s):     0.847s
    Time for AST to CFA:          1.500s
    Time for CFA sanity check:    0.124s
    Time for post-processing:     0.736s
      Time for var class.:        0.000s
Time for Analysis:              875.317s
CPU time for analysis:          891.830s
Total time for CPAchecker:      879.828s
Total CPU time for CPAchecker:  900.050s

Time for Garbage Collector:       6.654s (in 56 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3418MB (  3259 MiB) max;   1403MB (  1338 MiB) avg;   3951MB (  3768 MiB) peak
Used non-heap memory:             25MB (    23 MiB) max;     24MB (    23 MiB) avg;     25MB (    24 MiB) peak
Used in PS Old Gen pool:         606MB (   578 MiB) max;    359MB (   342 MiB) avg;    606MB (   578 MiB) peak
Allocated heap memory:          4753MB (  4533 MiB) max;   3432MB (  3273 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:  13602MB ( 12972 MiB) max;  13598MB ( 12968 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
