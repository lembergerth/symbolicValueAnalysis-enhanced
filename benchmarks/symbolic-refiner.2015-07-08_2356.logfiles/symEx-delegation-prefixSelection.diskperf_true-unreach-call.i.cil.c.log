scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=CONSTRAINTS_FIRST -setprop cpa.constraints.lessOrEqualType=SUBSET -setprop cegar.refiner=cpa.value.symbolic.refiner.delegation.SymbolicDelegatingRefiner -setprop cpa.value.refinement.pathSlicing=true -setprop cpa.value.refinement.prefixPreference=DOMAIN_GOOD_SHORT -timelimit 900s -stats -spec ../svcomp15/ntdrivers/ALL.prp ../svcomp15/ntdrivers/diskperf_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1796081827_tempdir
line 3041: Dereferencing of non-pointer type PULONG  in expression *InstanceLengthArray (ASTConverter.convert, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

Highest possible value reached in score computation. Error path prefix preference may not be applied reliably. (VariableClassification.obtainDomainTypeScoreForVariables, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 216423 (count: 9775, min: 0, max: 26, avg: 22.14)
Number of global variables:                          146372 (count: 9775, min: 0, max: 15, avg: 14.97)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  104166
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.890s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.362s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 1
Constraints after refinement in state: 0
Constraints before refinement in state: 3588
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 182ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.629s
  Time for transition matches:                         0.250s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       147054 (count: 147054, min: 1, max: 1, avg: 1.00) [1 x 147054]

CPA algorithm statistics
------------------------
Number of iterations:            96683
Max size of waitlist:            148
Average size of waitlist:        59
Number of computed successors:   104166
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         6764
Number of times breaked:         61

Total time for CPA algorithm:        15.283s (Max:     2.582s)
  Time for choose from waitlist:      0.154s
  Time for precision adjustment:      1.875s
  Time for transfer relation:        11.668s
  Time for stop operator:             0.530s
  Time for adding to reached set:     0.360s

SymbolicDelegatingRefiner statistics
------------------------------------
Explicit refinements: 61
Successful explicit refinements: 61
Symbolic refinements: 0
Successful symbolic refinements: 0
Overall explicit refinement time: 3651ms
Average explicit refinement time: 59ms
Overall symbolic refinement time: 0ms
Average symbolic refinement time: 0ms

CEGAR algorithm statistics
--------------------------
Number of refinements:                61
Number of successful refinements:     61
Number of failed refinements:         0
Max. size of reached set before ref.: 18208
Max. size of reached set after ref.:  15397
Avg. size of reached set before ref.: 7368.56
Avg. size of reached set after ref.:  5932.03

Total time for CEGAR algorithm:      19.202s
Time for refinements:                 3.651s
Average time for refinement:          0.059s
Max time for refinement:              0.595s

Code Coverage
-----------------------------
  Function coverage:      0.299
  Visited lines:          2293
  Total lines:            2837
  Line coverage:          0.808
  Visited conditions:     128
  Total conditions:       270
  Condition coverage:     0.474

CPAchecker general statistics
-----------------------------
Number of program locations:     967
Number of CFA edges:             1199
Number of relevant variables:    243
Number of functions:             87
Number of loops:                 2
Size of reached set:             9775
  Number of reached locations:   427 (44%)
    Avg states per location:     22
    Max states per location:     174 (at node N1279)
  Number of reached functions:   26 (30%)
  Number of partitions:          6961
    Avg size of partitions:      1
    Max size of partitions:      27 (with key [N830 (exit of function main in lines 3175-3348), Function main called from node N831, stack depth 1 [2d8ef741], stack [main], Init])
  Number of target states:       0

Time for analysis setup:          2.927s
  Time for loading CPAs:          0.464s
  Time for loading parser:        0.569s
  Time for CFA construction:      1.818s
    Time for parsing file(s):     0.588s
    Time for AST to CFA:          0.674s
    Time for CFA sanity check:    0.101s
    Time for post-processing:     0.355s
      Time for var class.:        0.000s
Time for Analysis:               19.202s
CPU time for analysis:           26.970s
Total time for CPAchecker:       22.134s
Total CPU time for CPAchecker:   31.860s

Time for Garbage Collector:       0.351s (in 3 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               1082MB (  1032 MiB) max;    358MB (   342 MiB) avg;   1085MB (  1035 MiB) peak
Used non-heap memory:             24MB (    22 MiB) max;     21MB (    20 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2553MB (  2435 MiB) max;   2250MB (  2146 MiB) avg
Allocated non-heap memory:        26MB (    25 MiB) max;     25MB (    24 MiB) avg
Total process virtual memory:  13599MB ( 12969 MiB) max;  13597MB ( 12967 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
