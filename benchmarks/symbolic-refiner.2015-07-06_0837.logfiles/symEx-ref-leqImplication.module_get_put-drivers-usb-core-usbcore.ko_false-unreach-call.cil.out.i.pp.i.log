scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=CONSTRAINTS_FIRST -setprop cpa.constraints.lessOrEqualType=IMPLICATION -setprop cpa.value.refinement.pathSlicing=false -setprop cpa.value.refinement.prefixPreference=NONE -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.0/ALL.prp ../svcomp15/ldv-linux-3.0/module_get_put-drivers-usb-core-usbcore.ko_false-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1964307156_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 31824: Function pointer *(ops->alloc_coherent) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31879: Function pointer *(ops->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16120: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16023: Function pointer *(ops->map_sg) with type int (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 15895-15896: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16165: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16073: Function pointer *(ops->unmap_sg) with type void (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15945: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8485: Function pointer *(hcd->driver->update_hub_device) with type int (*)(struct usb_hcd *, struct usb_device *, struct usb_tt *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9501: Function pointer *(hcd->driver->update_hub_device) with type int (*)(struct usb_hcd *, struct usb_device *, struct usb_tt *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10418: Function pointer *(hcd->driver->free_dev) with type void (*)(struct usb_hcd *, struct usb_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13848: Function pointer *(hcd->driver->relinquish_port) with type void (*)(struct usb_hcd *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8063: Function pointer *(drv->clear_tt_buffer_complete) with type void (*)(struct usb_hcd *, struct usb_host_endpoint *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 35190: Function pointer *(p->qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46240: Function pointer *(hcd->driver->pci_resume) with type int (*)(struct usb_hcd *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 17190-17192: Function pointer *(hcd->driver->hub_control) with type int (*)(struct usb_hcd *, u16 , u16 , u16 , char *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46063: Function pointer *(hcd->driver->pci_suspend) with type int (*)(struct usb_hcd *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46100: Function pointer *(hcd->driver->pci_resume) with type int (*)(struct usb_hcd *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18390: Function pointer *(hcd->driver->unmap_urb_for_dma) with type void (*)(struct usb_hcd *, struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 19649-19650: Function pointer *(hcd->driver->alloc_streams) with type int (*)(struct usb_hcd *, struct usb_device *, struct usb_host_endpoint **, unsigned int, unsigned int, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19714: Function pointer *(hcd->driver->free_streams) with type int (*)(struct usb_hcd *, struct usb_device *, struct usb_host_endpoint **, unsigned int, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19486: Function pointer *(hcd->driver->reset_bandwidth) with type void (*)(struct usb_hcd *, struct usb_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19512: Function pointer *(hcd->driver->endpoint_disable) with type void (*)(struct usb_hcd *, struct usb_host_endpoint *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19544: Function pointer *(hcd->driver->endpoint_reset) with type void (*)(struct usb_hcd *, struct usb_host_endpoint *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16465: Function pointer *(mon_ops->urb_complete) with type void (*)(struct usb_bus *, struct urb *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16428: Function pointer *(mon_ops->urb_submit) with type void (*)(struct usb_bus *, struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16447: Function pointer *(mon_ops->urb_submit_error) with type void (*)(struct usb_bus *, struct urb *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Skipping recursive function call from dma_mapping_error to hub_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_unlink_urb to usb_hcd_unlink_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from set_port_feature to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_activate to usb_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from get_port_status to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from clear_port_feature to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from recursively_mark_NOTATTACHED to recursively_mark_NOTATTACHED (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_hcd_alloc_bandwidth to hub_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_hcd_alloc_bandwidth to usbdev_release (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_hcd_alloc_bandwidth to usb_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usbdev_remove to destroy_all_async (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_get_string to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_hcd_flush_endpoint to usb_kill_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_hcd_flush_endpoint to unlink1 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_set_configuration to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_quiesce to usb_kill_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_disconnect to usb_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_port_reset to hub_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_port_reset to usbdev_release (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_port_reset to usb_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_port_init to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_set_address to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_set_address to hub_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_set_address to usbdev_release (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_set_address to usb_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_get_descriptor to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_port_init to hub_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_port_init to usbdev_release (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_port_init to usb_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_reset_and_verify_device to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_set_interface to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_clear_halt to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_get_status to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from finish_port_resume to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_dev_thaw to usb_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_dev_restore to usb_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_unbind_device to usb_dev_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_reset_device to usb_unbind_device (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_runtime_resume to usb_resume_both (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_unbind_interface to usb_dev_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_unbind_interface to __usb_queue_reset_device (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_irq to usb_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_clear_tt_buffer to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from destroy_async_on_interface to destroy_async (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_hcd_poll_rh_status to hub_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_hcd_poll_rh_status to usbdev_release (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_hcd_poll_rh_status to usb_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_hcd_poll_rh_status to usb_hcd_giveback_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_suspend_interface to generic_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_port_suspend to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hcd_bus_suspend to usb_unbind_device (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hcd_bus_suspend to usb_dev_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_runtime_suspend to usb_suspend_both (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_probe_interface to hub_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_probe_interface to usbdev_release (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_probe_interface to usb_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_dev_freeze to usb_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_probe_device to usb_unbind_device (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_probe_device to usb_dev_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_probe_device to usb_probe_device (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_dev_poweroff to usb_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_events to usb_reset_device (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from get_hub_status to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from clear_hub_feature to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_alloc_dev to hub_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_alloc_dev to usbdev_release (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_alloc_dev to usb_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_enumerate_device_otg to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_port_connect_change to generic_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_port_connect_change to generic_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_dev_resume to usb_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_suspend_device to generic_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_resume_interface to usb_unbind_device (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_resume_interface to usb_dev_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hcd_bus_suspend to usb_probe_device (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hcd_bus_suspend to hub_thread (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_probe_device to hub_thread (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_suspend to usb_suspend_both (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hcd_bus_suspend to usb_runtime_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                      0 (count: 5922315, min: 0, max: 0, avg: 0.00)
Number of global variables:                               0 (count: 5922315, min: 0, max: 0, avg: 0.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 6724118
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                8.279s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:    70.032s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 32826ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 66.855s
  Time for transition matches:                        15.193s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      9394652 (count: 9394652, min: 1, max: 1, avg: 1.00) [1 x 9394652]

CPA algorithm statistics
------------------------
Number of iterations:            5922090
Max size of waitlist:            295
Average size of waitlist:        233
Number of computed successors:   6724118
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         801804
Number of times breaked:         0

Total time for CPA algorithm:       560.274s (Max:   560.274s)
  Time for choose from waitlist:      5.978s
  Time for precision adjustment:     75.040s
  Time for transfer relation:       419.624s
  Time for stop operator:            11.566s
  Time for adding to reached set:    16.731s

SymbolicValueAnalysisRefiner statistics
---------------------------------------
Total number of refinements:              0
Total number of targets found:            0
Time for completing refinement:           0.000s
  Time for interpolation:                              0.000s
  Number of interpolations:                               0
  Number of interpolation queries:                        0 (count: 0, min: 0, max: 0, avg: 0.00)
  Size of interpolant:                                    0 (count: 0, min: 0, max: 0, avg: 0.00)
  Number of sliced prefixes:                              0 (count: 0, min: 0, max: 0, avg: 0.00)

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.605
  Visited lines:          16515
  Total lines:            26572
  Line coverage:          0.622
  Visited conditions:     3750
  Total conditions:       6114
  Condition coverage:     0.613

CPAchecker general statistics
-----------------------------
Number of program locations:     16072
Number of CFA edges:             23181
Number of relevant variables:    4488
Number of functions:             699
Number of loops:                 162
Size of reached set:             5922315
  Size of final wait list        225

Time for analysis setup:         10.611s
  Time for loading CPAs:          0.692s
  Time for loading parser:        0.588s
  Time for CFA construction:      9.258s
    Time for parsing file(s):     2.386s
    Time for AST to CFA:          3.184s
    Time for CFA sanity check:    0.374s
    Time for post-processing:     2.970s
      Time for var class.:        0.000s
Time for Analysis:              560.274s
CPU time for analysis:          883.030s
Total time for CPAchecker:      570.891s
Total CPU time for CPAchecker:  903.050s

Time for Garbage Collector:     319.861s (in 42 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               7978MB (  7609 MiB) max;   3988MB (  3803 MiB) avg;  10439MB (  9955 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     22MB (    21 MiB) avg;     25MB (    24 MiB) peak
Used in PS Old Gen pool:        6977MB (  6654 MiB) max;   2853MB (  2721 MiB) avg;   6977MB (  6654 MiB) peak
Allocated heap memory:          9320MB (  8889 MiB) max;   6265MB (  5975 MiB) avg
Allocated non-heap memory:        47MB (    45 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  13597MB ( 12967 MiB) max;  13596MB ( 12966 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
