scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=CONSTRAINTS_FIRST -setprop cpa.constraints.lessOrEqualType=IMPLICATION -setprop cpa.value.refinement.pathSlicing=false -setprop cpa.value.refinement.prefixPreference=NONE -setprop cpa.constraints.refinement.precisionType=LOCATION -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.0/ALL.prp ../svcomp15/ldv-linux-3.0/usb_urb-drivers-mtd-sm_ftl.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1158755430_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Skipping recursive function call from sm_read_cis to sm_read_sector (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_read_sector to sm_write (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_read to sm_get_zone (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_read to sm_read_sector (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_read_sector to sm_recheck_media (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_mark_block_bad to sm_write_sector (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_write to sm_cache_flush (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_write to sm_get_zone (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_read_sector to sm_read (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_init_zone to sm_read_sector (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_check_block to sm_read_sector (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_mark_block_bad to sm_recheck_media (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_erase_block to sm_mark_block_bad (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_check_block to sm_erase_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_init_zone to sm_erase_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_write_sector to sm_write (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_write_sector to sm_read (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_cache_flush to sm_read_sector (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_write_sector to sm_recheck_media (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_write_block to sm_mark_block_bad (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_write_block to sm_erase_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_cache_flush to sm_erase_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_write_block to sm_write_sector (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_recheck_media to sm_read_cis (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 253364 (count: 126684, min: 0, max: 2, avg: 2.00)
Number of global variables:                          253364 (count: 126684, min: 0, max: 2, avg: 2.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  444379
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                1.268s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     1.041s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 662ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.711s
  Time for transition matches:                         0.992s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       698875 (count: 698875, min: 1, max: 1, avg: 1.00) [1 x 698875]

CPA algorithm statistics
------------------------
Number of iterations:            380046
Max size of waitlist:            54
Average size of waitlist:        30
Number of computed successors:   444379
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         64332
Number of times breaked:         2

Total time for CPA algorithm:        21.765s (Max:     9.788s)
  Time for choose from waitlist:      0.417s
  Time for precision adjustment:      3.764s
  Time for transfer relation:        13.710s
  Time for stop operator:             0.854s
  Time for adding to reached set:     0.986s

SymbolicValueAnalysisRefiner statistics
---------------------------------------
Total number of refinements:              2
Total number of targets found:            2
Time for completing refinement:           5.104s
  Time for interpolation:                              3.398s
  Number of interpolations:                               2
  Number of interpolation queries:                      378 (count: 62, min: 0, max: 142, avg: 6.10)
  Size of interpolant:                                   50 (count: 62, min: 0, max: 1, avg: 0.81)
  Number of sliced prefixes:                              0 (count: 0, min: 0, max: 0, avg: 0.00)

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 126685
Max. size of reached set after ref.:  2
Avg. size of reached set before ref.: 126684.00
Avg. size of reached set after ref.:  2.00

Total time for CEGAR algorithm:      26.993s
Time for refinements:                 5.228s
Average time for refinement:          2.614s
Max time for refinement:              2.924s

Code Coverage
-----------------------------
  Function coverage:      0.815
  Visited lines:          5413
  Total lines:            5556
  Line coverage:          0.974
  Visited conditions:     430
  Total conditions:       448
  Condition coverage:     0.960

CPAchecker general statistics
-----------------------------
Number of program locations:     1317
Number of CFA edges:             1701
Number of relevant variables:    454
Number of functions:             65
Number of loops:                 14
Size of reached set:             126684
  Number of reached locations:   1221 (93%)
    Avg states per location:     103
    Max states per location:     1347 (at node N11)
  Number of reached functions:   53 (82%)
  Number of partitions:          126684
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.533s
  Time for loading CPAs:          0.465s
  Time for loading parser:        0.620s
  Time for CFA construction:      2.374s
    Time for parsing file(s):     0.797s
    Time for AST to CFA:          0.811s
    Time for CFA sanity check:    0.084s
    Time for post-processing:     0.462s
      Time for var class.:        0.000s
Time for Analysis:               26.993s
CPU time for analysis:           36.010s
Total time for CPAchecker:       30.531s
Total CPU time for CPAchecker:   42.120s

Time for Garbage Collector:       0.936s (in 4 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               1369MB (  1305 MiB) max;    547MB (   522 MiB) avg;   1452MB (  1385 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     21MB (    20 MiB) avg;     24MB (    22 MiB) peak
Used in PS Old Gen pool:          88MB (    84 MiB) max;     39MB (    37 MiB) avg;     88MB (    84 MiB) peak
Allocated heap memory:          3611MB (  3444 MiB) max;   2524MB (  2407 MiB) avg
Allocated non-heap memory:        26MB (    25 MiB) max;     25MB (    24 MiB) avg
Total process virtual memory:  13597MB ( 12967 MiB) max;  13595MB ( 12965 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
