scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-sound--pci--cs46xx--snd-cs46xx.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-834514373_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 12191: Ignoring function call through function pointer *(chip->active_ctrl): (*(chip->active_ctrl))(chip, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7952: Ignoring function call through function pointer *(chip->active_ctrl): (*(chip->active_ctrl))(chip, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from snd_cs46xx_codec_read to amp_voyetra (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8072: Ignoring function call through function pointer *(chip->active_ctrl): (*(chip->active_ctrl))(chip, -1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8152: Ignoring function call through function pointer *(chip->active_ctrl): (*(chip->active_ctrl))(chip, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from snd_cs46xx_codec_write to amp_voyetra (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8200: Ignoring function call through function pointer *(chip->active_ctrl): (*(chip->active_ctrl))(chip, -1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12241: Ignoring function call through function pointer *(chip->active_ctrl): (*(chip->active_ctrl))(chip, -1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12127: Ignoring function call through function pointer *(chip->active_ctrl): (*(chip->active_ctrl))(chip, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12177: Ignoring function call through function pointer *(chip->active_ctrl): (*(chip->active_ctrl))(chip, -1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10608: Ignoring function call through function pointer *(chip->active_ctrl): (*(chip->active_ctrl))(chip, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10672: Ignoring function call through function pointer *(chip->active_ctrl): (*(chip->active_ctrl))(chip, -1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Destroying the void * pointer  ldv_main_exported_8::tmp___0 produces garbage! (in the following line(s):
 line 6727:	N422 -{ldv_main_exported_8();}-> N424) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_3::tmp___0 produces garbage! (in the following line(s):
 line 6677:	N387 -{ldv_main_exported_3();}-> N389) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

line 14010: Ignoring function call through function pointer *(chip->active_ctrl): (*(chip->active_ctrl))(chip, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14084: Ignoring function call through function pointer *(chip->active_ctrl): (*(chip->active_ctrl))(chip, -1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14081: Ignoring function call through function pointer *(chip->amplifier_ctrl): (*(chip->amplifier_ctrl))(chip, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13943: Ignoring function call through function pointer *(chip->amplifier_ctrl): (*(chip->amplifier_ctrl))(chip, -(chip->amplifier)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13947: Ignoring function call through function pointer *(chip->active_ctrl): (*(chip->active_ctrl))(chip, -(chip->amplifier)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7717: Ignoring function call through function pointer *(substream->ops->ack): (*(substream->ops->ack))(substream); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10654: Ignoring function call through function pointer *(chip->active_ctrl): (*(chip->active_ctrl))(chip, -1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12825: Ignoring function call through function pointer *(chip->active_ctrl): (*(chip->active_ctrl))(chip, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12835: Ignoring function call through function pointer *(chip->amplifier_ctrl): (*(chip->amplifier_ctrl))(chip, -(chip->amplifier)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12859: Ignoring function call through function pointer *(chip->active_ctrl): (*(chip->active_ctrl))(chip, -(chip->amplifier)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               13673973 (count: 1150980, min: 0, max: 12, avg: 11.88)
Number of global variables:                        12660758 (count: 1150980, min: 0, max: 11, avg: 11.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 2325897
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               12.137s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:   100.551s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 1
Most constraints before refinement in state: 1
Constraints after refinement in state: 70941
Constraints before refinement in state: 86473
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 7155ms

PredicateCPA statistics
-----------------------
Number of abstractions:            2325885 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  559499 (24%)
  Because of loop head:            53214 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       2325885 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   12
  Times result was 'false':        0 (0%)
Number of coverage checks:         240983
  BDD entailment checks:           240983
Number of SMT sat checks:          12
  trivial:                         12
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          13
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   3441269 (83%)

Time for post operator:                312.914s
  Time for path formula creation:      307.459s
    Actual computation:                274.373s
Time for strengthen operator:            3.340s
  Time for satisfiability checks:        0.000s
Time for prec operator:                 91.219s
  Time for abstraction:                 32.940s (Max:     1.040s, Count: 2325885)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 1.347s
  Time for BDD entailment checks:        0.827s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 2566894, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             2.838s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 18.022s
  Time for transition matches:                         7.435s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      3434756 (count: 3434756, min: 1, max: 1, avg: 1.00) [1 x 3434756]

CPA algorithm statistics
------------------------
Number of iterations:            2084454
Max size of waitlist:            51
Average size of waitlist:        34
Number of computed successors:   2325897
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         240983
Number of times breaked:         12

Total time for CPA algorithm:       713.238s (Max:   579.357s)
  Time for choose from waitlist:      2.818s
  Time for precision adjustment:    125.194s
  Time for transfer relation:       517.545s
  Time for merge operator:            6.332s
  Time for stop operator:            36.076s
  Time for adding to reached set:     7.526s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                5501 (count: 12, min: 51, max: 775, avg: 458.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  16.160s
  Counterexample analysis:                9.538s (Max:     1.239s, Calls: 12)
    Refinement sat check:                 6.874s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.004s
  Building the counterexample trace:                   9.538s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.015s
  ARG update:                                          0.000s

Length of refined path (in blocks):                    1634 (count: 12, min: 19, max: 770, avg: 136.17)
Number of affected states:                              433 (count: 12, min: 4, max: 287, avg: 36.08)
Length (states) of path with itp 'true':               1189 (count: 12, min: 14, max: 567, avg: 99.08)
Length (states) of path with itp non-trivial itp:       433 (count: 12, min: 4, max: 287, avg: 36.08)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 12, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             421 (count: 12, min: 3, max: 286, avg: 35.08)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 173080
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 77828.92
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     729.738s
Time for refinements:                16.499s
Average time for refinement:          1.374s
Max time for refinement:              2.777s

Code Coverage
-----------------------------
  Function coverage:      0.455
  Visited lines:          9440
  Total lines:            15657
  Line coverage:          0.603
  Visited conditions:     1120
  Total conditions:       2872
  Condition coverage:     0.390

CPAchecker general statistics
-----------------------------
Number of program locations:     7548
Number of CFA edges:             11221
Number of relevant variables:    2220
Number of functions:             301
Number of loops:                 81
Size of reached set:             1150980
  Size of final wait list        47

Time for analysis setup:          7.672s
  Time for loading CPAs:          0.771s
  Time for loading parser:        0.574s
  Time for CFA construction:      6.254s
    Time for parsing file(s):     1.686s
    Time for AST to CFA:          2.087s
    Time for CFA sanity check:    0.367s
    Time for post-processing:     1.858s
      Time for var class.:        0.000s
Time for Analysis:              729.739s
CPU time for analysis:          885.790s
Total time for CPAchecker:      737.416s
Total CPU time for CPAchecker:  900.060s

Time for Garbage Collector:     140.880s (in 61 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               8589MB (  8191 MiB) max;   3578MB (  3412 MiB) avg;  10535MB ( 10047 MiB) peak
Used non-heap memory:             28MB (    26 MiB) max;     25MB (    24 MiB) avg;     28MB (    27 MiB) peak
Used in PS Old Gen pool:        6483MB (  6182 MiB) max;   2116MB (  2018 MiB) avg;   6483MB (  6182 MiB) peak
Allocated heap memory:          9613MB (  9168 MiB) max;   5834MB (  5564 MiB) avg
Allocated non-heap memory:        52MB (    49 MiB) max;     41MB (    40 MiB) avg
Total process virtual memory:  13798MB ( 13159 MiB) max;  13599MB ( 12969 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
