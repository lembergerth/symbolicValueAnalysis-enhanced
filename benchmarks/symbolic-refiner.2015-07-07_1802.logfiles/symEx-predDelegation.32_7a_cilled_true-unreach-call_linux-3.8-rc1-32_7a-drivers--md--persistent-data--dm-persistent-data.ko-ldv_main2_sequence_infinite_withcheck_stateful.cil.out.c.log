scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--md--persistent-data--dm-persistent-data.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1000884935_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11518: Function pointer *(info->value_type.dec) with type void (*)(void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13856: Function pointer *(info->value_type.dec) with type void (*)(void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11158: Function pointer *(vt->inc) with type void (*)(void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12303: Function pointer *(info->value_type.dec) with type void (*)(void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12292: Function pointer *(info->value_type.dec) with type void (*)(void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 7070: Ignoring function call through function pointer *(ll->commit): r = (*(ll->commit))(ll); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from sm_ll_commit to sm_disk_commit (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10078: Ignoring function call through function pointer *(sm->count_is_more_than_one): tmp = (*(sm->count_is_more_than_one))(sm, b, result); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6653: Ignoring function call through function pointer *(ll->load_ie): r = (*(ll->load_ie))(ll, index, &ie_disk); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from sm_ll_lookup_bitmap to sm_disk_count_is_more_than_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_metadata_count_is_more_than_one to sm_ll_lookup_bitmap (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_metadata_get_count to sm_ll_lookup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_lookup_bitmap to sm_disk_get_count (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from bn_shadow to dm_tm_shadow_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_dec to sm_ll_lookup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6887: Ignoring function call through function pointer *(ll->load_ie): r = (*(ll->load_ie))(ll, index, &ie_disk); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from sm_ll_insert to sm_disk_count_is_more_than_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_insert to sm_disk_get_count (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_insert to disk_ll_save_ie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5412: Ignoring function call through function pointer *(v->check): r = (*(v->check))(v, (struct dm_block *)buf, (size_t )tmp); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from dm_bm_validate_buffer to sm_disk_count_is_more_than_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_bm_validate_buffer to sm_disk_get_count (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_bm_validate_buffer to disk_ll_save_ie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_bm_validate_buffer to disk_ll_load_ie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_insert to dm_tm_shadow_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_insert to dm_btree_insert (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from remove_raw to shadow_step (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from bn_read_lock to dm_tm_read_lock (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from init_child to dm_tm_shadow_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from init_child to inc_children (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10114: Ignoring function call through function pointer *(sm->dec_block): tmp = (*(sm->dec_block))(sm, b); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from dm_sm_dec_block to sm_metadata_dec_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6776: Ignoring function call through function pointer *(ll->load_ie): r = (*(ll->load_ie))(ll, i, &ie_disk); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from sm_ll_find_free_block to sm_disk_count_is_more_than_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_find_free_block to sm_disk_get_count (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_find_free_block to disk_ll_save_ie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_inc to sm_ll_lookup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_inc to sm_ll_insert (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_disk_dec_block to sm_ll_dec (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_disk_dec_block to sm_ll_lookup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from commit_bop to sm_ll_dec (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6565: Ignoring function call through function pointer *(ll->max_entries): tmp = (*(ll->max_entries))(ll); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10126: Ignoring function call through function pointer *(sm->new_block): tmp = (*(sm->new_block))(sm, b); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from dm_sm_new_block to sm_metadata_dec_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_sm_new_block to sm_disk_extend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_tm_new_block to dm_sm_dec_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6605: Ignoring function call through function pointer *(ll->save_ie): r = (*(ll->save_ie))(ll, i, &idx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from sm_ll_extend to sm_disk_count_is_more_than_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_extend to sm_disk_get_count (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_extend to disk_ll_save_ie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13856: Ignoring function call through function pointer *(info->value_type.dec): (*(info->value_type.dec))(info->value_type.context, tmp___3); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7001: Ignoring function call through function pointer *(ll->save_ie): tmp = (*(ll->save_ie))(ll, index, &ie_disk); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from sm_metadata_inc_block to out (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_metadata_new_block_ to out (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_disk_new_block to sm_ll_inc (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_ll_dec to sm_ll_insert (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_metadata_inc_block to sm_ll_inc (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_disk_inc_block to sm_ll_inc (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_metadata_new_block_ to sm_ll_inc (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from commit_bop to sm_ll_inc (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_sm_dec_block to sm_disk_new_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_sm_new_block to sm_disk_new_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_metadata_dec_block to sm_ll_dec (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_sm_dec_block to sm_disk_dec_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_sm_new_block to sm_disk_dec_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_sm_dec_block to sm_metadata_inc_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_sm_new_block to sm_metadata_inc_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_metadata_dec_block to out (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_sm_dec_block to sm_disk_inc_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_sm_new_block to sm_disk_inc_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                6958872 (count: 2319626, min: 0, max: 3, avg: 3.00)
Number of global variables:                         6958872 (count: 2319626, min: 0, max: 3, avg: 3.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 2511425
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                8.873s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     8.505s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 34420ms

PredicateCPA statistics
-----------------------
Number of abstractions:            2511422 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  590757 (24%)
  Because of loop head:            76301 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       2511422 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   3
  Times result was 'false':        0 (0%)
Number of coverage checks:         191737
  BDD entailment checks:           191737
Number of SMT sat checks:          3
  trivial:                         3
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          4
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   2251396 (60%)

Time for post operator:                241.212s
  Time for path formula creation:      227.804s
    Actual computation:                162.339s
Time for strengthen operator:            6.712s
  Time for satisfiability checks:        0.000s
Time for prec operator:                129.951s
  Time for abstraction:                 39.360s (Max:     1.861s, Count: 2511422)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 2.682s
  Time for BDD entailment checks:        1.650s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 2703167, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             7.195s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                112.693s
  Time for transition matches:                        18.607s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      3775619 (count: 3775619, min: 1, max: 1, avg: 1.00) [1 x 3775619]

CPA algorithm statistics
------------------------
Number of iterations:            2319593
Max size of waitlist:            158
Average size of waitlist:        108
Number of computed successors:   2511425
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         191737
Number of times breaked:         3

Total time for CPA algorithm:       744.608s (Max:   744.252s)
  Time for choose from waitlist:      6.306s
  Time for precision adjustment:    232.422s
  Time for transfer relation:       442.219s
  Time for merge operator:            0.704s
  Time for stop operator:            10.939s
  Time for adding to reached set:    14.419s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  57 (count: 3, min: 17, max: 21, avg: 19.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.219s
  Counterexample analysis:                0.191s (Max:     0.068s, Calls: 3)
    Refinement sat check:                 0.155s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.191s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.005s
  ARG update:                                          0.000s

Length of refined path (in blocks):                      45 (count: 3, min: 13, max: 17, avg: 15.00)
Number of affected states:                               30 (count: 3, min: 8, max: 12, avg: 10.00)
Length (states) of path with itp 'true':                 12 (count: 3, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:        30 (count: 3, min: 8, max: 12, avg: 10.00)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              27 (count: 3, min: 7, max: 11, avg: 9.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 24
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 22.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     744.837s
Time for refinements:                 0.229s
Average time for refinement:          0.076s
Max time for refinement:              0.099s

Code Coverage
-----------------------------
  Function coverage:      0.522
  Visited lines:          6024
  Total lines:            8043
  Line coverage:          0.749
  Visited conditions:     917
  Total conditions:       1596
  Condition coverage:     0.575

CPAchecker general statistics
-----------------------------
Number of program locations:     4757
Number of CFA edges:             7357
Number of relevant variables:    1637
Number of functions:             318
Number of loops:                 36
Size of reached set:             2319626
  Size of final wait list        90

Time for analysis setup:          6.112s
  Time for loading CPAs:          0.805s
  Time for loading parser:        0.531s
  Time for CFA construction:      4.665s
    Time for parsing file(s):     1.057s
    Time for AST to CFA:          1.714s
    Time for CFA sanity check:    0.147s
    Time for post-processing:     1.455s
      Time for var class.:        0.000s
Time for Analysis:              744.837s
CPU time for analysis:          916.740s
Total time for CPAchecker:      750.954s
Total CPU time for CPAchecker:  928.120s

Time for Garbage Collector:     160.510s (in 39 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6156MB (  5871 MiB) max;   3310MB (  3156 MiB) avg;   8280MB (  7896 MiB) peak
Used non-heap memory:             27MB (    25 MiB) max;     24MB (    23 MiB) avg;     27MB (    25 MiB) peak
Used in PS Old Gen pool:        4397MB (  4193 MiB) max;   2066MB (  1970 MiB) avg;   4397MB (  4193 MiB) peak
Allocated heap memory:          8950MB (  8536 MiB) max;   5259MB (  5015 MiB) avg
Allocated non-heap memory:        50MB (    48 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:  13597MB ( 12967 MiB) max;  13596MB ( 12967 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
