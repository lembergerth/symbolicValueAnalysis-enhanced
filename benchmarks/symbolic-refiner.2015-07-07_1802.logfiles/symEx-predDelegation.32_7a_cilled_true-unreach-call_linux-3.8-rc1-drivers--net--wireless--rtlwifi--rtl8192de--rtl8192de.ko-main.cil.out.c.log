scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--net--wireless--rtlwifi--rtl8192de--rtl8192de.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-640286607_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 14219: Function pointer *(rtlpriv->cfg->ops->fill_tx_cmddesc) with type void (*)(struct ieee80211_hw *, u8 *, bool , bool , struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18695: Function pointer *(rtlpriv->intf_ops->read_efuse_byte) with type void (*)(struct ieee80211_hw *, u16 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18697: Function pointer *(rtlpriv->intf_ops->read_efuse_byte) with type void (*)(struct ieee80211_hw *, u16 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19200: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 37592-37593: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9934: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24139: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24132: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16690: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15200: Function pointer *(rtlpriv->cfg->ops->get_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16923: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17322: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17333: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15707: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15494: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19932: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19942: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14903: Function pointer *(rtlpriv->io.read16_sync) with type u16  (*)(struct rtl_priv *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14918: Function pointer *(rtlpriv->io.read16_sync) with type u16  (*)(struct rtl_priv *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 7964: Ignoring function call through function pointer *(rtlpriv->cfg->ops->get_bbreg): tmp = (*(rtlpriv->cfg->ops->get_bbreg))(hw, regaddr, bitmask); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14914: Ignoring function call through function pointer *(rtlpriv->io.write16_async): (*(rtlpriv->io.write16_async))(rtlpriv, addr, (int)val16); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7943: Ignoring function call through function pointer *(rtlpriv->io.write32_async): (*(rtlpriv->io.write32_async))(rtlpriv, addr, val32); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rtl_write_dword to rtl92de_update_interrupt_mask (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7947: Ignoring function call through function pointer *(rtlpriv->io.read32_sync): (*(rtlpriv->io.read32_sync))(rtlpriv, addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7914: Ignoring function call through function pointer *(rtlpriv->io.read8_sync): tmp = (*(rtlpriv->io.read8_sync))(rtlpriv, addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7925: Ignoring function call through function pointer *(rtlpriv->io.write8_async): (*(rtlpriv->io.write8_async))(rtlpriv, addr, (int)val8); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rtl_write_byte to rtl92de_update_interrupt_mask (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7929: Ignoring function call through function pointer *(rtlpriv->io.read8_sync): (*(rtlpriv->io.read8_sync))(rtlpriv, addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rtl92de_sw_led_off to rtl_read_byte (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl92de_sw_led_off to rtl_write_byte (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl92de_sw_led_on to rtl_read_byte (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl92de_sw_led_on to rtl_write_byte (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl92d_phy_set_bw_mode to rtl_read_byte (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl92d_phy_set_bw_mode to rtl_write_byte (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7978: Ignoring function call through function pointer *(rtlpriv->cfg->ops->set_bbreg): (*(rtlpriv->cfg->ops->set_bbreg))(hw, regaddr, bitmask, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rtl92d_phy_set_bb_reg to rtl92de_read_dword_dbi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12184: Ignoring function call through function pointer *(rtlpriv->io.read32_sync): tmp = (*(rtlpriv->io.read32_sync))(rtlpriv, addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12184: Return type of function rtl92de_set_network_type is int, but result is used as type u32 : tmp = rtl92de_set_network_type(rtlpriv, addr); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl_read_dword to rtl92de_set_network_type (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl92de_write_dword_dbi to rtl_write_word (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl92de_write_dword_dbi to rtl_write_dword (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl92de_write_dword_dbi to rtl_write_byte (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl92d_phy_set_bb_reg to rtl_write_dword (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8007: Ignoring function call through function pointer *(rtlpriv->cfg->ops->set_rfreg): (*(rtlpriv->cfg->ops->set_rfreg))(hw, rfpath, regaddr, bitmask, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from _rtl92d_phy_rf_serial_read to rtl_get_bbreg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7929: Return type of function rtl92d_phy_set_rf_power_state is bool , but result is used as type u8 : rtl92d_phy_set_rf_power_state(rtlpriv, addr); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl_write_byte to rtl92d_phy_set_rf_power_state (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl92d_phy_set_bw_mode to rtl_set_bbreg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl92d_phy_rf6052_set_bandwidth to rtl_set_rfreg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7993: Ignoring function call through function pointer *(rtlpriv->cfg->ops->get_rfreg): tmp = (*(rtlpriv->cfg->ops->get_rfreg))(hw, rfpath, regaddr, bitmask); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rtl92d_phy_set_rf_reg to _rtl92d_phy_rf_serial_read (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from _rtl92d_phy_rf_serial_write to rtl_set_bbreg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 31230: Ignoring function call through function pointer *(rtlpriv->cfg->ops->led_control): (*(rtlpriv->cfg->ops->led_control))(hw, 7); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7929: Return type of function rtl92de_led_control is void, but result is used as type u8 : rtl92de_led_control(rtlpriv, addr); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl_write_byte to rtl92de_led_control (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7929: Return type of function rtl92d_phy_set_bw_mode is void, but result is used as type u8 : rtl92d_phy_set_bw_mode(rtlpriv, addr); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl_write_byte to rtl92d_phy_set_bw_mode (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 31230: Return type of function rtl92d_phy_set_rf_power_state is bool , but result is used as type void: rtl92d_phy_set_rf_power_state(hw, 7); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl92d_phy_set_rf_power_state to rtl92d_phy_set_rf_power_state (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 31227: Ignoring function call through function pointer *(rtlpriv->cfg->ops->led_control): (*(rtlpriv->cfg->ops->led_control))(hw, 3); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 31227: Return type of function rtl92d_phy_set_rf_power_state is bool , but result is used as type void: rtl92d_phy_set_rf_power_state(hw, 3); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 31190: Ignoring function call through function pointer *(rtlpriv->cfg->ops->led_control): (*(rtlpriv->cfg->ops->led_control))(hw, 3); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 31190: Return type of function rtl92d_phy_set_rf_power_state is bool , but result is used as type void: rtl92d_phy_set_rf_power_state(hw, 3); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 31187: Ignoring function call through function pointer *(rtlpriv->cfg->ops->led_control): (*(rtlpriv->cfg->ops->led_control))(hw, 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 31187: Return type of function rtl92d_phy_set_rf_power_state is bool , but result is used as type void: rtl92d_phy_set_rf_power_state(hw, 2); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from _rtl92d_phy_set_rfsleep to rtl_write_byte (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl92d_phy_set_rf_power_state to rtl92de_led_control (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from _rtl92d_phy_set_rfon to rtl_write_byte (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl92d_phy_set_rf_power_state to rtl92d_phy_set_bw_mode (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7914: Return type of function rtl92d_phy_set_rf_power_state is bool , but result is used as type u8 : tmp = rtl92d_phy_set_rf_power_state(rtlpriv, addr); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl_read_byte to rtl92d_phy_set_rf_power_state (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17290: Ignoring function call through function pointer *(rtlpriv->cfg->ops->led_control): (*(rtlpriv->cfg->ops->led_control))(hw, ledaction); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                      0 (count: 1640728, min: 0, max: 0, avg: 0.00)
Number of global variables:                               0 (count: 1640728, min: 0, max: 0, avg: 0.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 1843418
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                3.622s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     3.805s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 2428ms

PredicateCPA statistics
-----------------------
Number of abstractions:            1843418 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  448919 (24%)
  Because of loop head:            22851 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1843418 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         202691
  BDD entailment checks:           202691
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          0

Number of path formula cache hits:   2103109 (70%)

Time for post operator:                212.306s
  Time for path formula creation:      208.325s
    Actual computation:                175.844s
Time for strengthen operator:            2.362s
Time for prec operator:                 96.542s
  Time for abstraction:                 45.506s (Max:    24.086s, Count: 1843418)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 1.093s
  Time for BDD entailment checks:        0.704s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 2046110, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             1.985s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 13.526s
  Time for transition matches:                         5.622s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      2889224 (count: 2889224, min: 1, max: 1, avg: 1.00) [1 x 2889224]

CPA algorithm statistics
------------------------
Number of iterations:            1640644
Max size of waitlist:            92
Average size of waitlist:        78
Number of computed successors:   1843418
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         202691
Number of times breaked:         0

Total time for CPA algorithm:       802.116s (Max:   802.116s)
  Time for choose from waitlist:      2.048s
  Time for precision adjustment:    113.399s
  Time for transfer relation:       660.846s
  Time for merge operator:            0.504s
  Time for stop operator:             5.005s
  Time for adding to reached set:     6.423s

Predicate-Abstraction Refiner statistics
----------------------------------------
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.166
  Visited lines:          11512
  Total lines:            27106
  Line coverage:          0.425
  Visited conditions:     662
  Total conditions:       4648
  Condition coverage:     0.142

CPAchecker general statistics
-----------------------------
Number of program locations:     11984
Number of CFA edges:             19106
Number of relevant variables:    4146
Number of functions:             325
Number of loops:                 150
Size of reached set:             1640728
  Size of final wait list        84

Time for analysis setup:          9.833s
  Time for loading CPAs:          0.902s
  Time for loading parser:        0.494s
  Time for CFA construction:      8.367s
    Time for parsing file(s):     2.471s
    Time for AST to CFA:          2.769s
    Time for CFA sanity check:    0.483s
    Time for post-processing:     2.347s
      Time for var class.:        0.000s
Time for Analysis:              802.116s
CPU time for analysis:          881.540s
Total time for CPAchecker:      811.954s
Total CPU time for CPAchecker:  900.110s

Time for Garbage Collector:      67.791s (in 37 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4970MB (  4740 MiB) max;   2825MB (  2694 MiB) avg;   6673MB (  6364 MiB) peak
Used non-heap memory:             28MB (    26 MiB) max;     25MB (    24 MiB) avg;     28MB (    27 MiB) peak
Used in PS Old Gen pool:        2873MB (  2740 MiB) max;   1349MB (  1287 MiB) avg;   2873MB (  2740 MiB) peak
Allocated heap memory:          6716MB (  6405 MiB) max;   5117MB (  4879 MiB) avg
Allocated non-heap memory:        52MB (    49 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:  13597MB ( 12967 MiB) max;  13596MB ( 12966 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
