scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.12-rc1/ALL.prp ../svcomp15/ldv-linux-3.12-rc1/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--ttusb-dec--ttusb_dec.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1721902654_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8186: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8234: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8770-8772: Function pointer *(dec->audio_filter->feed->cb.ts) with type int (*)(u8 *, size_t , u8 *, size_t , struct dmx_ts_feed *, enum dmx_success ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9119-9120: Function pointer *(filter->feed->cb.sec) with type int (*)(u8 *, size_t , u8 *, size_t , struct dmx_section_filter *, enum dmx_success ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9042-9044: Function pointer *(dec->audio_filter->feed->cb.ts) with type int (*)(u8 *, size_t , u8 *, size_t , struct dmx_ts_feed *, enum dmx_success ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8945-8947: Function pointer *(dec->video_filter->feed->cb.ts) with type int (*)(u8 *, size_t , u8 *, size_t , struct dmx_ts_feed *, enum dmx_success ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8786-8788: Function pointer *(dec->video_filter->feed->cb.ts) with type int (*)(u8 *, size_t , u8 *, size_t , struct dmx_ts_feed *, enum dmx_success ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 8234: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11227: Ignoring function call through function pointer *(dec->demux.dmx.close): (*(dec->demux.dmx.close))(&(dec->demux.dmx)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12316: Ignoring call via function pointer completeFnInt for which no suitable target was found in line: (*completeFnInt)(usb_urb); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12316: Ignoring function call through function pointer *completeFnInt: (*completeFnInt)(usb_urb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ldv_usb_submit_urb_3 to ldv_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ldv_submit_urb to ttusb_dec_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ldv_usb_submit_urb_2 to ldv_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 9119-9120: Ignoring function call through function pointer *(filter->feed->cb.sec): (*(filter->feed->cb.sec))(((u8 *)packet) + 2U, (size_t )(length + -2), (u8 *)0U, 0UL, &(filter->filter), 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 9042-9044: Ignoring function call through function pointer *(dec->audio_filter->feed->cb.ts): (*(dec->audio_filter->feed->cb.ts))((u8 *)pva, (size_t )length, (u8 *)0U, 0UL, &(dec->audio_filter->feed->feed.ts), 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 8945-8947: Ignoring function call through function pointer *(dec->video_filter->feed->cb.ts): (*(dec->video_filter->feed->cb.ts))((u8 *)pva, (size_t )length, (u8 *)0U, 0UL, &(dec->video_filter->feed->feed.ts), 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12325: Ignoring call via function pointer completeFnBulk for which no suitable target was found in line: (*completeFnBulk)(usb_urb); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12325: Ignoring function call through function pointer *completeFnBulk: (*completeFnBulk)(usb_urb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11229: Ignoring function call through function pointer *(dec->demux.dmx.remove_frontend): (*(dec->demux.dmx.remove_frontend))(&(dec->demux.dmx), &(dec->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 8786-8788: Ignoring function call through function pointer *(dec->video_filter->feed->cb.ts): (*(dec->video_filter->feed->cb.ts))((u8 *)data, 188UL, (u8 *)0U, 0UL, &(dec->video_filter->feed->feed.ts), 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 8770-8772: Ignoring function call through function pointer *(dec->audio_filter->feed->cb.ts): (*(dec->audio_filter->feed->cb.ts))((u8 *)data, 188UL, (u8 *)0U, 0UL, &(dec->audio_filter->feed->feed.ts), 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8186: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11170: Ignoring function call through function pointer *(dec->demux.dmx.add_frontend): result = (*(dec->demux.dmx.add_frontend))(&(dec->demux.dmx), &(dec->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ttusb_dec_init_dvb to ttusb_dec_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11187: Ignoring function call through function pointer *(dec->demux.dmx.connect_frontend): result = (*(dec->demux.dmx.connect_frontend))(&(dec->demux.dmx), &(dec->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11193: Ignoring function call through function pointer *(dec->demux.dmx.remove_frontend): (*(dec->demux.dmx.remove_frontend))(&(dec->demux.dmx), &(dec->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11545: Ignoring function call through function pointer *(dec->fe->ops.release): (*(dec->fe->ops.release))(dec->fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ldv_submit_urb to ttusb_dec_process_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ttusb_dec_probe to ttusb_dec_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ldv_submit_urb to ttusb_dec_handle_irq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11241: Ignoring function call through function pointer *(dec->fe->ops.release): (*(dec->fe->ops.release))(dec->fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ttusb_dec_exit_dvb to ttusb_dec_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ldv_usb_submit_urb_4 to ldv_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ttusb_dec_exit_dvb to ttusb_dec_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ttusb_dec_exit_dvb to ttusb_dec_process_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ttusb_dec_exit_dvb to ttusb_dec_handle_irq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Error: Refinement using predicate refinement failed.Try using cpa.value.symbolic.refiner.SymbolicValueAnalysisRefiner (SymbolicPrecisionRefinementStrategy.performRefinement, SEVERE)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 340047 (count: 42935, min: 0, max: 12, avg: 7.92)
Number of global variables:                          279232 (count: 42935, min: 0, max: 7, avg: 6.50)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  422418
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                1.933s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     1.168s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 1
Most constraints before refinement in state: 2
Constraints after refinement in state: 311
Constraints before refinement in state: 407
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 644ms

PredicateCPA statistics
-----------------------
Number of abstractions:            422404 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  45630 (11%)
  Because of loop head:            13494 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       422404 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   14
  Times result was 'false':        0 (0%)
Number of coverage checks:         61591
  BDD entailment checks:           61591
Number of SMT sat checks:          14
  trivial:                         14
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          25
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   541883 (75%)

Time for post operator:                 67.717s
  Time for path formula creation:       66.718s
    Actual computation:                 61.691s
Time for strengthen operator:            0.607s
  Time for satisfiability checks:        0.001s
Time for prec operator:                 16.527s
  Time for abstraction:                  7.571s (Max:     0.466s, Count: 422404)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.343s
  Time for BDD entailment checks:        0.228s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 484035, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.464s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.125s
  Time for transition matches:                         1.352s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       623319 (count: 623319, min: 1, max: 1, avg: 1.00) [1 x 623319]

CPA algorithm statistics
------------------------
Number of iterations:            360764
Max size of waitlist:            62
Average size of waitlist:        33
Number of computed successors:   422418
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         61591
Number of times breaked:         14

Total time for CPA algorithm:       112.915s (Max:    24.624s)
  Time for choose from waitlist:      0.527s
  Time for precision adjustment:     21.902s
  Time for transfer relation:        84.452s
  Time for merge operator:            0.222s
  Time for stop operator:             1.577s
  Time for adding to reached set:     1.345s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                6026 (count: 14, min: 111, max: 716, avg: 430.43)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.922s
  Counterexample analysis:                6.938s (Max:     1.270s, Calls: 14)
    Refinement sat check:                 4.069s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.007s
  Building the counterexample trace:                   6.938s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.021s
  ARG update:                                          0.000s

Length of refined path (in blocks):                    2824 (count: 13, min: 66, max: 507, avg: 217.23)
Number of affected states:                              815 (count: 13, min: 2, max: 180, avg: 62.69)
Length (states) of path with itp 'true':               1996 (count: 13, min: 1, max: 382, avg: 153.54)
Length (states) of path with itp non-trivial itp:       815 (count: 13, min: 2, max: 180, avg: 62.69)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 13, min: 0, max: 5, avg: 0.92)
Equal non-trivial interpolants along paths:             790 (count: 13, min: 0, max: 174, avg: 60.77)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 51600
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 25774.36
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     123.125s
Time for refinements:                10.210s
Average time for refinement:          0.729s
Max time for refinement:              1.521s

Code Coverage
-----------------------------
  Function coverage:      0.904
  Visited lines:          8843
  Total lines:            8940
  Line coverage:          0.989
  Visited conditions:     618
  Total conditions:       672
  Condition coverage:     0.920

CPAchecker general statistics
-----------------------------
Number of program locations:     1924
Number of CFA edges:             2561
Number of relevant variables:    492
Number of functions:             114
Number of loops:                 22
Size of reached set:             42935
  Number of reached locations:   1786 (93%)
    Avg states per location:     24
    Max states per location:     256 (at node N488)
  Number of reached functions:   103 (90%)
  Number of partitions:          37523
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N2476 (before line 11933), Function main called from node N2336, stack depth 1 [1a5c020b], stack [main], Init])
  Number of target states:       1
  Size of final wait list        9

Time for analysis setup:          4.512s
  Time for loading CPAs:          0.586s
  Time for loading parser:        0.605s
  Time for CFA construction:      3.251s
    Time for parsing file(s):     1.285s
    Time for AST to CFA:          1.041s
    Time for CFA sanity check:    0.125s
    Time for post-processing:     0.569s
      Time for var class.:        0.000s
Time for Analysis:              123.125s
CPU time for analysis:          141.390s
Total time for CPAchecker:      127.643s
Total CPU time for CPAchecker:  149.440s

Time for Garbage Collector:       2.881s (in 9 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3401MB (  3243 MiB) max;   1311MB (  1250 MiB) avg;   3482MB (  3320 MiB) peak
Used non-heap memory:             27MB (    26 MiB) max;     26MB (    25 MiB) avg;     28MB (    27 MiB) peak
Used in PS Old Gen pool:         246MB (   234 MiB) max;    127MB (   121 MiB) avg;    246MB (   234 MiB) peak
Allocated heap memory:          4688MB (  4471 MiB) max;   3836MB (  3658 MiB) avg
Allocated non-heap memory:        28MB (    27 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:  13798MB ( 13159 MiB) max;  13600MB ( 12970 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
