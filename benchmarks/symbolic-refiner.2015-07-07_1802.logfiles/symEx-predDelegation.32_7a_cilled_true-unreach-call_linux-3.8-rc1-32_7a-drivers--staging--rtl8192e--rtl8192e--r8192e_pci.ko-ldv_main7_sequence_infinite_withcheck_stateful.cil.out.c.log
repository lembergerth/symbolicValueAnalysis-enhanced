scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--staging--rtl8192e--rtl8192e--r8192e_pci.ko-ldv_main7_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_463194920_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 50853: Function pointer *(priv->rtllib->SetFwCmdHandler) with type bool  (*)(struct net_device *, enum fw_cmd_io_type ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 50924: Function pointer *(priv->rtllib->SetFwCmdHandler) with type bool  (*)(struct net_device *, enum fw_cmd_io_type ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 39603: Function pointer *(priv->ops->stop_adapter) with type void (*)(struct net_device *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16504: Function pointer *(priv->rtllib->InitialGainHandler) with type void (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16499: Function pointer *(priv->rtllib->InitialGainHandler) with type void (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 48245: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 48214: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 47061: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31962: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 32010: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8156-8157: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 31806-31807: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31853: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 52016: Function pointer *(ieee->ScanOperationBackupHandler) with type void (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 52006: Function pointer *(ieee->ScanOperationBackupHandler) with type void (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 51994: Function pointer *(priv->rtllib->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38342: Function pointer *(priv->ops->stop_adapter) with type void (*)(struct net_device *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12393: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33824: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38005: Function pointer *(priv->rtllib->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33649: Function pointer *(priv->rf_set_chan) with type u8  (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 34802: Function pointer *(priv->ops->stop_adapter) with type void (*)(struct net_device *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 37175: Function pointer *(priv->rtllib->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33731: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33724: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33706: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33690: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8667: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8469: Function pointer *(priv->rtllib->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 36152: Function pointer *(ieee->set_chan) with type void (*)(struct net_device *, short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 36145: Function pointer *(ieee->set_chan) with type void (*)(struct net_device *, short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 36472: Function pointer *(ieee->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 31450: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 33611: Ignoring function call through function pointer *(priv->ops->irq_disable): (*(priv->ops->irq_disable))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rtl8192_hw_wakeup to MgntActSet_RF_State (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 50924: Ignoring function call through function pointer *(priv->rtllib->SetFwCmdHandler): (*(priv->rtllib->SetFwCmdHandler))(dev, 23); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 33824: Ignoring function call through function pointer *(priv->rtllib->SetHwRegHandler): (*(priv->rtllib->SetHwRegHandler))(dev, 31, (u8 *)(&i)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12971: Ignoring function call through function pointer *(ieee->rtllib_ap_sec_type): tmp___0 = (*(ieee->rtllib_ap_sec_type))(priv->rtllib); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12971: Return type of function rtl8192_GetNmodeSupportBySecCfg is bool , but result is used as type u8 : tmp___0 = rtl8192_GetNmodeSupportBySecCfg(priv->rtllib); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl8192_GetNmodeSupportBySecCfg to rtl8192_GetNmodeSupportBySecCfg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 31853: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 36609: Ignoring function call through function pointer *(priv->ops->tx_enable): (*(priv->ops->tx_enable))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 36609: Return type of function rtl8192_GetNmodeSupportBySecCfg is bool , but result is used as type void: rtl8192_GetNmodeSupportBySecCfg(dev); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl8192_tx_enable to rtl8192_GetNmodeSupportBySecCfg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl8192e_start_beacon to rtl8192_irq_disable (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 33594: Ignoring function call through function pointer *(priv->ops->irq_enable): (*(priv->ops->irq_enable))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 33594: Return type of function rtl8192_GetNmodeSupportBySecCfg is bool , but result is used as type void: rtl8192_GetNmodeSupportBySecCfg(dev); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl8192_irq_enable to rtl8192_GetNmodeSupportBySecCfg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl8192_irq_enable to rtl8192e_start_beacon (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtllib_ips_leave to IPSLeave (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl8192_commit to rtl8192_irq_disable (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 38342: Ignoring function call through function pointer *(priv->ops->stop_adapter): (*(priv->ops->stop_adapter))(dev, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 34562: Ignoring function call through function pointer *(priv->ops->initialize_adapter): init_status = (*(priv->ops->initialize_adapter))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from _rtl8192_sta_up to rtl8192_GetNmodeSupportBySecCfg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from _rtl8192_sta_up to rtl8192_adapter_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 33706: Ignoring function call through function pointer *(priv->rtllib->SetHwRegHandler): (*(priv->rtllib->SetHwRegHandler))(dev, 18, (u8 *)(&ShortPreamble)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 33690: Ignoring function call through function pointer *(priv->rtllib->SetHwRegHandler): (*(priv->rtllib->SetHwRegHandler))(dev, 18, (u8 *)(&ShortPreamble)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 33731: Ignoring function call through function pointer *(priv->rtllib->SetHwRegHandler): (*(priv->rtllib->SetHwRegHandler))(dev, 17, &slot_time_val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 33724: Ignoring function call through function pointer *(priv->rtllib->SetHwRegHandler): (*(priv->rtllib->SetHwRegHandler))(dev, 17, &slot_time_val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rtl8192_hw_sleep_down to MgntActSet_RF_State (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17783: Ignoring function call through function pointer *(priv->rtllib->softmac_hard_start_xmit): (*(priv->rtllib->softmac_hard_start_xmit))(skb, dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 37175: Ignoring function call through function pointer *(priv->rtllib->LedControlHandler): (*(priv->rtllib->LedControlHandler))(dev, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 37183: Ignoring function call through function pointer *(priv->ops->tx_fill_descriptor): (*(priv->ops->tx_fill_descriptor))(dev, pdesc, tcb_desc, skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 8156-8157: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544UL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 37011: Ignoring function call through function pointer *(priv->ops->tx_fill_cmd_descriptor): (*(priv->ops->tx_fill_cmd_descriptor))(dev, entry, tcb_desc, skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 35555: Ignoring function call through function pointer *(priv->ops->get_eeprom_size): (*(priv->ops->get_eeprom_size))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 35555: Return type of function rtl8192_GetNmodeSupportBySecCfg is bool , but result is used as type void: rtl8192_GetNmodeSupportBySecCfg(dev); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl8192_init to rtl8192_GetNmodeSupportBySecCfg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl8192_init to rtl8192e_start_beacon (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl8192_init to dm_txpower_trackingcallback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 37932: Ignoring function call through function pointer *(priv->ops->rx_query_status_descriptor): tmp___0 = (*(priv->ops->rx_query_status_descriptor))(dev, &stats, pdesc, skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 38005: Ignoring function call through function pointer *(priv->rtllib->LedControlHandler): (*(priv->rtllib->LedControlHandler))(dev, 5); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 31806-31807: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544UL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10403: Ignoring function call through function pointer *(priv->ops->update_ratr_table): (*(priv->ops->update_ratr_table))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10403: Return type of function rtl8192_GetNmodeSupportBySecCfg is bool , but result is used as type void: rtl8192_GetNmodeSupportBySecCfg(dev); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl8192_link_change to rtl8192_GetNmodeSupportBySecCfg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl8192_link_change to rtl8192e_start_beacon (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl8192_link_change to dm_txpower_trackingcallback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl8192_link_change to rtl8192_link_change (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10403: Return type of function rtl8192_adapter_start is bool , but result is used as type void: rtl8192_adapter_start(dev); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl8192_link_change to rtl8192_adapter_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 47061: Ignoring function call through function pointer *(priv->rtllib->SetHwRegHandler): (*(priv->rtllib->SetHwRegHandler))(dev, 31, &tmp___1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 43333: Ignoring function call through function pointer *(priv->rtllib->GetHalfNmodeSupportByAPsHandler): tmp___0 = (*(priv->rtllib->GetHalfNmodeSupportByAPsHandler))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from dm_check_rate_adaptive to rtl8192_GetNmodeSupportBySecCfg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_check_rate_adaptive to rtl8192_adapter_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 48245: Ignoring function call through function pointer *(priv->rtllib->SetHwRegHandler): (*(priv->rtllib->SetHwRegHandler))(dev, 84, &rf_timing); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 48214: Ignoring function call through function pointer *(priv->rtllib->SetHwRegHandler): (*(priv->rtllib->SetHwRegHandler))(dev, 84, &rf_timing); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from IPSEnter to InactivePsWorkItemCallback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 50853: Ignoring function call through function pointer *(priv->rtllib->SetFwCmdHandler): (*(priv->rtllib->SetFwCmdHandler))(dev, 22); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 36467: Ignoring function call through function pointer *(ieee->link_change): (*(ieee->link_change))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 36467: Return type of function rtl8192_GetNmodeSupportBySecCfg is bool , but result is used as type void: rtl8192_GetNmodeSupportBySecCfg(dev); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl819x_watchdog_wqcallback to rtl8192_GetNmodeSupportBySecCfg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl819x_watchdog_wqcallback to rtl8192e_start_beacon (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl819x_watchdog_wqcallback to dm_txpower_trackingcallback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl819x_watchdog_wqcallback to rtl8192_link_change (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 36467: Return type of function rtl8192_adapter_start is bool , but result is used as type void: rtl8192_adapter_start(dev); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl819x_watchdog_wqcallback to rtl8192_adapter_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl819x_watchdog_wqcallback to rtl819x_watchdog_wqcallback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 38126: Ignoring function call through function pointer *(priv->rtllib->check_nic_enough_desc): tmp___1 = (*(priv->rtllib->check_nic_enough_desc))(dev, queue_index); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 38119: Ignoring function call through function pointer *(ieee->softmac_data_hard_start_xmit): (*(ieee->softmac_data_hard_start_xmit))(skb, dev, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from IPSLeave_wq to IPSLeave (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 34125: Ignoring function call through function pointer *(priv->ops->tx_fill_descriptor): (*(priv->ops->tx_fill_descriptor))(dev, pdesc, tcb_desc, pnewskb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 34665: Ignoring function call through function pointer *(priv->rtllib->rtllib_ips_leave): (*(priv->rtllib->rtllib_ips_leave))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 34665: Return type of function rtl8192_GetNmodeSupportBySecCfg is bool , but result is used as type void: rtl8192_GetNmodeSupportBySecCfg(dev); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl8192_sta_down to rtl8192_GetNmodeSupportBySecCfg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl8192_sta_down to rtl8192e_start_beacon (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl8192_sta_down to dm_txpower_trackingcallback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl8192_sta_down to rtl8192_link_change (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 34665: Return type of function rtl8192_adapter_start is bool , but result is used as type void: rtl8192_adapter_start(dev); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl8192_sta_down to rtl8192_adapter_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl8192_sta_down to rtl819x_watchdog_wqcallback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl8192_sta_down to rtl8192_pci_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_CheckRfCtrlGPIO to MgntActSet_RF_State (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl8192_sta_down to rtl8192_irq_disable (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 34802: Ignoring function call through function pointer *(priv->ops->stop_adapter): (*(priv->ops->stop_adapter))(dev, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 32010: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 36472: Ignoring function call through function pointer *(ieee->LedControlHandler): (*(ieee->LedControlHandler))(ieee->dev, 8); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 36479: Ignoring function call through function pointer *(ieee->rtllib_ap_sec_type): tmp___1 = (*(ieee->rtllib_ap_sec_type))(ieee); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 36479: Return type of function rtl8192_GetNmodeSupportBySecCfg is bool , but result is used as type u8 : tmp___1 = rtl8192_GetNmodeSupportBySecCfg(ieee); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 36479: Return type of function rtl8192_adapter_start is bool , but result is used as type u8 : tmp___1 = rtl8192_adapter_start(ieee); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 35791: Ignoring function call through function pointer *(priv->ops->TxCheckStuckHandler): tmp___2 = (*(priv->ops->TxCheckStuckHandler))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rtl819x_TxCheckStuck to rtl8192_GetNmodeSupportBySecCfg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl819x_TxCheckStuck to rtl8192_adapter_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 35826: Ignoring function call through function pointer *(priv->ops->RxCheckStuckHandler): tmp___0 = (*(priv->ops->RxCheckStuckHandler))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rtl819x_RxCheckStuck to rtl8192_GetNmodeSupportBySecCfg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl819x_RxCheckStuck to rtl8192_adapter_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl819x_ifsilentreset to rtl8192_irq_disable (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 36152: Ignoring function call through function pointer *(ieee->set_chan): (*(ieee->set_chan))(ieee->dev, (int)(ieee->current_network.channel)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 36154: Ignoring function call through function pointer *(ieee->link_change): (*(ieee->link_change))(ieee->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 36154: Return type of function rtl8192_GetNmodeSupportBySecCfg is bool , but result is used as type void: rtl8192_GetNmodeSupportBySecCfg(ieee->dev); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl819x_ifsilentreset to rtl8192_GetNmodeSupportBySecCfg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl819x_ifsilentreset to rtl8192e_start_beacon (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl819x_ifsilentreset to dm_txpower_trackingcallback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl819x_ifsilentreset to rtl8192_link_change (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 36154: Return type of function rtl8192_adapter_start is bool , but result is used as type void: rtl8192_adapter_start(ieee->dev); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl819x_ifsilentreset to rtl8192_adapter_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl819x_ifsilentreset to rtl819x_watchdog_wqcallback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 36162: Ignoring function call through function pointer *(ieee->data_hard_resume): (*(ieee->data_hard_resume))(ieee->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 36162: Return type of function rtl8192_GetNmodeSupportBySecCfg is bool , but result is used as type void: rtl8192_GetNmodeSupportBySecCfg(ieee->dev); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 36162: Return type of function rtl8192_adapter_start is bool , but result is used as type void: rtl8192_adapter_start(ieee->dev); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 36145: Ignoring function call through function pointer *(ieee->set_chan): (*(ieee->set_chan))(ieee->dev, (int)(ieee->current_network.channel)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from CamRestoreAllEntry to setKey (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl819x_watchdog_wqcallback to rtl8192_pci_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl819x_ifsilentreset to rtl8192_pci_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8469: Ignoring function call through function pointer *(priv->rtllib->LedControlHandler): (*(priv->rtllib->LedControlHandler))(dev, LedAction); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 35555: Return type of function rtl8192_adapter_start is bool , but result is used as type void: rtl8192_adapter_start(dev); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl8192_init to rtl8192_adapter_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl8192_link_change to rtl819x_watchdog_wqcallback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl8192_link_change to rtl8192_pci_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 35557: Ignoring function call through function pointer *(priv->ops->init_adapter_variable): (*(priv->ops->init_adapter_variable))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 35557: Return type of function rtl8192_GetNmodeSupportBySecCfg is bool , but result is used as type void: rtl8192_GetNmodeSupportBySecCfg(dev); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 35557: Return type of function rtl8192_adapter_start is bool , but result is used as type void: rtl8192_adapter_start(dev); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from rtl8192_init to rtl8192_irq_disable (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 31962: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rtl8192_init to rtl8192_link_change (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl8192_init to rtl819x_watchdog_wqcallback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rtl8192_init to rtl8192_pci_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                5518359 (count: 1839656, min: 0, max: 3, avg: 3.00)
Number of global variables:                         1839654 (count: 1839656, min: 0, max: 1, avg: 1.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 2058782
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               31.824s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     4.763s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 2903ms

PredicateCPA statistics
-----------------------
Number of abstractions:            2058778 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  505427 (25%)
  Because of loop head:            29647 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       2058778 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   4
  Times result was 'false':        0 (0%)
Number of coverage checks:         214433
  BDD entailment checks:           214433
Number of SMT sat checks:          4
  trivial:                         4
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          5
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   2968991 (81%)

Time for post operator:                429.052s
  Time for path formula creation:      424.821s
    Actual computation:                375.216s
Time for strengthen operator:            2.817s
  Time for satisfiability checks:        0.001s
Time for prec operator:                121.292s
  Time for abstraction:                 47.891s (Max:     2.065s, Count: 2058778)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 1.086s
  Time for BDD entailment checks:        0.666s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 2273221, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             2.035s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 13.402s
  Time for transition matches:                         5.587s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      3012608 (count: 3012608, min: 1, max: 1, avg: 1.00) [1 x 3012608]

CPA algorithm statistics
------------------------
Number of iterations:            1843925
Max size of waitlist:            235
Average size of waitlist:        186
Number of computed successors:   2058782
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         214433
Number of times breaked:         4

Total time for CPA algorithm:       706.380s (Max:   694.244s)
  Time for choose from waitlist:      2.434s
  Time for precision adjustment:    168.216s
  Time for transfer relation:       509.480s
  Time for merge operator:            0.506s
  Time for stop operator:             5.492s
  Time for adding to reached set:     6.615s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                1501 (count: 4, min: 362, max: 385, avg: 375.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  91.167s
  Counterexample analysis:               90.977s (Max:    24.349s, Calls: 4)
    Refinement sat check:                85.922s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.003s
  Building the counterexample trace:                  90.977s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.012s
  ARG update:                                          0.000s

Length of refined path (in blocks):                     979 (count: 4, min: 135, max: 380, avg: 244.75)
Number of affected states:                              419 (count: 4, min: 1, max: 375, avg: 104.75)
Length (states) of path with itp 'true':                556 (count: 4, min: 4, max: 218, avg: 139.00)
Length (states) of path with itp non-trivial itp:       419 (count: 4, min: 1, max: 375, avg: 104.75)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             415 (count: 4, min: 0, max: 374, avg: 103.75)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 1176
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 1174.50
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     797.580s
Time for refinements:                91.199s
Average time for refinement:         22.799s
Max time for refinement:             24.424s

Code Coverage
-----------------------------
  Function coverage:      0.494
  Visited lines:          29820
  Total lines:            37361
  Line coverage:          0.798
  Visited conditions:     3776
  Total conditions:       5586
  Condition coverage:     0.676

CPAchecker general statistics
-----------------------------
Number of program locations:     14043
Number of CFA edges:             20299
Number of relevant variables:    3535
Number of functions:             587
Number of loops:                 185
Size of reached set:             1839656
  Size of final wait list        145

Time for analysis setup:         11.984s
  Time for loading CPAs:          0.733s
  Time for loading parser:        0.646s
  Time for CFA construction:     10.504s
    Time for parsing file(s):     3.053s
    Time for AST to CFA:          3.638s
    Time for CFA sanity check:    0.319s
    Time for post-processing:     3.192s
      Time for var class.:        0.000s
Time for Analysis:              797.580s
CPU time for analysis:          877.360s
Total time for CPAchecker:      809.570s
Total CPU time for CPAchecker:  899.970s

Time for Garbage Collector:      67.084s (in 46 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5766MB (  5499 MiB) max;   2752MB (  2625 MiB) avg;   7313MB (  6974 MiB) peak
Used non-heap memory:             29MB (    27 MiB) max;     26MB (    25 MiB) avg;     29MB (    27 MiB) peak
Used in PS Old Gen pool:        3424MB (  3266 MiB) max;   1261MB (  1203 MiB) avg;   3465MB (  3305 MiB) peak
Allocated heap memory:          6978MB (  6655 MiB) max;   4999MB (  4768 MiB) avg
Allocated non-heap memory:        52MB (    50 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  14624MB ( 13946 MiB) max;  14258MB ( 13597 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
