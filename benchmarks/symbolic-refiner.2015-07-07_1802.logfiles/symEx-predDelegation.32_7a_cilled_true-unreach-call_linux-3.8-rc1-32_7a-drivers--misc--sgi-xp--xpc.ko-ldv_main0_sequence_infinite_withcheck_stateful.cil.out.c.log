scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--misc--sgi-xp--xpc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1189143347_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8595-8596: Function pointer *(ch->func) with type void (*)(enum xp_retval , short, int, void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9043: Function pointer *(ch->func) with type void (*)(enum xp_retval , short, int, void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7018: Function pointer *(xpc_arch_ops.partition_engaged) with type int (*)(short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6970: Function pointer *(xpc_arch_ops.partition_engaged) with type int (*)(short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8818: Function pointer *(ch->func) with type void (*)(enum xp_retval , short, int, void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8929-8931: Function pointer *(xpc_arch_ops.send_payload) with type enum xp_retval  (*)(struct xpc_channel *, u32 , void *, u16 , u8 , void (*)(enum xp_retval , short, int, void *), void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8987-8989: Function pointer *(xpc_arch_ops.send_payload) with type enum xp_retval  (*)(struct xpc_channel *, u32 , void *, u16 , u8 , void (*)(enum xp_retval , short, int, void *), void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13527: Function pointer *func with type void (*)(enum xp_retval , short, int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9948: Function pointer *(xpc_arch_ops.partition_engaged) with type int (*)(short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7666: Function pointer *(xpc_arch_ops.partition_engaged) with type int (*)(short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9738: Function pointer *xp_cpu_to_nasid with type int (*)(int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

The void * pointer kzalloc::__retval__ to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 11424:	N4011 -{mq->gru_mq_desc = kzalloc(32UL, 208U);}-> N4017) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

line 11520: Ignoring call via function pointer xp_pa for which no suitable target was found in line: tmp___1 = (*xp_pa)(mq->address); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11520: Ignoring function call through function pointer *xp_pa: tmp___1 = (*xp_pa)(mq->address); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11522: Ignoring call via function pointer xp_expand_memprotect for which no suitable target was found in line: xp_ret = (*xp_expand_memprotect)(tmp___1, (unsigned long)mq_size); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11522: Ignoring function call through function pointer *xp_expand_memprotect: xp_ret = (*xp_expand_memprotect)(tmp___1, (unsigned long)mq_size); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12212: Ignoring call via function pointer xp_remote_memcpy for which no suitable target was found in line: ret = (*xp_remote_memcpy)(tmp, gru_mq_desc_gpa, 32UL); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12212: Ignoring function call through function pointer *xp_remote_memcpy: ret = (*xp_remote_memcpy)(tmp, gru_mq_desc_gpa, 32UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6961: Ignoring function call through function pointer *(xpc_arch_ops.disallow_all_hbs): (*(xpc_arch_ops.disallow_all_hbs))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10113: Ignoring function call through function pointer *(xpc_arch_ops.request_partition_deactivation): (*(xpc_arch_ops.request_partition_deactivation))(part); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from xpc_send_activate_IRQ_uv to xpc_cache_remote_gru_mq_desc_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_send_activate_IRQ_part_uv to xpc_deactivate_partition (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13527: Ignoring call via function pointer xpc_notify_sender_uv::func for which no suitable target was found in line: (*func)(reason, __CPAchecker_TMP_2, __CPAchecker_TMP_3, msg_slot->key); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13527: Ignoring function call through function pointer *func: (*func)(reason, __CPAchecker_TMP_2, __CPAchecker_TMP_3, msg_slot->key); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5028: Ignoring function call through function pointer *(xpc_arch_ops.increment_heartbeat): (*(xpc_arch_ops.increment_heartbeat))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from xpc_hb_beater to xpc_process_activate_IRQ_rcvd_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9948: Ignoring function call through function pointer *(xpc_arch_ops.partition_engaged): tmp = (*(xpc_arch_ops.partition_engaged))((int)partid); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9968: Ignoring function call through function pointer *(xpc_arch_ops.assume_partition_disengaged): (*(xpc_arch_ops.assume_partition_disengaged))((int)partid); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8742: Ignoring function call through function pointer *(xpc_arch_ops.send_chctl_closerequest): (*(xpc_arch_ops.send_chctl_closerequest))(ch, irq_flags); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from xpc_send_activate_IRQ_ch_uv to xpc_deactivate_partition (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_received_payload_uv to xpc_deactivate_partition (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6424: Ignoring function call through function pointer *(xpc_arch_ops.indicate_partition_engaged): (*(xpc_arch_ops.indicate_partition_engaged))(part); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from xpc_create_kthreads to xpc_timeout_partition_disengage (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6468: Ignoring call via function pointer xpc_create_kthreads::indicate_partition_disengaged for which no suitable target was found in line: (*indicate_partition_disengaged)(part); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6468: Ignoring function call through function pointer *indicate_partition_disengaged: (*indicate_partition_disengaged)(part); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from xpc_create_kthreads to xpc_disconnect_channel (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9993: Ignoring function call through function pointer *(xpc_arch_ops.cancel_partition_deactivation_request): (*(xpc_arch_ops.cancel_partition_deactivation_request))(part); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from xpc_partition_disengaged to xpc_timeout_partition_disengage (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_initiate_disconnect to xpc_disconnect_channel (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10077: Ignoring function call through function pointer *(xpc_arch_ops.request_partition_reactivation): (*(xpc_arch_ops.request_partition_reactivation))(part); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6996: Ignoring function call through function pointer *(xpc_arch_ops.any_partition_engaged): any_engaged = (*(xpc_arch_ops.any_partition_engaged))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7018: Ignoring function call through function pointer *(xpc_arch_ops.partition_engaged): tmp___0 = (*(xpc_arch_ops.partition_engaged))((int)partid); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6970: Ignoring function call through function pointer *(xpc_arch_ops.partition_engaged): tmp = (*(xpc_arch_ops.partition_engaged))((int)partid); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6974: Ignoring function call through function pointer *(xpc_arch_ops.request_partition_deactivation): (*(xpc_arch_ops.request_partition_deactivation))(part); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from xpc_deactivate_partition to xpc_request_partition_deactivation_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_indicate_partition_disengaged_uv to xpc_send_activate_IRQ_part_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_process_activate_IRQ_rcvd_uv to xpc_deactivate_partition (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_indicate_partition_engaged_uv to xpc_send_activate_IRQ_part_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_create_kthreads to xpc_request_partition_deactivation_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_partition_disengaged to xpc_request_partition_deactivation_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_request_partition_deactivation_uv to xpc_send_activate_IRQ_part_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_deactivate_partition to xpc_indicate_partition_disengaged_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_create_kthreads to xpc_indicate_partition_disengaged_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_partition_disengaged to xpc_indicate_partition_disengaged_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_deactivate_partition to xpc_hb_beater (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_create_kthreads to xpc_hb_beater (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_partition_disengaged to xpc_hb_beater (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_deactivate_partition to xpc_indicate_partition_engaged_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_create_kthreads to xpc_indicate_partition_engaged_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_partition_disengaged to xpc_indicate_partition_engaged_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_deactivate_partition to xpc_timeout_partition_disengage (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_partition_going_down to xpc_disconnect_channel (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6976: Ignoring function call through function pointer *(xpc_arch_ops.indicate_partition_disengaged): (*(xpc_arch_ops.indicate_partition_disengaged))(part); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6773: Ignoring function call through function pointer *(xpc_arch_ops.any_partition_engaged): tmp___0 = (*(xpc_arch_ops.any_partition_engaged))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6692: Ignoring function call through function pointer *(xpc_arch_ops.teardown_partitions): (*(xpc_arch_ops.teardown_partitions))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11573: Ignoring call via function pointer xp_pa for which no suitable target was found in line: tmp = (*xp_pa)(mq->address); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11573: Ignoring function call through function pointer *xp_pa: tmp = (*xp_pa)(mq->address); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11575: Ignoring call via function pointer xp_restrict_memprotect for which no suitable target was found in line: tmp___0 = (*xp_restrict_memprotect)(tmp, (unsigned long)mq_size); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11575: Ignoring function call through function pointer *xp_restrict_memprotect: tmp___0 = (*xp_restrict_memprotect)(tmp, (unsigned long)mq_size); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from xpc_destroy_gru_mq_uv to xpc_save_remote_msgqueue_pa_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_timeout_partition_disengage to xpc_partition_disengaged (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                2451528 (count: 2451530, min: 0, max: 1, avg: 1.00)
Number of global variables:                         2451528 (count: 2451530, min: 0, max: 1, avg: 1.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 2703217
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               38.751s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     5.830s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 3307ms

PredicateCPA statistics
-----------------------
Number of abstractions:            2703216 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  636725 (24%)
  Because of loop head:            51901 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       2703216 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   1
  Times result was 'false':        0 (0%)
Number of coverage checks:         251186
  BDD entailment checks:           251186
Number of SMT sat checks:          1
  trivial:                         1
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          2
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   3792737 (80%)

Time for post operator:                424.544s
  Time for path formula creation:      417.835s
    Actual computation:                379.200s
Time for strengthen operator:            3.479s
  Time for satisfiability checks:        0.000s
Time for prec operator:                127.743s
  Time for abstraction:                 62.417s (Max:     1.375s, Count: 2703216)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 1.292s
  Time for BDD entailment checks:        0.837s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 2954406, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             2.846s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 17.639s
  Time for transition matches:                         7.403s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      3757157 (count: 3757157, min: 1, max: 1, avg: 1.00) [1 x 3757157]

CPA algorithm statistics
------------------------
Number of iterations:            2451929
Max size of waitlist:            80
Average size of waitlist:        51
Number of computed successors:   2703217
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         251186
Number of times breaked:         1

Total time for CPA algorithm:       741.372s (Max:   739.823s)
  Time for choose from waitlist:      3.097s
  Time for precision adjustment:    190.567s
  Time for transfer relation:       512.360s
  Time for merge operator:            0.603s
  Time for stop operator:             6.891s
  Time for adding to reached set:     8.353s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                 333 (count: 1, min: 333, max: 333, avg: 333.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.341s
  Counterexample analysis:                1.243s (Max:     1.243s, Calls: 1)
    Refinement sat check:                 0.973s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.001s
  Building the counterexample trace:                   1.243s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.015s
  ARG update:                                          0.000s

Length of refined path (in blocks):                     329 (count: 1, min: 329, max: 329, avg: 329.00)
Number of affected states:                              324 (count: 1, min: 324, max: 324, avg: 324.00)
Length (states) of path with itp 'true':                  4 (count: 1, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:       324 (count: 1, min: 324, max: 324, avg: 324.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             323 (count: 1, min: 323, max: 323, avg: 323.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 503
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 503.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     742.728s
Time for refinements:                 1.356s
Average time for refinement:          1.356s
Max time for refinement:              1.356s

Code Coverage
-----------------------------
  Function coverage:      0.466
  Visited lines:          5453
  Total lines:            9115
  Line coverage:          0.598
  Visited conditions:     560
  Total conditions:       1862
  Condition coverage:     0.301

CPAchecker general statistics
-----------------------------
Number of program locations:     4988
Number of CFA edges:             7616
Number of relevant variables:    1387
Number of functions:             249
Number of loops:                 49
Size of reached set:             2451530
  Size of final wait list        57

Time for analysis setup:          5.409s
  Time for loading CPAs:          0.607s
  Time for loading parser:        0.532s
  Time for CFA construction:      4.199s
    Time for parsing file(s):     1.105s
    Time for AST to CFA:          1.364s
    Time for CFA sanity check:    0.150s
    Time for post-processing:     1.305s
      Time for var class.:        0.000s
Time for Analysis:              742.729s
CPU time for analysis:          890.690s
Total time for CPAchecker:      748.143s
Total CPU time for CPAchecker:  900.430s

Time for Garbage Collector:     137.544s (in 68 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6616MB (  6310 MiB) max;   3399MB (  3241 MiB) avg;   8389MB (  8001 MiB) peak
Used non-heap memory:             27MB (    25 MiB) max;     24MB (    23 MiB) avg;     27MB (    25 MiB) peak
Used in PS Old Gen pool:        4364MB (  4162 MiB) max;   2014MB (  1921 MiB) avg;   4364MB (  4162 MiB) peak
Allocated heap memory:          8670MB (  8269 MiB) max;   5629MB (  5368 MiB) avg
Allocated non-heap memory:        50MB (    48 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  13861MB ( 13219 MiB) max;  13597MB ( 12967 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
