scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--can--sja1000--sja1000.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-745945936_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6955: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6957: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6959: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6961: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6963: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6965: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6967: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6969: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6971: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6973: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6766: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6797: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6802: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6794: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6784: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6781: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6710: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6714: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6730: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6734: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7440: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7444: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7425: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7328: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6932: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6936: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7517: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7629: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7529: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7584: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7561: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6658: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7123: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7144: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7146: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7171: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7129: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7131: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7133: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7135: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6911: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6913: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6838: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6840: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6842: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7043: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7045: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7047: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7059: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7030: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7032: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7034: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7036: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7038: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6642: Function pointer *(priv->write_reg) with type void (*)(const struct sja1000_priv *, int, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6644: Function pointer *(priv->read_reg) with type u8  (*)(const struct sja1000_priv *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 7043: Ignoring function call through function pointer *(priv->write_reg): (*(priv->write_reg))((const struct sja1000_priv *)priv, 16, (int)fi); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7045: Ignoring function call through function pointer *(priv->write_reg): (*(priv->write_reg))((const struct sja1000_priv *)priv, 17, (int)((u8 )((id & 2040U) >> 3))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7047: Ignoring function call through function pointer *(priv->write_reg): (*(priv->write_reg))((const struct sja1000_priv *)priv, 18, ((int)((u8 )id)) << 5U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7030: Ignoring function call through function pointer *(priv->write_reg): (*(priv->write_reg))((const struct sja1000_priv *)priv, 16, (int)fi); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7032: Ignoring function call through function pointer *(priv->write_reg): (*(priv->write_reg))((const struct sja1000_priv *)priv, 17, (int)((u8 )((id & 534773760U) >> 21))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7034: Ignoring function call through function pointer *(priv->write_reg): (*(priv->write_reg))((const struct sja1000_priv *)priv, 18, (int)((u8 )((id & 2088960U) >> 13))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7036: Ignoring function call through function pointer *(priv->write_reg): (*(priv->write_reg))((const struct sja1000_priv *)priv, 19, (int)((u8 )((id & 8160U) >> 5))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7038: Ignoring function call through function pointer *(priv->write_reg): (*(priv->write_reg))((const struct sja1000_priv *)priv, 20, ((int)((u8 )id)) << 3U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6642: Ignoring function call through function pointer *(priv->write_reg): (*(priv->write_reg))((const struct sja1000_priv *)priv, 1, (int)val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6644: Ignoring function call through function pointer *(priv->read_reg): (*(priv->read_reg))((const struct sja1000_priv *)priv, 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7059: Ignoring function call through function pointer *(priv->write_reg): (*(priv->write_reg))((const struct sja1000_priv *)priv, (int)tmp___1, (int)((cf->data)[i])); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6710: Ignoring function call through function pointer *(priv->read_reg): tmp___0 = (*(priv->read_reg))((const struct sja1000_priv *)priv, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6714: Ignoring function call through function pointer *(priv->write_reg): (*(priv->write_reg))((const struct sja1000_priv *)priv, 4, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6730: Ignoring function call through function pointer *(priv->write_reg): (*(priv->write_reg))((const struct sja1000_priv *)priv, 0, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6734: Ignoring function call through function pointer *(priv->read_reg): status = (*(priv->read_reg))((const struct sja1000_priv *)priv, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6838: Ignoring function call through function pointer *(priv->write_reg): (*(priv->write_reg))((const struct sja1000_priv *)priv, 15, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6840: Ignoring function call through function pointer *(priv->write_reg): (*(priv->write_reg))((const struct sja1000_priv *)priv, 14, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6842: Ignoring function call through function pointer *(priv->read_reg): (*(priv->read_reg))((const struct sja1000_priv *)priv, 12); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6766: Ignoring function call through function pointer *(priv->read_reg): tmp___0 = (*(priv->read_reg))((const struct sja1000_priv *)priv, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6797: Ignoring function call through function pointer *(priv->write_reg): (*(priv->write_reg))((const struct sja1000_priv *)priv, 0, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6794: Ignoring function call through function pointer *(priv->write_reg): (*(priv->write_reg))((const struct sja1000_priv *)priv, 0, 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6802: Ignoring function call through function pointer *(priv->read_reg): status = (*(priv->read_reg))((const struct sja1000_priv *)priv, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6784: Ignoring function call through function pointer *(priv->write_reg): (*(priv->write_reg))((const struct sja1000_priv *)priv, 4, 127); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6781: Ignoring function call through function pointer *(priv->write_reg): (*(priv->write_reg))((const struct sja1000_priv *)priv, 4, 255); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7512: Ignoring function call through function pointer *(priv->pre_irq): (*(priv->pre_irq))((const struct sja1000_priv *)priv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7517: Ignoring function call through function pointer *(priv->read_reg): tmp___0 = (*(priv->read_reg))((const struct sja1000_priv *)priv, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7629: Ignoring function call through function pointer *(priv->read_reg): isrc = (*(priv->read_reg))((const struct sja1000_priv *)priv, 3); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7529: Ignoring function call through function pointer *(priv->read_reg): status = (*(priv->read_reg))((const struct sja1000_priv *)priv, 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6658: Ignoring function call through function pointer *(priv->read_reg): tmp = (*(priv->read_reg))((const struct sja1000_priv *)priv, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7123: Ignoring function call through function pointer *(priv->read_reg): fi = (*(priv->read_reg))((const struct sja1000_priv *)priv, 16); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7144: Ignoring function call through function pointer *(priv->read_reg): tmp___4 = (*(priv->read_reg))((const struct sja1000_priv *)priv, 17); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7146: Ignoring function call through function pointer *(priv->read_reg): tmp___5 = (*(priv->read_reg))((const struct sja1000_priv *)priv, 18); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7129: Ignoring function call through function pointer *(priv->read_reg): tmp___0 = (*(priv->read_reg))((const struct sja1000_priv *)priv, 17); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7131: Ignoring function call through function pointer *(priv->read_reg): tmp___1 = (*(priv->read_reg))((const struct sja1000_priv *)priv, 18); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7133: Ignoring function call through function pointer *(priv->read_reg): tmp___2 = (*(priv->read_reg))((const struct sja1000_priv *)priv, 19); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7135: Ignoring function call through function pointer *(priv->read_reg): tmp___3 = (*(priv->read_reg))((const struct sja1000_priv *)priv, 20); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7171: Ignoring function call through function pointer *(priv->read_reg): (cf->data)[i] = (*(priv->read_reg))((const struct sja1000_priv *)priv, (int)tmp___6); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7584: Ignoring function call through function pointer *(priv->read_reg): status = (*(priv->read_reg))((const struct sja1000_priv *)priv, 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7328: Ignoring function call through function pointer *(priv->read_reg): ecc = (*(priv->read_reg))((const struct sja1000_priv *)priv, 12); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7425: Ignoring function call through function pointer *(priv->read_reg): alc = (*(priv->read_reg))((const struct sja1000_priv *)priv, 11); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7440: Ignoring function call through function pointer *(priv->read_reg): tmp___4 = (*(priv->read_reg))((const struct sja1000_priv *)priv, 14); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7444: Ignoring function call through function pointer *(priv->read_reg): tmp___5 = (*(priv->read_reg))((const struct sja1000_priv *)priv, 15); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7642: Ignoring function call through function pointer *(priv->post_irq): (*(priv->post_irq))((const struct sja1000_priv *)priv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                3126238 (count: 1042081, min: 0, max: 4, avg: 3.00)
Number of global variables:                         3126237 (count: 1042081, min: 0, max: 3, avg: 3.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 1136744
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                4.042s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     2.483s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 1639ms

PredicateCPA statistics
-----------------------
Number of abstractions:            1136741 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  198437 (17%)
  Because of loop head:            62986 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1136741 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   3
  Times result was 'false':        0 (0%)
Number of coverage checks:         90389
  BDD entailment checks:           90389
Number of SMT sat checks:          3
  trivial:                         3
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          7
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   241752 (18%)

Time for post operator:                105.785s
  Time for path formula creation:      103.407s
    Actual computation:                 93.024s
Time for strengthen operator:            1.536s
  Time for satisfiability checks:        0.000s
Time for prec operator:                 28.117s
  Time for abstraction:                 10.143s (Max:     0.573s, Count: 1136741)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.465s
  Time for BDD entailment checks:        0.338s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 1227141, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             1.042s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.045s
  Time for transition matches:                         2.908s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1735392 (count: 1735392, min: 1, max: 1, avg: 1.00) [1 x 1735392]

CPA algorithm statistics
------------------------
Number of iterations:            1028383
Max size of waitlist:            17968
Average size of waitlist:        8946
Number of computed successors:   1136744
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         90389
Number of times breaked:         3

Total time for CPA algorithm:       822.962s (Max:   820.298s)
  Time for choose from waitlist:      1.253s
  Time for precision adjustment:     40.297s
  Time for transfer relation:       142.011s
  Time for merge operator:          216.894s
  Time for stop operator:           411.696s
  Time for adding to reached set:     3.776s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                 201 (count: 3, min: 53, max: 92, avg: 67.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.346s
  Counterexample analysis:                0.181s (Max:     0.092s, Calls: 3)
    Refinement sat check:                 0.133s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.182s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.005s
  ARG update:                                          0.000s

Length of refined path (in blocks):                     161 (count: 3, min: 33, max: 88, avg: 53.67)
Number of affected states:                               79 (count: 3, min: 2, max: 68, avg: 26.33)
Length (states) of path with itp 'true':                 79 (count: 3, min: 19, max: 37, avg: 26.33)
Length (states) of path with itp non-trivial itp:        79 (count: 3, min: 2, max: 68, avg: 26.33)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 3, min: 0, max: 2, avg: 1.00)
Equal non-trivial interpolants along paths:              73 (count: 3, min: 0, max: 65, avg: 24.33)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 3044
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 1426.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     823.351s
Time for refinements:                 0.389s
Average time for refinement:          0.129s
Max time for refinement:              0.162s

Code Coverage
-----------------------------
  Function coverage:      0.566
  Visited lines:          6032
  Total lines:            6458
  Line coverage:          0.934
  Visited conditions:     196
  Total conditions:       306
  Condition coverage:     0.641

CPAchecker general statistics
-----------------------------
Number of program locations:     1029
Number of CFA edges:             1332
Number of relevant variables:    292
Number of functions:             83
Number of loops:                 10
Size of reached set:             1042081
  Size of final wait list        17965

Time for analysis setup:          3.547s
  Time for loading CPAs:          0.610s
  Time for loading parser:        0.526s
  Time for CFA construction:      2.334s
    Time for parsing file(s):     0.841s
    Time for AST to CFA:          0.721s
    Time for CFA sanity check:    0.093s
    Time for post-processing:     0.380s
      Time for var class.:        0.000s
Time for Analysis:              823.351s
CPU time for analysis:          894.210s
Total time for CPAchecker:      826.902s
Total CPU time for CPAchecker:  900.370s

Time for Garbage Collector:      58.003s (in 63 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4916MB (  4688 MiB) max;   2758MB (  2630 MiB) avg;   5565MB (  5307 MiB) peak
Used non-heap memory:             26MB (    25 MiB) max;     24MB (    23 MiB) avg;     26MB (    25 MiB) peak
Used in PS Old Gen pool:        2020MB (  1926 MiB) max;   1233MB (  1176 MiB) avg;   2020MB (  1926 MiB) peak
Allocated heap memory:          5649MB (  5387 MiB) max;   4939MB (  4711 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  13796MB ( 13156 MiB) max;  13719MB ( 13084 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
