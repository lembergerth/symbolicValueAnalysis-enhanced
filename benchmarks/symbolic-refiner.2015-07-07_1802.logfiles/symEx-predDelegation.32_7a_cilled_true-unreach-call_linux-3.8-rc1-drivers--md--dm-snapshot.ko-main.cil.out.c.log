scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--md--dm-snapshot.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1412224507_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 10752: Function pointer *(type->ctr) with type int (*)(struct dm_exception_store *, unsigned int, char **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8706: Function pointer *fn with type int (*)(struct dm_target *, struct dm_dev *, sector_t , sector_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8268: Function pointer *fn with type int (*)(struct dm_target *, struct dm_dev *, sector_t , sector_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8274: Function pointer *fn with type int (*)(struct dm_target *, struct dm_dev *, sector_t , sector_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 7675: Ignoring function call through function pointer *(s->store->type->prepare_exception): tmp = (*(s->store->type->prepare_exception))(s->store, &(pe->e)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from snapshot_map to __find_pending_exception (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7366: Ignoring function call through function pointer *(s->store->type->drop_snapshot): (*(s->store->type->drop_snapshot))(s->store); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10784: Ignoring function call through function pointer *(store->type->dtr): (*(store->type->dtr))(store); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from dm_exception_store_destroy to snapshot_dtr (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6509: Ignoring function call through function pointer *(s->store->type->prepare_merge): linear_chunks = (*(s->store->type->prepare_merge))(s->store, &old_chunk, &new_chunk); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12025: Ignoring call via function pointer insert_exceptions::callback for which no suitable target was found in line: r = (*callback)(callback_context, (chunk_t )(e.old_chunk), (chunk_t )(e.new_chunk)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12025: Ignoring function call through function pointer *callback: r = (*callback)(callback_context, (chunk_t )(e.old_chunk), (chunk_t )(e.new_chunk)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from insert_exceptions to persistent_read_metadata (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8706: Ignoring call via function pointer origin_iterate_devices::fn for which no suitable target was found in line: tmp = (*fn)(ti, dev, 0UL, ti->len, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8706: Ignoring function call through function pointer *fn: tmp = (*fn)(ti, dev, 0UL, ti->len, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8268: Ignoring call via function pointer snapshot_iterate_devices::fn for which no suitable target was found in line: r = (*fn)(ti, snap->origin, 0UL, ti->len, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8268: Ignoring function call through function pointer *fn: r = (*fn)(ti, snap->origin, 0UL, ti->len, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8274: Ignoring call via function pointer snapshot_iterate_devices::fn for which no suitable target was found in line: r = (*fn)(ti, snap->cow, 0UL, tmp, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8274: Ignoring function call through function pointer *fn: r = (*fn)(ti, snap->cow, 0UL, tmp, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from origin_write_extent to __origin_write (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from snapshot_merge_map to do_origin (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __find_pending_exception to origin_map (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8679: Ignoring function call through function pointer *(q->merge_bvec_fn): tmp___0 = (*(q->merge_bvec_fn))(q, bvm, biovec); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10752: Ignoring function call through function pointer *(type->ctr): r = (*(type->ctr))(tmp_store, 0U, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7011: Ignoring function call through function pointer *(s->store->type->read_metadata): r = (*(s->store->type->read_metadata))(s->store, &dm_add_exception, (void *)s); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8706: Function pointer origin_iterate_devices::fn points to dm_add_exception, but no corresponding call edge was created during preprocessing. Ignoring function pointer call: tmp = (*fn)(ti, dev, 0UL, ti->len, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8268: Function pointer snapshot_iterate_devices::fn points to dm_add_exception, but no corresponding call edge was created during preprocessing. Ignoring function pointer call: r = (*fn)(ti, snap->origin, 0UL, ti->len, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8274: Function pointer snapshot_iterate_devices::fn points to dm_add_exception, but no corresponding call edge was created during preprocessing. Ignoring function pointer call: r = (*fn)(ti, snap->cow, 0UL, tmp, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from snapshot_dtr to dm_exception_store_destroy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __invalidate_snapshot to snapshot_merge_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from do_origin to __origin_write (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __invalidate_snapshot to snapshot_dtr (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __find_pending_exception to snapshot_map (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __origin_write to __find_pending_exception (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __origin_write to __invalidate_snapshot (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 8245-8246: Ignoring function call through function pointer *(snap->store->type->status): (*(snap->store->type->status))(snap->store, type, result + ((unsigned long)sz), maxlen - sz); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 8196-8197: Ignoring function call through function pointer *(snap->store->type->usage): (*(snap->store->type->usage))(snap->store, &total_sectors, &sectors_allocated, &metadata_sectors); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12409: Ignoring function call through function pointer *(cb->callback): (*(cb->callback))(cb->context, ps->valid); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from snapshot_map to __invalidate_snapshot (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from origin_map to do_origin (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11015: Ignoring call via function pointer transient_commit_exception::callback for which no suitable target was found in line: (*callback)(callback_context, 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11015: Ignoring function call through function pointer *callback: (*callback)(callback_context, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from __find_pending_exception to snapshot_merge_map (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_exception_store_destroy to snapshot_merge_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                1780335 (count: 593447, min: 0, max: 3, avg: 3.00)
Number of global variables:                         1780335 (count: 593447, min: 0, max: 3, avg: 3.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  657764
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                2.063s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     1.477s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 1027ms

PredicateCPA statistics
-----------------------
Number of abstractions:            657761 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  144963 (22%)
  Because of loop head:            17519 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       657761 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   3
  Times result was 'false':        0 (0%)
Number of coverage checks:         61537
  BDD entailment checks:           61537
Number of SMT sat checks:          3
  trivial:                         3
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          4
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   1033368 (87%)

Time for post operator:                 36.108s
  Time for path formula creation:       34.415s
    Actual computation:                 26.231s
Time for strengthen operator:            1.041s
  Time for satisfiability checks:        0.000s
Time for prec operator:                 25.929s
  Time for abstraction:                  9.229s (Max:     1.440s, Count: 657761)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.467s
  Time for BDD entailment checks:        0.304s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 719306, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.910s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.950s
  Time for transition matches:                         2.416s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1026653 (count: 1026653, min: 1, max: 1, avg: 1.00) [1 x 1026653]

CPA algorithm statistics
------------------------
Number of iterations:            596204
Max size of waitlist:            83
Average size of waitlist:        43
Number of computed successors:   657764
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         61537
Number of times breaked:         3

Total time for CPA algorithm:       105.280s (Max:   102.996s)
  Time for choose from waitlist:      0.899s
  Time for precision adjustment:     33.647s
  Time for transfer relation:        60.752s
  Time for merge operator:            0.181s
  Time for stop operator:             2.320s
  Time for adding to reached set:     2.292s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                 591 (count: 3, min: 195, max: 199, avg: 197.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.810s
  Counterexample analysis:                0.650s (Max:     0.279s, Calls: 3)
    Refinement sat check:                 0.482s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.650s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.018s
  ARG update:                                          0.000s

Length of refined path (in blocks):                     579 (count: 3, min: 191, max: 195, avg: 193.00)
Number of affected states:                              564 (count: 3, min: 186, max: 190, avg: 188.00)
Length (states) of path with itp 'true':                 12 (count: 3, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:       564 (count: 3, min: 186, max: 190, avg: 188.00)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             561 (count: 3, min: 185, max: 189, avg: 187.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 930
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 928.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     106.118s
Time for refinements:                 0.836s
Average time for refinement:          0.278s
Max time for refinement:              0.376s

Code Coverage
-----------------------------
  Function coverage:      0.767
  Visited lines:          7862
  Total lines:            8216
  Line coverage:          0.957
  Visited conditions:     1093
  Total conditions:       1208
  Condition coverage:     0.905

CPAchecker general statistics
-----------------------------
Number of program locations:     3624
Number of CFA edges:             5107
Number of relevant variables:    1135
Number of functions:             249
Number of loops:                 32
Size of reached set:             593447
  Number of reached locations:   3139 (87%)
    Avg states per location:     189
    Max states per location:     3512 (at node N283)
  Number of reached functions:   191 (77%)
  Number of partitions:          593447
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.933s
  Time for loading CPAs:          0.747s
  Time for loading parser:        0.558s
  Time for CFA construction:      3.541s
    Time for parsing file(s):     0.918s
    Time for AST to CFA:          1.185s
    Time for CFA sanity check:    0.140s
    Time for post-processing:     0.974s
      Time for var class.:        0.000s
Time for Analysis:              106.118s
CPU time for analysis:          121.620s
Total time for CPAchecker:      111.056s
Total CPU time for CPAchecker:  130.380s

Time for Garbage Collector:       4.420s (in 7 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3442MB (  3282 MiB) max;   1360MB (  1297 MiB) avg;   3671MB (  3501 MiB) peak
Used non-heap memory:             26MB (    25 MiB) max;     25MB (    24 MiB) avg;     27MB (    25 MiB) peak
Used in PS Old Gen pool:         567MB (   540 MiB) max;    271MB (   258 MiB) avg;    567MB (   540 MiB) peak
Allocated heap memory:          4512MB (  4303 MiB) max;   3474MB (  3313 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     27MB (    25 MiB) avg
Total process virtual memory:  13604MB ( 12973 MiB) max;  13596MB ( 12966 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
