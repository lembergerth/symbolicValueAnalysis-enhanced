scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.0/ALL.prp ../svcomp15/ldv-linux-3.0/usb_urb-drivers-mtd-sm_ftl.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1045349149_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 5723: Ignoring function call through function pointer *(mtd->write_oob): ret = (*(mtd->write_oob))(mtd, tmp___8, &ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from sm_read_cis to sm_read_sector (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5442: Ignoring function call through function pointer *(mtd->read_oob): ret = (*(mtd->read_oob))(mtd, tmp___9, &ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from sm_read_sector to sm_write (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_read to sm_get_zone (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_read to sm_read_sector (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6094: Ignoring function call through function pointer *(mtd->erase): tmp___9 = (*(mtd->erase))(mtd, &erase); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from sm_read_sector to sm_recheck_media (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_mark_block_bad to sm_write_sector (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_write to sm_cache_flush (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_write to sm_get_zone (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_read_sector to sm_read (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_init_zone to sm_read_sector (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_check_block to sm_read_sector (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_mark_block_bad to sm_recheck_media (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_erase_block to sm_mark_block_bad (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_check_block to sm_erase_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_init_zone to sm_erase_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_write_sector to sm_write (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_write_sector to sm_read (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_cache_flush to sm_read_sector (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_write_sector to sm_recheck_media (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_write_block to sm_mark_block_bad (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_write_block to sm_erase_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_cache_flush to sm_erase_block (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sm_write_block to sm_write_sector (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

The void * pointer kzalloc::__retval__ to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 8051:	N1900 -{ftl->cis_buffer = kzalloc((size_t )512, 208U);}-> N1908) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

Skipping recursive function call from sm_recheck_media to sm_read_cis (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 253364 (count: 126684, min: 0, max: 2, avg: 2.00)
Number of global variables:                          253364 (count: 126684, min: 0, max: 2, avg: 2.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  444381
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                1.255s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     1.020s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 542ms

PredicateCPA statistics
-----------------------
Number of abstractions:            444379 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  59421 (13%)
  Because of loop head:            5958 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       444379 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   2
  Times result was 'false':        0 (0%)
Number of coverage checks:         64332
  BDD entailment checks:           64332
Number of SMT sat checks:          2
  trivial:                         2
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          3
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   622793 (81%)

Time for post operator:                 29.122s
  Time for path formula creation:       28.118s
    Actual computation:                 24.140s
Time for strengthen operator:            0.610s
  Time for satisfiability checks:        0.000s
Time for prec operator:                 14.128s
  Time for abstraction:                  5.156s (Max:     0.311s, Count: 444379)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.370s
  Time for BDD entailment checks:        0.266s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 508717, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.431s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.905s
  Time for transition matches:                         1.204s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       698877 (count: 698877, min: 1, max: 1, avg: 1.00) [1 x 698877]

CPA algorithm statistics
------------------------
Number of iterations:            380048
Max size of waitlist:            54
Average size of waitlist:        30
Number of computed successors:   444381
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         64332
Number of times breaked:         2

Total time for CPA algorithm:        72.065s (Max:    43.400s)
  Time for choose from waitlist:      0.493s
  Time for precision adjustment:     19.678s
  Time for transfer relation:        45.508s
  Time for merge operator:            0.194s
  Time for stop operator:             1.359s
  Time for adding to reached set:     1.878s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  62 (count: 2, min: 30, max: 32, avg: 31.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.706s
  Counterexample analysis:                0.072s (Max:     0.041s, Calls: 2)
    Refinement sat check:                 0.056s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.072s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.003s
  Precision update:                                    0.004s
  ARG update:                                          0.000s

Length of refined path (in blocks):                      54 (count: 2, min: 26, max: 28, avg: 27.00)
Number of affected states:                               50 (count: 2, min: 24, max: 26, avg: 25.00)
Length (states) of path with itp 'true':                  2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:        50 (count: 2, min: 24, max: 26, avg: 25.00)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              48 (count: 2, min: 23, max: 25, avg: 24.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 126685
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 126684.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      73.919s
Time for refinements:                 1.854s
Average time for refinement:          0.927s
Max time for refinement:              1.163s

Code Coverage
-----------------------------
  Function coverage:      0.815
  Visited lines:          5413
  Total lines:            5556
  Line coverage:          0.974
  Visited conditions:     430
  Total conditions:       448
  Condition coverage:     0.960

CPAchecker general statistics
-----------------------------
Number of program locations:     1317
Number of CFA edges:             1701
Number of relevant variables:    454
Number of functions:             65
Number of loops:                 14
Size of reached set:             126684
  Number of reached locations:   1221 (93%)
    Avg states per location:     103
    Max states per location:     1347 (at node N11)
  Number of reached functions:   53 (82%)
  Number of partitions:          126684
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.476s
  Time for loading CPAs:          0.531s
  Time for loading parser:        0.617s
  Time for CFA construction:      2.257s
    Time for parsing file(s):     0.801s
    Time for AST to CFA:          0.732s
    Time for CFA sanity check:    0.081s
    Time for post-processing:     0.433s
      Time for var class.:        0.000s
Time for Analysis:               73.919s
CPU time for analysis:           93.400s
Total time for CPAchecker:       77.400s
Total CPU time for CPAchecker:   99.380s

Time for Garbage Collector:       3.479s (in 7 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3391MB (  3234 MiB) max;   1108MB (  1057 MiB) avg;   3615MB (  3448 MiB) peak
Used non-heap memory:             27MB (    26 MiB) max;     25MB (    24 MiB) avg;     27MB (    26 MiB) peak
Used in PS Old Gen pool:         416MB (   397 MiB) max;    125MB (   119 MiB) avg;    416MB (   397 MiB) peak
Allocated heap memory:          4606MB (  4393 MiB) max;   3286MB (  3134 MiB) avg
Allocated non-heap memory:        28MB (    27 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:  13597MB ( 12967 MiB) max;  13596MB ( 12966 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
