scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_false-unreach-call_linux-3.8-rc1-32_7a-drivers--ata--libata.ko-ldv_main4_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-346498793_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 13955: Function pointer *(ap->ops->mode_filter) with type unsigned long int (*)(struct ata_device *, unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33590: Function pointer *(ap->ops->port_suspend) with type int (*)(struct ata_port *, pm_message_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 32720: Function pointer *(link->ap->ops->set_lpm) with type int (*)(struct ata_link *, enum ata_lpm_policy , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 32375: Function pointer *(ap->ops->set_lpm) with type int (*)(struct ata_link *, enum ata_lpm_policy , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 32379: Function pointer *(ap->ops->set_lpm) with type int (*)(struct ata_link *, enum ata_lpm_policy , unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20317: Function pointer *(ap->ops->sw_activity_show) with type ssize_t  (*)(struct ata_device *, char *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20368: Function pointer *(ap->ops->sw_activity_store) with type ssize_t  (*)(struct ata_device *, enum sw_activity ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20245: Function pointer *(ap->ops->em_show) with type ssize_t  (*)(struct ata_port *, char *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6371: Function pointer *(ops->map_sg) with type int (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6416: Function pointer *(ops->unmap_sg) with type void (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15192: Function pointer *(link->ap->ops->scr_read) with type int (*)(struct ata_link *, unsigned int, u32 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15227: Function pointer *(link->ap->ops->scr_write) with type int (*)(struct ata_link *, unsigned int, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15262: Function pointer *(link->ap->ops->scr_write) with type int (*)(struct ata_link *, unsigned int, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15266: Function pointer *(link->ap->ops->scr_read) with type int (*)(struct ata_link *, unsigned int, u32 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 38535: Ignoring function call through function pointer *(ap___0->ops->sff_irq_check): tmp___1 = (*(ap___0->ops->sff_irq_check))(ap___0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 38343: Ignoring function call through function pointer *(qc->ap->ops->sff_tf_read): (*(qc->ap->ops->sff_tf_read))(qc->ap, &(qc->result_tf)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6371: Ignoring function call through function pointer *(ops->map_sg): ents = (*(ops->map_sg))(dev, sg, nents, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15134: Ignoring function call through function pointer *(ap->ops->qc_prep): (*(ap->ops->qc_prep))(qc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23784: Ignoring function call through function pointer *(qc->scsidone): (*(qc->scsidone))(qc->scsicmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from atapi_sense_complete to atapi_sense_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 38688: Ignoring function call through function pointer *(ap->ops->sff_check_status): (*(ap->ops->sff_check_status))(ap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 38688: Return type of function atapi_sense_complete is void, but result is used as type u8 : atapi_sense_complete(ap); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from ata_sff_thaw to atapi_sense_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 38688: Return type of function ata_sff_thaw is void, but result is used as type u8 : ata_sff_thaw(ap); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from ata_sff_thaw to ata_sff_thaw (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23990: Ignoring function call through function pointer *(qc->scsidone): (*(qc->scsidone))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from atapi_qc_complete to atapi_sense_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from atapi_qc_complete to ata_sff_thaw (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from atapi_qc_complete to atapi_qc_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 36073: Ignoring function call through function pointer *(ap->ops->sff_check_status): status = (*(ap->ops->sff_check_status))(ap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 36073: Return type of function ata_sff_qc_fill_rtf is bool , but result is used as type u8 : status = ata_sff_qc_fill_rtf(ap); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from ata_sff_busy_wait to ata_sff_qc_fill_rtf (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Error: Refinement using predicate refinement failed.Try using cpa.value.symbolic.refiner.SymbolicValueAnalysisRefiner (SymbolicPrecisionRefinementStrategy.performRefinement, SEVERE)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                   9522 (count: 1362, min: 0, max: 8, avg: 6.99)
Number of global variables:                            9520 (count: 1362, min: 0, max: 7, avg: 6.99)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                    3173
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.159s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.058s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 24ms

PredicateCPA statistics
-----------------------
Number of abstractions:            3164 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  482 (15%)
  Because of loop head:            45 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       3164 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   9
  Times result was 'false':        0 (0%)
Number of coverage checks:         278
  BDD entailment checks:           278
Number of SMT sat checks:          9
  trivial:                         9
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          16
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   3508 (70%)

Time for post operator:                  6.816s
  Time for path formula creation:        6.778s
    Actual computation:                  6.689s
Time for strengthen operator:            0.009s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  0.893s
  Time for abstraction:                  0.657s (Max:     0.123s, Count: 3164)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 3468, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.172s
Automaton transfers with branching:                0
Automaton transfer successors:                        22158 (count: 22158, min: 1, max: 1, avg: 1.00) [1 x 22158]

CPA algorithm statistics
------------------------
Number of iterations:            2517
Max size of waitlist:            185
Average size of waitlist:        88
Number of computed successors:   3173
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         278
Number of times breaked:         9

Total time for CPA algorithm:         9.398s (Max:     5.520s)
  Time for choose from waitlist:      0.028s
  Time for precision adjustment:      1.187s
  Time for transfer relation:         7.972s
  Time for merge operator:            0.005s
  Time for stop operator:             0.074s
  Time for adding to reached set:     0.068s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                1279 (count: 9, min: 17, max: 559, avg: 142.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  19.170s
  Counterexample analysis:               18.900s (Max:     3.813s, Calls: 9)
    Refinement sat check:                16.830s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.003s
  Building the counterexample trace:                  18.901s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.014s
  ARG update:                                          0.000s

Length of refined path (in blocks):                     592 (count: 8, min: 13, max: 459, avg: 74.00)
Number of affected states:                              395 (count: 8, min: 8, max: 297, avg: 49.38)
Length (states) of path with itp 'true':                189 (count: 8, min: 4, max: 161, avg: 23.63)
Length (states) of path with itp non-trivial itp:       395 (count: 8, min: 8, max: 297, avg: 49.38)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           7 (count: 8, min: 0, max: 7, avg: 0.88)
Equal non-trivial interpolants along paths:             380 (count: 8, min: 7, max: 289, avg: 47.50)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 1362
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 322.67
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      28.449s
Time for refinements:                19.051s
Average time for refinement:          2.116s
Max time for refinement:              3.908s

Code Coverage
-----------------------------
  Function coverage:      0.073
  Visited lines:          6402
  Total lines:            23648
  Line coverage:          0.271
  Visited conditions:     588
  Total conditions:       10398
  Condition coverage:     0.057

CPAchecker general statistics
-----------------------------
Number of program locations:     21979
Number of CFA edges:             35599
Number of relevant variables:    4924
Number of functions:             810
Number of loops:                 211
Size of reached set:             1362
  Number of reached locations:   1062 (5%)
    Avg states per location:     1
    Max states per location:     40 (at node N23219)
  Number of reached functions:   59 (7%)
  Number of partitions:          1360
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N604 (exit of function __ata_qc_from_tag in lines 7180-7200), Function __ata_qc_from_tag called from node N2021, stack depth 12 [74b076d1], stack [main, ata_sff_interrupt, __ata_sff_interrupt, ata_sff_qc_fill_rtf, ata_sff_postreset, ata_std_postreset, sata_scr_read, sata_pmp_scr_read, sata_pmp_read, ata_exec_internal, ata_exec_internal_sg, __ata_qc_from_tag], Init])
  Number of target states:       1
  Size of final wait list        183

Time for analysis setup:         12.095s
  Time for loading CPAs:          0.826s
  Time for loading parser:        0.527s
  Time for CFA construction:     10.669s
    Time for parsing file(s):     2.505s
    Time for AST to CFA:          3.860s
    Time for CFA sanity check:    0.635s
    Time for post-processing:     3.430s
      Time for var class.:        0.000s
Time for Analysis:               28.449s
CPU time for analysis:           33.530s
Total time for CPAchecker:       40.549s
Total CPU time for CPAchecker:   56.280s

Time for Garbage Collector:       0.295s (in 2 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                876MB (   835 MiB) max;    458MB (   437 MiB) avg;    876MB (   835 MiB) peak
Used non-heap memory:             26MB (    25 MiB) max;     23MB (    21 MiB) avg;     26MB (    25 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2553MB (  2435 MiB) max;   2197MB (  2096 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:  14102MB ( 13449 MiB) max;  13687MB ( 13053 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
