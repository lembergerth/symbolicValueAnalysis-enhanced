scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-commit-tester/ALL.prp ../svcomp15/ldv-commit-tester/m0_true-unreach-call_drivers-net-forcedeth-ko--114_1a--fea891e-1.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-278959729_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6136: Function pointer *(ops___0->alloc_coherent) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6185: Function pointer *(ops___0->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5983: Function pointer *(ops___0->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5889-5890: Function pointer *(ops___0->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6026: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5937: Function pointer *(ops___0->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5467-5472: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 6026: Ignoring function call through function pointer *(ops___0->unmap_page): (*(ops___0->unmap_page))(dev, addr, size, dir, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5937: Ignoring function call through function pointer *(ops___0->unmap_page): (*(ops___0->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 5889-5890: Ignoring function call through function pointer *(ops___0->map_page): addr = (*(ops___0->map_page))(dev, 18446719884453740544UL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11943: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch(__CPAchecker_TMP_2); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12353: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)(ha->list.next)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 6185: Ignoring function call through function pointer *(ops___0->free_coherent): (*(ops___0->free_coherent))(dev, size, vaddr, bus); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6136: Ignoring function call through function pointer *(ops___0->alloc_coherent): memory = (*(ops___0->alloc_coherent))(dev, size, dma_handle, tmp___1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Error: Refinement using predicate refinement failed.Try using cpa.value.symbolic.refiner.SymbolicValueAnalysisRefiner (SymbolicPrecisionRefinementStrategy.performRefinement, SEVERE)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 381227 (count: 97379, min: 0, max: 8, avg: 3.91)
Number of global variables:                           97377 (count: 97379, min: 0, max: 1, avg: 1.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  998014
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                3.695s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     2.132s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 1438ms

PredicateCPA statistics
-----------------------
Number of abstractions:            998003 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  289088 (29%)
  Because of loop head:            15686 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       998003 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   11
  Times result was 'false':        0 (0%)
Number of coverage checks:         80132
  BDD entailment checks:           80132
Number of SMT sat checks:          11
  trivial:                         11
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          17
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   1797181 (94%)

Time for post operator:                 27.494s
  Time for path formula creation:       25.115s
    Actual computation:                 19.297s
Time for strengthen operator:            1.399s
  Time for satisfiability checks:        0.001s
Time for prec operator:                 28.057s
  Time for abstraction:                 11.219s (Max:     0.374s, Count: 998003)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.503s
  Time for BDD entailment checks:        0.350s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 1078164, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             1.139s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.554s
  Time for transition matches:                         3.126s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1460105 (count: 1460105, min: 1, max: 1, avg: 1.00) [1 x 1460105]

CPA algorithm statistics
------------------------
Number of iterations:            916770
Max size of waitlist:            168
Average size of waitlist:        107
Number of computed successors:   998014
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         80132
Number of times breaked:         11

Total time for CPA algorithm:       132.183s (Max:    18.999s)
  Time for choose from waitlist:      1.273s
  Time for precision adjustment:     39.521s
  Time for transfer relation:        78.172s
  Time for merge operator:            0.288s
  Time for stop operator:             2.607s
  Time for adding to reached set:     3.314s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                5686 (count: 11, min: 451, max: 557, avg: 516.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  24.493s
  Counterexample analysis:               20.010s (Max:     2.303s, Calls: 11)
    Refinement sat check:                15.297s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.003s
  Building the counterexample trace:                  20.010s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.015s
  ARG update:                                          0.000s

Length of refined path (in blocks):                    2396 (count: 10, min: 140, max: 426, avg: 239.60)
Number of affected states:                              754 (count: 10, min: 1, max: 323, avg: 75.40)
Length (states) of path with itp 'true':               1632 (count: 10, min: 1, max: 413, avg: 163.20)
Length (states) of path with itp non-trivial itp:       754 (count: 10, min: 1, max: 323, avg: 75.40)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           6 (count: 10, min: 0, max: 2, avg: 0.60)
Equal non-trivial interpolants along paths:             738 (count: 10, min: 0, max: 322, avg: 73.80)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 97379
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 83444.82
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     156.687s
Time for refinements:                24.503s
Average time for refinement:          2.227s
Max time for refinement:              2.730s

Code Coverage
-----------------------------
  Function coverage:      0.724
  Visited lines:          8787
  Total lines:            11248
  Line coverage:          0.781
  Visited conditions:     1081
  Total conditions:       1812
  Condition coverage:     0.597

CPAchecker general statistics
-----------------------------
Number of program locations:     5615
Number of CFA edges:             8976
Number of relevant variables:    1784
Number of functions:             225
Number of loops:                 53
Size of reached set:             97379
  Number of reached locations:   3490 (62%)
    Avg states per location:     27
    Max states per location:     4075 (at node N173)
  Number of reached functions:   163 (72%)
  Number of partitions:          96016
    Avg size of partitions:      1
    Max size of partitions:      16 (with key [N7581 (before line 17812), Function nv_probe called from node N8269, stack depth 2 [1c6e3b64], stack [main, nv_probe], Init])
  Number of target states:       1
  Size of final wait list        120

Time for analysis setup:          6.355s
  Time for loading CPAs:          0.649s
  Time for loading parser:        0.570s
  Time for CFA construction:      5.057s
    Time for parsing file(s):     1.477s
    Time for AST to CFA:          1.704s
    Time for CFA sanity check:    0.208s
    Time for post-processing:     1.478s
      Time for var class.:        0.000s
Time for Analysis:              156.687s
CPU time for analysis:          173.330s
Total time for CPAchecker:      163.047s
Total CPU time for CPAchecker:  184.960s

Time for Garbage Collector:       3.584s (in 11 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3516MB (  3353 MiB) max;   1493MB (  1424 MiB) avg;   3723MB (  3550 MiB) peak
Used non-heap memory:             27MB (    26 MiB) max;     26MB (    25 MiB) avg;     28MB (    26 MiB) peak
Used in PS Old Gen pool:         385MB (   367 MiB) max;    157MB (   150 MiB) avg;    385MB (   367 MiB) peak
Allocated heap memory:          4737MB (  4518 MiB) max;   4007MB (  3821 MiB) avg
Allocated non-heap memory:        28MB (    27 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:  13992MB ( 13343 MiB) max;  13772MB ( 13134 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
