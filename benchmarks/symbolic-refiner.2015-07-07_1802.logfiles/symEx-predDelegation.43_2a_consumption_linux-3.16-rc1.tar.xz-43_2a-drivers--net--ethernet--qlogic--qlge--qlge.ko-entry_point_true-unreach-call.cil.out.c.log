scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--ethernet--qlogic--qlge--qlge.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1811002429_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9165: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9212: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8896: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8803-8804: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8983: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9028: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8938: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8850: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 8938: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8850: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 8803-8804: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)-24189255811072L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9056: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8983: Ignoring function call through function pointer *(ops->sync_single_for_cpu): (*(ops->sync_single_for_cpu))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9212: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9028: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19436: Ignoring function call through function pointer *(qdev->nic_ops->get_flash): err = (*(qdev->nic_ops->get_flash))(qdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ql_write_cfg to pci_dma_mapping_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17675: Ignoring function call through function pointer *(qdev->nic_ops->port_initialize): status = (*(qdev->nic_ops->port_initialize))(qdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ql_adapter_initialize to qlge_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Destroying the void * pointer  kmalloc_array::tmp produces garbage! (in the following line(s):
 line 8218:	N196 -{tmp = kmalloc_array(n, size, flags | 32768U);}-> N197) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

line 9165: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from qlge_open to ql_adapter_up (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ql_alloc_rx_buffers to ql_update_buffer_queues (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlge_resume to ql_adapter_up (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ql_adapter_initialize to qlge_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ql_map_send to pci_dma_mapping_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8896: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, page, offset, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ql_map_send to dma_mapping_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                6567115 (count: 1313425, min: 0, max: 5, avg: 5.00)
Number of global variables:                         6567115 (count: 1313425, min: 0, max: 5, avg: 5.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 1698260
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                6.908s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     4.925s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 3974ms

PredicateCPA statistics
-----------------------
Number of abstractions:            1698255 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  323055 (19%)
  Because of loop head:            44771 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1698255 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   5
  Times result was 'false':        0 (0%)
Number of coverage checks:         206039
  BDD entailment checks:           206039
Number of SMT sat checks:          5
  trivial:                         5
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          6
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   748070 (33%)

Time for post operator:                549.163s
  Time for path formula creation:      543.901s
    Actual computation:                487.257s
Time for strengthen operator:            2.875s
  Time for satisfiability checks:        0.000s
Time for prec operator:                109.671s
  Time for abstraction:                 37.851s (Max:     1.654s, Count: 1698255)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 1.522s
  Time for BDD entailment checks:        0.942s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 1904306, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             2.716s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.780s
  Time for transition matches:                         6.001s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      2264129 (count: 2264129, min: 1, max: 1, avg: 1.00) [1 x 2264129]

CPA algorithm statistics
------------------------
Number of iterations:            1491981
Max size of waitlist:            110
Average size of waitlist:        70
Number of computed successors:   1698260
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         206039
Number of times breaked:         5

Total time for CPA algorithm:       779.403s (Max:   719.389s)
  Time for choose from waitlist:      2.575s
  Time for precision adjustment:    133.836s
  Time for transfer relation:       615.502s
  Time for merge operator:            0.676s
  Time for stop operator:             6.130s
  Time for adding to reached set:     6.044s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                3564 (count: 5, min: 502, max: 1039, avg: 712.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.512s
  Counterexample analysis:                8.210s (Max:     5.913s, Calls: 5)
    Refinement sat check:                 5.951s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.003s
  Building the counterexample trace:                   8.210s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.015s
  ARG update:                                          0.000s

Length of refined path (in blocks):                    1026 (count: 5, min: 54, max: 798, avg: 205.20)
Number of affected states:                              828 (count: 5, min: 5, max: 796, avg: 165.60)
Length (states) of path with itp 'true':                193 (count: 5, min: 1, max: 48, avg: 38.60)
Length (states) of path with itp non-trivial itp:       828 (count: 5, min: 5, max: 796, avg: 165.60)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             823 (count: 5, min: 4, max: 795, avg: 164.60)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 73167
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 35760.40
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     789.032s
Time for refinements:                 9.629s
Average time for refinement:          1.925s
Max time for refinement:              6.287s

Code Coverage
-----------------------------
  Function coverage:      0.692
  Visited lines:          14117
  Total lines:            17068
  Line coverage:          0.827
  Visited conditions:     1843
  Total conditions:       2800
  Condition coverage:     0.658

CPAchecker general statistics
-----------------------------
Number of program locations:     8415
Number of CFA edges:             11944
Number of relevant variables:    2673
Number of functions:             448
Number of loops:                 116
Size of reached set:             1313425
  Size of final wait list        87

Time for analysis setup:          8.892s
  Time for loading CPAs:          0.763s
  Time for loading parser:        0.760s
  Time for CFA construction:      7.274s
    Time for parsing file(s):     2.164s
    Time for AST to CFA:          2.305s
    Time for CFA sanity check:    0.361s
    Time for post-processing:     2.217s
      Time for var class.:        0.000s
Time for Analysis:              789.032s
CPU time for analysis:          884.500s
Total time for CPAchecker:      797.931s
Total CPU time for CPAchecker:  901.150s

Time for Garbage Collector:      79.461s (in 49 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5007MB (  4775 MiB) max;   2753MB (  2626 MiB) avg;   6364MB (  6070 MiB) peak
Used non-heap memory:             28MB (    27 MiB) max;     26MB (    25 MiB) avg;     28MB (    27 MiB) peak
Used in PS Old Gen pool:        2573MB (  2454 MiB) max;   1263MB (  1205 MiB) avg;   2573MB (  2454 MiB) peak
Allocated heap memory:          6636MB (  6329 MiB) max;   5075MB (  4840 MiB) avg
Allocated non-heap memory:        52MB (    49 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  14451MB ( 13782 MiB) max;  13665MB ( 13032 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
