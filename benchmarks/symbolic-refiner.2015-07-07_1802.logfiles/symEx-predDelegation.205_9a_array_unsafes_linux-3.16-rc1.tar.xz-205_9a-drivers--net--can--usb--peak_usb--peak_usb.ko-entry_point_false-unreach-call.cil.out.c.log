scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--can--usb--peak_usb--peak_usb.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1407171082_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 7906: Ignoring function call through function pointer *(dev->adapter->dev_encode_msg): err = (*(dev->adapter->dev_encode_msg))(dev, skb, obuf, &size); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 12701-12702: Ignoring parameters passed as varargs to function pcan_msg_add_rec: pcan_msg_add_rec(&usb_msg, (int)data_type, 0, (int)flags, (int)len, cf->can_id, (__u8 *)(&(cf->data))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 8170: Ignoring function call through function pointer *(dev->adapter->dev_start): err = (*(dev->adapter->dev_start))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8525: Ignoring function call through function pointer *(dev->adapter->dev_set_bittiming): tmp___0 = (*(dev->adapter->dev_set_bittiming))(dev, bt); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8861: Ignoring function call through function pointer *(peak_usb_adapter->intf_probe): err = (*(peak_usb_adapter->intf_probe))(intf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from peak_usb_probe to peak_usb_set_bittiming (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11970: Ignoring parameters passed as varargs to function pcan_msg_add_rec: pcan_msg_add_rec(&um, 16, (int)onoff) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Skipping recursive function call from peak_usb_probe to peak_usb_ndo_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12076: Ignoring parameters passed as varargs to function pcan_msg_add_rec: pcan_msg_add_rec(&um, 28, dev->ctrl_idx, (int)mode, timeout) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12042: Ignoring parameters passed as varargs to function pcan_msg_add_rec: pcan_msg_add_rec(&um, 5, dev->ctrl_idx, (int)onoff) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12059: Ignoring parameters passed as varargs to function pcan_msg_add_rec: pcan_msg_add_rec(&um, 10, dev->ctrl_idx, (int)filter_mode) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 8349: Ignoring function call through function pointer *(dev->adapter->dev_stop): (*(dev->adapter->dev_stop))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from peak_usb_ndo_stop to peak_usb_set_bittiming (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from peak_usb_ndo_stop to peak_usb_ndo_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from peak_usb_ndo_stop to peak_usb_ndo_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8361: Ignoring function call through function pointer *(dev->adapter->dev_set_bus): tmp___0 = (*(dev->adapter->dev_set_bus))(dev, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8451: Ignoring function call through function pointer *(dev->adapter->dev_restart_async): err = (*(dev->adapter->dev_restart_async))(dev, urb, buf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12178: Ignoring parameters passed as varargs to function pcan_msg_add_rec: pcan_msg_add_rec(&um, 4, dev->ctrl_idx, 1) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 8698: Ignoring function call through function pointer *(dev->adapter->dev_init): err = (*(dev->adapter->dev_init))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from peak_usb_create_dev to peak_usb_set_bittiming (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from peak_usb_create_dev to peak_usb_ndo_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8713: Ignoring function call through function pointer *(dev->adapter->dev_set_bus): err = (*(dev->adapter->dev_set_bus))(dev, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8728: Ignoring function call through function pointer *(dev->adapter->dev_get_device_id): (*(dev->adapter->dev_get_device_id))(dev, &(dev->device_number)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from peak_usb_create_dev to peak_usb_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11993: Ignoring parameters passed as varargs to function pcan_msg_add_rec: pcan_msg_add_rec(&um, 2, dev->ctrl_idx, ccbt) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Extern function ktime_get() returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Extern function ns_to_timeval(tmp___0.tv64) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Extern function ns_to_timeval(tmp.tv64) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Extern function ns_to_timeval(tmp.tv64) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

line 12095: Ignoring parameters passed as varargs to function pcan_msg_add_rec: pcan_msg_add_rec(&um, 18, dev->ctrl_idx) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 8961: Ignoring function call through function pointer *(dev->adapter->dev_exit): (*(dev->adapter->dev_exit))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8782: Ignoring function call through function pointer *(dev->adapter->dev_free): (*(dev->adapter->dev_free))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from peak_usb_disconnect to peak_usb_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7689: Ignoring function call through function pointer *(dev->adapter->dev_decode_buf): err = (*(dev->adapter->dev_decode_buf))(dev, urb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from peak_usb_read_bulk_callback to peak_usb_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from peak_usb_read_bulk_callback to peak_usb_do_device_exit (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12025: Ignoring parameters passed as varargs to function pcan_msg_add_rec: pcan_msg_add_rec(&um, 4, dev->ctrl_idx, (int)onoff) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Skipping recursive function call from peak_usb_do_device_exit to peak_usb_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from peak_usb_do_device_exit to peak_usb_read_bulk_callback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from peak_usb_create_dev to peak_usb_do_device_exit (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from peak_usb_probe to peak_usb_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from peak_usb_disconnect to peak_usb_read_bulk_callback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from peak_usb_start to peak_usb_ndo_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from peak_usb_probe to peak_usb_ndo_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from peak_usb_create_dev to peak_usb_ndo_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8187: Ignoring function call through function pointer *(dev->adapter->dev_set_bus): err = (*(dev->adapter->dev_set_bus))(dev, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from peak_usb_start to peak_usb_set_bittiming (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from peak_usb_start to peak_usb_ndo_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                2358920 (count: 1179462, min: 0, max: 2, avg: 2.00)
Number of global variables:                         2358920 (count: 1179462, min: 0, max: 2, avg: 2.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 1659341
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                5.130s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     3.780s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 1
Most constraints before refinement in state: 1
Constraints after refinement in state: 5
Constraints before refinement in state: 10
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 3229ms

PredicateCPA statistics
-----------------------
Number of abstractions:            1659339 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  253714 (15%)
  Because of loop head:            37034 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1659339 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   2
  Times result was 'false':        0 (0%)
Number of coverage checks:         224466
  BDD entailment checks:           224466
Number of SMT sat checks:          2
  trivial:                         2
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          7
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   624609 (30%)

Time for post operator:                314.924s
  Time for path formula creation:      310.838s
    Actual computation:                281.827s
Time for strengthen operator:            2.578s
  Time for satisfiability checks:        0.000s
Time for prec operator:                 70.716s
  Time for abstraction:                 22.956s (Max:     0.846s, Count: 1659339)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 1.259s
  Time for BDD entailment checks:        0.812s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 1883815, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             2.026s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.544s
  Time for transition matches:                         6.570s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      2738465 (count: 2738465, min: 1, max: 1, avg: 1.00) [1 x 2738465]

CPA algorithm statistics
------------------------
Number of iterations:            1416418
Max size of waitlist:            18451
Average size of waitlist:        7553
Number of computed successors:   1659341
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         224466
Number of times breaked:         2

Total time for CPA algorithm:       792.249s (Max:   726.057s)
  Time for choose from waitlist:      2.122s
  Time for precision adjustment:     90.302s
  Time for transfer relation:       374.414s
  Time for merge operator:          137.231s
  Time for stop operator:           170.708s
  Time for adding to reached set:     5.379s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                 185 (count: 2, min: 92, max: 93, avg: 92.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.919s
  Counterexample analysis:                0.261s (Max:     0.139s, Calls: 2)
    Refinement sat check:                 0.199s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.261s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.003s
  Precision update:                                    0.004s
  ARG update:                                          0.000s

Length of refined path (in blocks):                     165 (count: 2, min: 76, max: 89, avg: 82.50)
Number of affected states:                               62 (count: 2, min: 4, max: 58, avg: 31.00)
Length (states) of path with itp 'true':                101 (count: 2, min: 30, max: 71, avg: 50.50)
Length (states) of path with itp non-trivial itp:        62 (count: 2, min: 4, max: 58, avg: 31.00)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 2, min: 2, max: 2, avg: 2.00)
Equal non-trivial interpolants along paths:              56 (count: 2, min: 1, max: 55, avg: 28.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 127712
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 127708.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     794.312s
Time for refinements:                 2.063s
Average time for refinement:          1.031s
Max time for refinement:              1.297s

Code Coverage
-----------------------------
  Function coverage:      0.537
  Visited lines:          7862
  Total lines:            9415
  Line coverage:          0.835
  Visited conditions:     540
  Total conditions:       1010
  Condition coverage:     0.535

CPAchecker general statistics
-----------------------------
Number of program locations:     2794
Number of CFA edges:             3903
Number of relevant variables:    899
Number of functions:             175
Number of loops:                 24
Size of reached set:             1179462
  Size of final wait list        18449

Time for analysis setup:          4.624s
  Time for loading CPAs:          0.612s
  Time for loading parser:        0.622s
  Time for CFA construction:      3.295s
    Time for parsing file(s):     1.186s
    Time for AST to CFA:          1.095s
    Time for CFA sanity check:    0.107s
    Time for post-processing:     0.715s
      Time for var class.:        0.000s
Time for Analysis:              794.312s
CPU time for analysis:          892.040s
Total time for CPAchecker:      798.941s
Total CPU time for CPAchecker:  900.190s

Time for Garbage Collector:      81.838s (in 58 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5146MB (  4908 MiB) max;   2870MB (  2737 MiB) avg;   6302MB (  6011 MiB) peak
Used non-heap memory:             28MB (    26 MiB) max;     25MB (    24 MiB) avg;     28MB (    26 MiB) peak
Used in PS Old Gen pool:        2798MB (  2669 MiB) max;   1376MB (  1313 MiB) avg;   2872MB (  2739 MiB) peak
Allocated heap memory:          6498MB (  6197 MiB) max;   5101MB (  4865 MiB) avg
Allocated non-heap memory:        51MB (    49 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  13841MB ( 13200 MiB) max;  13702MB ( 13067 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
