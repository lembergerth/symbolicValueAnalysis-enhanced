scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--intel--e1000e--e1000e.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-389758994_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 33868: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33916: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 39159: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 33598-33599: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 39066-39067: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33690: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 39246: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33735: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 39291: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 39201: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33645: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 39113: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 14156-14157: Function pointer *(hw->phy.ops.write_reg_page) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 14159-14160: Function pointer *(hw->phy.ops.write_reg_page) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 14164-14165: Function pointer *(hw->phy.ops.write_reg_page) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 14167-14168: Function pointer *(hw->phy.ops.write_reg_page) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 49982: Function pointer *(hw->phy.ops.write_reg_page) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 49988: Function pointer *(hw->phy.ops.write_reg_page) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 49990: Function pointer *(hw->phy.ops.write_reg_page) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 49916-49917: Function pointer *(hw->phy.ops.write_reg_page) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 49919-49920: Function pointer *(hw->phy.ops.write_reg_page) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7487: Function pointer *(hw->nvm.ops.read) with type s32  (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7500: Function pointer *(hw->nvm.ops.write) with type s32  (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7444: Function pointer *(hw->phy.ops.write_reg) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11408: Function pointer *(hw->phy.ops.write_reg_locked) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 11700: Ignoring function call through function pointer *(hw->phy.ops.acquire): ret_val = (*(hw->phy.ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 20214: Ignoring function call through function pointer *(mac->ops.id_led_init): ret_val = (*(mac->ops.id_led_init))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_init_hw_80003es2lan to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19306: Ignoring function call through function pointer *(hw->mac.ops.set_lan_id): (*(hw->mac.ops.set_lan_id))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7432: Ignoring function call through function pointer *(hw->phy.ops.read_reg): tmp = (*(hw->phy.ops.read_reg))(hw, offset, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27389: Ignoring function call through function pointer *(hw->phy.ops.acquire): ret_val = (*(hw->phy.ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from __e1000e_read_phy_reg_igp to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000e_read_phy_reg_igp to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 46587: Ignoring function call through function pointer *(mac->ops.reset_hw): (*(mac->ops.reset_hw))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000e_reset to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_reset to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 46587: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000e_reset to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_phy_has_link_generic to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_check_polarity_82577 to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info_82577 to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 32302: Ignoring function call through function pointer *(hw->phy.ops.get_cable_length): ret_val = (*(hw->phy.ops.get_cable_length))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_get_phy_info_82577 to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info_82577 to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 32302: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : ret_val = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000_get_phy_info_82577 to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info_82577 to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7444: Ignoring function call through function pointer *(hw->phy.ops.write_reg): tmp = (*(hw->phy.ops.write_reg))(hw, offset, (int)data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 47475: Ignoring function call through function pointer *(hw->phy.ops.acquire): ret_val = (*(hw->phy.ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000e_update_phy_stats to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_phy_stats to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 47475: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : ret_val = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000e_update_phy_stats to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_phy_stats to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_phy_stats to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_phy_info_m88 to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_check_polarity_m88 to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 26824: Ignoring function call through function pointer *(hw->phy.ops.get_cable_length): tmp = (*(hw->phy.ops.get_cable_length))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_get_cable_length to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_cable_length to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 26824: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : tmp = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000_get_cable_length to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_cable_length to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_cable_length to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_cable_length to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 27624: Ignoring function call through function pointer *(hw->phy.ops.acquire): ret_val = (*(hw->phy.ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from __e1000_write_kmrn_reg to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_write_kmrn_reg to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 27624: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : ret_val = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from __e1000_write_kmrn_reg to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_write_kmrn_reg to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_write_kmrn_reg to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_write_kmrn_reg to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_write_kmrn_reg to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_cable_length_m88 to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17077: Ignoring function call through function pointer *(mac->ops.id_led_init): ret_val = (*(mac->ops.id_led_init))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_init_hw_ich8lan to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_init_hw_ich8lan to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17077: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : ret_val = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000_init_hw_ich8lan to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_init_hw_ich8lan to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_init_hw_ich8lan to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_init_hw_ich8lan to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_init_hw_ich8lan to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_init_hw_ich8lan to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_shutdown to e1000e_down (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_lv_jumbo_workaround_ich8lan to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14131: Ignoring function call through function pointer *(hw->phy.ops.acquire): ret_val = (*(hw->phy.ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_copy_rx_addrs_to_phy_ich8lan to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_copy_rx_addrs_to_phy_ich8lan to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14131: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : ret_val = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000_copy_rx_addrs_to_phy_ich8lan to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_copy_rx_addrs_to_phy_ich8lan to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_copy_rx_addrs_to_phy_ich8lan to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_copy_rx_addrs_to_phy_ich8lan to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_copy_rx_addrs_to_phy_ich8lan to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_copy_rx_addrs_to_phy_ich8lan to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_copy_rx_addrs_to_phy_ich8lan to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_cfg_kmrn_10_100_80003es2lan to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_cfg_kmrn_1000_80003es2lan to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16718: Ignoring function call through function pointer *(hw->nvm.ops.valid_led_default): ret_val = (*(hw->nvm.ops.valid_led_default))(hw, &data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 51425: Ignoring function call through function pointer *(ei->get_variants): err = (*(ei->get_variants))(adapter); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_probe to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_probe to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 51425: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : err = e1000_io_slot_reset(adapter); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000_probe to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_probe to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_probe to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_probe to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_probe to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_probe to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_probe to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_probe to e1000_id_led_init_pchlan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7500: Ignoring function call through function pointer *(hw->nvm.ops.write): tmp = (*(hw->nvm.ops.write))(hw, (int)offset, (int)words, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7487: Ignoring function call through function pointer *(hw->nvm.ops.read): tmp = (*(hw->nvm.ops.read))(hw, (int)offset, (int)words, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 21564: Ignoring function call through function pointer *(mac->ops.set_lan_id): (*(mac->ops.set_lan_id))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000e_get_bus_info_pcie to e1000_power_up_phy_copper (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 18514: Ignoring function call through function pointer *(hw->phy.ops.acquire): ret_val = (*(hw->phy.ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 18514: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : ret_val = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000_id_led_init_pchlan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000e_get_bus_info_pcie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_cable_length_82577 to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7474: Ignoring function call through function pointer *(hw->nvm.ops.update): tmp = (*(hw->nvm.ops.update))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7474: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : tmp = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000_id_led_init_pchlan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000e_get_bus_info_pcie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000_validate_nvm_checksum_82571 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21907: Ignoring function call through function pointer *(hw->mac.ops.rar_set): (*(hw->mac.ops.rar_set))(hw, (u8 *)(&alt_mac_addr), 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 42121: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch(__CPAchecker_TMP_2); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 42134: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)next_rxd); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 39113: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 42264: Ignoring function call through function pointer *(adapter->alloc_rx_buf): (*(adapter->alloc_rx_buf))(rx_ring, cleaned_count, 32U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 39159: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, page, offset, size, dir, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 39066-39067: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544UL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 33763: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from dma_mapping_error to e1000_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_ringparam to e1000e_down (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 33868: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 39201: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 33916: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46053: Ignoring function call through function pointer *(hw->mac.ops.update_mc_addr_list): (*(hw->mac.ops.update_mc_addr_list))(hw, mta_list, (u32 )i); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46053: Return type of function e1000_clean_rx_irq is bool , but result is used as type void: e1000_clean_rx_irq(hw, mta_list, (u32 )i); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000e_write_mc_addr_list to e1000_clean_rx_irq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 43112: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)next_rxd); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 43270: Ignoring function call through function pointer *(adapter->alloc_rx_buf): (*(adapter->alloc_rx_buf))(rx_ring, cleaned_count, 32U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_clean_jumbo_rx_irq to e1000_alloc_rx_buffers (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_alloc_rx_buffers_ps to dma_mapping_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 43298: Ignoring function call through function pointer *(adapter->alloc_rx_buf): (*(adapter->alloc_rx_buf))(rx_ring, cleaned_count, 32U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 42724: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch(__CPAchecker_TMP_2); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 42737: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)next_rxd); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 39246: Ignoring function call through function pointer *(ops->sync_single_for_cpu): (*(ops->sync_single_for_cpu))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 39291: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 42967: Ignoring function call through function pointer *(adapter->alloc_rx_buf): (*(adapter->alloc_rx_buf))(rx_ring, cleaned_count, 32U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_clean_rx_irq_ps to e1000_alloc_rx_buffers (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 42995: Ignoring function call through function pointer *(adapter->alloc_rx_buf): (*(adapter->alloc_rx_buf))(rx_ring, cleaned_count, 32U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 45994: Ignoring function call through function pointer *(hw->mac.ops.update_mc_addr_list): (*(hw->mac.ops.update_mc_addr_list))(hw, 0, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000e_write_mc_addr_list to e1000_alloc_rx_buffers (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 46121: Ignoring function call through function pointer *(hw->mac.ops.rar_set): (*(hw->mac.ops.rar_set))(hw, (u8 *)(&(ha->addr)), tmp___0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46121: Return type of function e1000_clean_rx_irq is bool , but result is used as type void: e1000_clean_rx_irq(hw, (u8 *)(&(ha->addr)), tmp___0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000e_write_uc_addr_list to e1000_clean_rx_irq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 45200: Ignoring function call through function pointer *(hw->mac.ops.write_vfta): (*(hw->mac.ops.write_vfta))(hw, index, vfta); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_vlan_rx_kill_vid to e1000_alloc_rx_buffers (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 45156: Ignoring function call through function pointer *(hw->mac.ops.write_vfta): (*(hw->mac.ops.write_vfta))(hw, index, vfta); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_vlan_rx_add_vid to e1000_alloc_rx_buffers (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 45611: Ignoring function call through function pointer *(hw->mac.ops.config_collision_dist): (*(hw->mac.ops.config_collision_dist))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_configure_tx to e1000_power_up_phy_copper (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_configure_tx to e1000_clear_hw_cntrs_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 46382: Ignoring function call through function pointer *(adapter->hw.phy.ops.power_down): (*(adapter->hw.phy.ops.power_down))(&(adapter->hw)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_power_down_phy to e1000_power_up_phy_copper (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy to e1000_clear_hw_cntrs_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy to e1000_remove (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_shutdown to __e1000_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_id_led_init_pchlan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000e_get_bus_info_pcie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_validate_nvm_checksum_82571 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_read_mac_addr_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15959: Ignoring function call through function pointer *(nvm->ops.acquire): (*(nvm->ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15959: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_id_led_init_pchlan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000e_get_bus_info_pcie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_validate_nvm_checksum_82571 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_read_mac_addr_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_update_nvm_checksum_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_check_downshift to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 22187: Ignoring function call through function pointer *(mac->ops.config_collision_dist): (*(mac->ops.config_collision_dist))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000e_check_for_copper_link to e1000_power_up_phy_copper (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_check_for_copper_link to e1000_clear_hw_cntrs_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_check_for_copper_link to e1000_remove (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_check_for_copper_link to e1000e_update_phy_task (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_print_hw_hang to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10580: Ignoring function call through function pointer *(mac->ops.check_mng_mode): tmp = (*(mac->ops.check_mng_mode))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10592: Ignoring function call through function pointer *(phy->ops.check_reset_block): tmp___1 = (*(phy->ops.check_reset_block))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10592: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : tmp___1 = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_id_led_init_pchlan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000e_get_bus_info_pcie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_validate_nvm_checksum_82571 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_read_mac_addr_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_update_nvm_checksum_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000e_check_for_copper_link (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_cable_length_igp_2 to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13691: Ignoring function call through function pointer *(hw->phy.ops.acquire): ret_val = (*(hw->phy.ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13691: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : ret_val = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_id_led_init_pchlan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000e_get_bus_info_pcie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_validate_nvm_checksum_82571 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_read_mac_addr_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_update_nvm_checksum_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000e_check_for_copper_link (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_check_for_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 24027: Ignoring function call through function pointer *(hw->nvm.ops.valid_led_default): ret_val = (*(hw->nvm.ops.valid_led_default))(hw, &data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000e_id_led_init_generic to e1000_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_id_led_init_generic to e1000_set_ringparam (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_features to e1000e_reinit_locked (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_features to e1000e_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000e_down (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000e_up (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000e_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 34748: Ignoring function call through function pointer *(hw->mac.ops.setup_link): retval = (*(hw->mac.ops.setup_link))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 34748: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : retval = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_id_led_init_pchlan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000e_get_bus_info_pcie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_validate_nvm_checksum_82571 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_read_mac_addr_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_update_nvm_checksum_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000e_check_for_copper_link (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_check_for_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000e_id_led_init_generic (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_phy_force_speed_duplex_m88 to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 29564: Ignoring function call through function pointer *(hw->mac.ops.config_collision_dist): (*(hw->mac.ops.config_collision_dist))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000e_phy_force_speed_duplex_setup to e1000_power_up_phy_copper (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_phy_force_speed_duplex_setup to e1000_clear_hw_cntrs_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_phy_force_speed_duplex_setup to e1000_remove (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_phy_force_speed_duplex_setup to e1000e_update_phy_task (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_phy_force_speed_duplex_setup to e1000_power_down_phy_copper_82571 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 27547: Ignoring function call through function pointer *(hw->phy.ops.acquire): ret_val = (*(hw->phy.ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from __e1000_read_kmrn_reg to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_read_kmrn_reg to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 27547: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : ret_val = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from __e1000_read_kmrn_reg to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_read_kmrn_reg to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_read_kmrn_reg to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_read_kmrn_reg to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_read_kmrn_reg to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_read_kmrn_reg to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_read_kmrn_reg to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Error: Refinement using predicate refinement failed.Try using cpa.value.symbolic.refiner.SymbolicValueAnalysisRefiner (SymbolicPrecisionRefinementStrategy.performRefinement, SEVERE)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 557959 (count: 77345, min: 0, max: 8, avg: 7.21)
Number of global variables:                          386715 (count: 77345, min: 0, max: 5, avg: 5.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  422689
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                2.158s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     1.021s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 688ms

PredicateCPA statistics
-----------------------
Number of abstractions:            422679 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  103472 (24%)
  Because of loop head:            11394 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       422679 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   10
  Times result was 'false':        0 (0%)
Number of coverage checks:         36032
  BDD entailment checks:           36032
Number of SMT sat checks:          10
  trivial:                         10
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          10
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   553090 (77%)

Time for post operator:                 55.150s
  Time for path formula creation:       53.871s
    Actual computation:                 33.292s
Time for strengthen operator:            0.700s
  Time for satisfiability checks:        0.000s
Time for prec operator:                 29.179s
  Time for abstraction:                  5.215s (Max:     0.382s, Count: 422679)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.299s
  Time for BDD entailment checks:        0.206s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 458732, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.557s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.758s
  Time for transition matches:                         1.535s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       605203 (count: 605203, min: 1, max: 1, avg: 1.00) [1 x 605203]

CPA algorithm statistics
------------------------
Number of iterations:            377872
Max size of waitlist:            1785
Average size of waitlist:        1437
Number of computed successors:   422689
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         36032
Number of times breaked:         10

Total time for CPA algorithm:       138.987s (Max:    46.268s)
  Time for choose from waitlist:      0.633s
  Time for precision adjustment:     35.195s
  Time for transfer relation:        95.908s
  Time for merge operator:            0.122s
  Time for stop operator:             1.415s
  Time for adding to reached set:     2.089s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):               21387 (count: 10, min: 19, max: 4272, avg: 2138.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  63.340s
  Counterexample analysis:               60.804s (Max:    12.656s, Calls: 10)
    Refinement sat check:                16.275s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.015s
  Building the counterexample trace:                  60.804s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.005s
  ARG update:                                          0.000s

Length of refined path (in blocks):                   11599 (count: 9, min: 15, max: 4103, avg: 1288.78)
Number of affected states:                              102 (count: 9, min: 1, max: 18, avg: 11.33)
Length (states) of path with itp 'true':              11488 (count: 9, min: 4, max: 4100, avg: 1276.44)
Length (states) of path with itp non-trivial itp:       102 (count: 9, min: 1, max: 18, avg: 11.33)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              93 (count: 9, min: 0, max: 17, avg: 10.33)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 77345
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 38666.70
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     202.623s
Time for refinements:                63.635s
Average time for refinement:          6.363s
Max time for refinement:             13.273s

Code Coverage
-----------------------------
  Function coverage:      0.398
  Visited lines:          13535
  Total lines:            29668
  Line coverage:          0.456
  Visited conditions:     5587
  Total conditions:       27466
  Condition coverage:     0.203

CPAchecker general statistics
-----------------------------
Number of program locations:     49158
Number of CFA edges:             89421
Number of relevant variables:    5179
Number of functions:             759
Number of loops:                 172
Size of reached set:             77345
  Number of reached locations:   9394 (19%)
    Avg states per location:     8
    Max states per location:     1896 (at node N0)
  Number of reached functions:   302 (40%)
  Number of partitions:          77329
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N22947 (before lines 46589-46594), Function e1000e_reset called from node N25703, stack depth 13 [6c7ac0dd], stack [main, e1000_get_variants_ich8lan, e1000_init_phy_params_pchlan, e1000_init_phy_workarounds_pchlan, e1000_init_hw_80003es2lan, e1000_get_variants_80003es2lan, e1000_init_mac_params_80003es2lan, e1000_power_up_phy_copper, e1e_rphy, e1000e_read_phy_reg_igp, __e1000e_read_phy_reg_igp, e1000_io_slot_reset, e1000e_reset], Init])
  Number of target states:       1
  Size of final wait list        1756

Time for analysis setup:         13.844s
  Time for loading CPAs:          1.021s
  Time for loading parser:        0.612s
  Time for CFA construction:     12.122s
    Time for parsing file(s):     2.381s
    Time for AST to CFA:          3.319s
    Time for CFA sanity check:    0.745s
    Time for post-processing:     5.541s
      Time for var class.:        0.000s
Time for Analysis:              202.623s
CPU time for analysis:          221.720s
Total time for CPAchecker:      216.473s
Total CPU time for CPAchecker:  247.330s

Time for Garbage Collector:       2.866s (in 8 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3596MB (  3429 MiB) max;   1415MB (  1349 MiB) avg;   3673MB (  3503 MiB) peak
Used non-heap memory:             29MB (    28 MiB) max;     28MB (    26 MiB) avg;     30MB (    29 MiB) peak
Used in PS Old Gen pool:         340MB (   324 MiB) max;    167MB (   160 MiB) avg;    340MB (   324 MiB) peak
Allocated heap memory:          4741MB (  4522 MiB) max;   3917MB (  3735 MiB) avg
Allocated non-heap memory:        30MB (    29 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:  14521MB ( 13848 MiB) max;  13840MB ( 13198 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
