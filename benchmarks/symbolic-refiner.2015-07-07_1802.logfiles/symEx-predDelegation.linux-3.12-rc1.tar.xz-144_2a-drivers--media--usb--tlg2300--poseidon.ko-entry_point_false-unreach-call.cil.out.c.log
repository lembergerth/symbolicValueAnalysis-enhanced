scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.12-rc1/ALL.prp ../svcomp15/ldv-linux-3.12-rc1/linux-3.12-rc1.tar.xz-144_2a-drivers--media--usb--tlg2300--poseidon.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1728233659_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 18982: Ignoring call via function pointer completeFnInt for which no suitable target was found in line: (*completeFnInt)(usb_urb); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 18982: Ignoring function call through function pointer *completeFnInt: (*completeFnInt)(usb_urb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ldv_usb_submit_urb_25 to ldv_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ldv_usb_submit_urb_18 to ldv_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ldv_usb_submit_urb_2 to ldv_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17857: Ignoring function call through function pointer *(pd->pm_resume): (*(pd->pm_resume))(pd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___0 produces garbage! (in the following line(s):
 line 18501:	N6039 -{ldv_main_exported_4();}-> N6041) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___1 produces garbage! (in the following line(s):
 line 18501:	N6039 -{ldv_main_exported_4();}-> N6041) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___3 produces garbage! (in the following line(s):
 line 18501:	N6039 -{ldv_main_exported_4();}-> N6041) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___4 produces garbage! (in the following line(s):
 line 18501:	N6039 -{ldv_main_exported_4();}-> N6041) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___7 produces garbage! (in the following line(s):
 line 18501:	N6039 -{ldv_main_exported_4();}-> N6041) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

line 17799: Ignoring function call through function pointer *(pd->pm_resume): tmp___1 = (*(pd->pm_resume))(pd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___0 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___1 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___10 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___11 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___13 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___14 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___15 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___17 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___18 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___19 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___20 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___21 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___24 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___25 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___26 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___28 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___30 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___31 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___33 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___4 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___7 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_11::tmp___9 produces garbage! (in the following line(s):
 line 18300:	N5901 -{ldv_main_exported_11();}-> N5903) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

The void * pointer check_firmware::buf to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 17886:	N5680 -{ret = usb_control_msg(udev, tmp | 2147483776U, 130, 192, 0, 0, buf, 8, 5000);}-> N5681) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

line 18991: Ignoring call via function pointer completeFnBulk for which no suitable target was found in line: (*completeFnBulk)(usb_urb); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 18991: Ignoring function call through function pointer *completeFnBulk: (*completeFnBulk)(usb_urb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                6789753 (count: 503497, min: 0, max: 15, avg: 13.49)
Number of global variables:                         6789029 (count: 503497, min: 0, max: 14, avg: 13.48)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  564348
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                3.953s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     2.095s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 1
Most constraints before refinement in state: 1
Constraints after refinement in state: 594
Constraints before refinement in state: 704
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 1073ms

PredicateCPA statistics
-----------------------
Number of abstractions:            564333 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  137691 (24%)
  Because of loop head:            8571 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       564333 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   15
  Times result was 'false':        0 (0%)
Number of coverage checks:         27658
  BDD entailment checks:           27658
Number of SMT sat checks:          15
  trivial:                         15
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          16
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   222538 (30%)

Time for post operator:                 64.878s
  Time for path formula creation:       63.640s
    Actual computation:                 53.747s
Time for strengthen operator:            0.755s
  Time for satisfiability checks:        0.000s
Time for prec operator:                 21.457s
  Time for abstraction:                  6.251s (Max:     0.155s, Count: 564333)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.255s
  Time for BDD entailment checks:        0.212s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 592023, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.493s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.436s
  Time for transition matches:                         1.425s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       726657 (count: 726657, min: 1, max: 1, avg: 1.00) [1 x 726657]

CPA algorithm statistics
------------------------
Number of iterations:            512987
Max size of waitlist:            23295
Average size of waitlist:        10845
Number of computed successors:   564348
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         27658
Number of times breaked:         15

Total time for CPA algorithm:       857.229s (Max:   831.787s)
  Time for choose from waitlist:      0.724s
  Time for precision adjustment:     30.250s
  Time for transfer relation:        88.777s
  Time for merge operator:          186.790s
  Time for stop operator:           544.002s
  Time for adding to reached set:     2.759s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                3604 (count: 15, min: 99, max: 502, avg: 240.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.160s
  Counterexample analysis:                5.717s (Max:     1.112s, Calls: 15)
    Refinement sat check:                 4.369s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   5.717s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.029s
  ARG update:                                          0.000s

Length of refined path (in blocks):                    2056 (count: 15, min: 44, max: 416, avg: 137.07)
Number of affected states:                             1379 (count: 15, min: 2, max: 414, avg: 91.93)
Length (states) of path with itp 'true':                662 (count: 15, min: 1, max: 332, avg: 44.13)
Length (states) of path with itp non-trivial itp:      1379 (count: 15, min: 2, max: 414, avg: 91.93)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 15, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1364 (count: 15, min: 1, max: 413, avg: 90.93)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 4422
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 2213.93
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     863.429s
Time for refinements:                 6.200s
Average time for refinement:          0.413s
Max time for refinement:              1.128s

Code Coverage
-----------------------------
  Function coverage:      0.317
  Visited lines:          9382
  Total lines:            12576
  Line coverage:          0.746
  Visited conditions:     436
  Total conditions:       1414
  Condition coverage:     0.308

CPAchecker general statistics
-----------------------------
Number of program locations:     4119
Number of CFA edges:             5834
Number of relevant variables:    1196
Number of functions:             259
Number of loops:                 30
Size of reached set:             503497
  Number of reached locations:   1310 (32%)
    Avg states per location:     384
    Max states per location:     15516 (at node N2690)
  Number of reached functions:   82 (32%)
  Number of partitions:          320963
    Avg size of partitions:      1
    Max size of partitions:      7760 (with key [N779 (before line 9114), Function alloc_bulk_urbs_generic called from node N834, stack depth 6 [2a21d0b1], stack [main, ldv_main_exported_13, pd_buf_setup, start_video_stream, prepare_bulk_urb, alloc_bulk_urbs_generic], Init])
  Number of target states:       0
  Size of final wait list        23295

Time for analysis setup:          6.097s
  Time for loading CPAs:          0.624s
  Time for loading parser:        0.573s
  Time for CFA construction:      4.804s
    Time for parsing file(s):     1.374s
    Time for AST to CFA:          1.900s
    Time for CFA sanity check:    0.207s
    Time for post-processing:     1.007s
      Time for var class.:        0.000s
Time for Analysis:              863.429s
CPU time for analysis:          888.790s
Total time for CPAchecker:      869.531s
Total CPU time for CPAchecker:  900.060s

Time for Garbage Collector:      10.197s (in 64 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4544MB (  4334 MiB) max;   2201MB (  2099 MiB) avg;   4725MB (  4506 MiB) peak
Used non-heap memory:             27MB (    26 MiB) max;     27MB (    26 MiB) avg;     28MB (    26 MiB) peak
Used in PS Old Gen pool:        1128MB (  1076 MiB) max;    703MB (   670 MiB) avg;   1128MB (  1076 MiB) peak
Allocated heap memory:          4875MB (  4650 MiB) max;   4375MB (  4172 MiB) avg
Allocated non-heap memory:        28MB (    27 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:  13815MB ( 13175 MiB) max;  13597MB ( 12967 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
