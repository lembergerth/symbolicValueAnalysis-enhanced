scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-sound--drivers--snd-mts64.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1768199760_tempdir
line 4829: Function pointer *(p->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4807: Function pointer *(p->ops->read_control) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4791: Function pointer *(p->ops->read_control) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5022: Function pointer *(p->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5051: Function pointer *(p->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 4829: Ignoring function call through function pointer *(p->ops->read_status): c = (*(p->ops->read_status))(p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5130: Ignoring function call through function pointer *(p->ops->write_data): (*(p->ops->write_data))(p, (int)c); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from mts64_write_midi to mts64_write_command (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5150: Ignoring function call through function pointer *(p->ops->write_data): (*(p->ops->write_data))(p, (int)c); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from mts64_write_data to snd_mts64_rawmidi_output_trigger (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5152: Ignoring function call through function pointer *(p->ops->write_control): (*(p->ops->write_control))(p, 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5154: Ignoring function call through function pointer *(p->ops->write_control): (*(p->ops->write_control))(p, 3); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5156: Ignoring function call through function pointer *(p->ops->write_control): (*(p->ops->write_control))(p, 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5132: Ignoring function call through function pointer *(p->ops->write_control): (*(p->ops->write_control))(p, 6); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5134: Ignoring function call through function pointer *(p->ops->write_control): (*(p->ops->write_control))(p, 7); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5136: Ignoring function call through function pointer *(p->ops->write_control): (*(p->ops->write_control))(p, 6); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from mts64_write_command to snd_mts64_rawmidi_output_trigger (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4791: Ignoring function call through function pointer *(p->ops->read_control): c = (*(p->ops->read_control))(p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4795: Ignoring function call through function pointer *(p->ops->write_control): (*(p->ops->write_control))(p, (int)c); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5022: Ignoring function call through function pointer *(p->ops->read_status): status = (*(p->ops->read_status))(p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5047: Ignoring function call through function pointer *(p->ops->write_data): (*(p->ops->write_data))(p, (int)i); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5051: Ignoring function call through function pointer *(p->ops->read_status): status = (*(p->ops->read_status))(p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4807: Ignoring function call through function pointer *(p->ops->read_control): c = (*(p->ops->read_control))(p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4811: Ignoring function call through function pointer *(p->ops->write_control): (*(p->ops->write_control))(p, (int)c); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               15421724 (count: 3855433, min: 0, max: 4, avg: 4.00)
Number of global variables:                        15421724 (count: 3855433, min: 0, max: 4, avg: 4.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 4320911
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               13.824s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:    10.401s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 1
Most constraints before refinement in state: 1
Constraints after refinement in state: 212
Constraints before refinement in state: 318
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 44772ms

PredicateCPA statistics
-----------------------
Number of abstractions:            4320907 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1347511 (31%)
  Because of loop head:            60625 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       4320907 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   4
  Times result was 'false':        0 (0%)
Number of coverage checks:         368333
  BDD entailment checks:           368333
Number of SMT sat checks:          4
  trivial:                         4
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          5
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   7329499 (89%)

Time for post operator:                202.868s
  Time for path formula creation:      194.510s
    Actual computation:                165.411s
Time for strengthen operator:            5.225s
  Time for satisfiability checks:        0.000s
Time for prec operator:                143.022s
  Time for abstraction:                 38.469s (Max:     1.761s, Count: 4320907)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 1.585s
  Time for BDD entailment checks:        0.969s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 4689250, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             4.200s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 87.161s
  Time for transition matches:                        10.248s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      5818034 (count: 5818034, min: 1, max: 1, avg: 1.00) [1 x 5818034]

CPA algorithm statistics
------------------------
Number of iterations:            3952487
Max size of waitlist:            40
Average size of waitlist:        28
Number of computed successors:   4320911
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         368333
Number of times breaked:         4

Total time for CPA algorithm:       668.316s (Max:   649.837s)
  Time for choose from waitlist:      4.408s
  Time for precision adjustment:    224.111s
  Time for transfer relation:       383.081s
  Time for merge operator:            1.810s
  Time for stop operator:             9.880s
  Time for adding to reached set:    14.694s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                1353 (count: 4, min: 244, max: 508, avg: 338.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.292s
  Counterexample analysis:                1.033s (Max:     0.444s, Calls: 4)
    Refinement sat check:                 0.684s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   1.033s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.013s
  ARG update:                                          0.000s

Length of refined path (in blocks):                     831 (count: 4, min: 84, max: 503, avg: 207.75)
Number of affected states:                              633 (count: 4, min: 2, max: 501, avg: 158.25)
Length (states) of path with itp 'true':                194 (count: 4, min: 1, max: 119, avg: 48.50)
Length (states) of path with itp non-trivial itp:       633 (count: 4, min: 2, max: 501, avg: 158.25)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             629 (count: 4, min: 1, max: 500, avg: 157.25)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 27965
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 24287.50
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     670.681s
Time for refinements:                 2.364s
Average time for refinement:          0.591s
Max time for refinement:              0.857s

