scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-net--batman-adv--batman-adv.ko-ldv_main15_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_875012403_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 13042: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "taking other backbones claim group: %04x\n", (int)tmp___1) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Cannot get declaration of function __builtin_va_start, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15358: Ignoring parameters passed as varargs to function batadv_fdebug_log: batadv_fdebug_log(bat_priv->debug_log, "[%10u] %s", tmp, (char *)(&tmp_log_buf)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 15317: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end((__va_list_tag *)(&args)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 15360: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end((__va_list_tag *)(&args)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

lines 13187-13188: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "bla_process_claim(): received a claim frame from another group. From: %pM on vid %d ...(hw_src %pM, hw_dst %pM)\n", (unsigned char *)(&(ethhdr->h_source)), (int)vid, hw_src, hw_dst) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 12238-12239: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "bla_get_backbone_gw(): not found (%pM, %d), creating new entry\n", orig, (int)vid) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 39399-39400: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Deleting %pM from global tt entry %pM: %s\n", (uint8_t *)(&(orig_node->orig)), (uint8_t *)(&(tt_global_entry->common.addr)), message) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 39651-39652: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Deleting global tt entry %pM: %s\n", (uint8_t *)(&(tt_global->common.addr)), message) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 12168-12170: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "bla_send_claim(): REQUEST of %pM to %pMon vid %d\n", (unsigned char *)(&(ethhdr->h_source)), (unsigned char *)(&(ethhdr->h_dest)), (int)vid) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 12134-12135: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "bla_send_claim(): ANNOUNCE of %pM on vid %d\n", (unsigned char *)(&(ethhdr->h_source)), (int)vid) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12112: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "bla_send_claim(): UNCLAIM %pM on vid %d\n", mac, (int)vid) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12090: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "bla_send_claim(): CLAIM %pM on vid %d\n", mac, (int)vid) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 12856-12857: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "handle_request(): REQUEST vid %d (sent by %pM)...\n", (int)vid, (unsigned char *)(&(ethhdr->h_source))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12374: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "bla_answer_request(): received a claim request, send all of our own claims again\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 12784-12785: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "handle_announce(): ANNOUNCE vid %d (sent by %pM)... CRC = %04x\n", (int)vid, (uint8_t *)(&(backbone_gw->orig)), (int)crc) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 12796-12798: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(backbone_gw->bat_priv, "handle_announce(): CRC FAILED for %pM/%d (my = %04x, sent = %04x)\n", (uint8_t *)(&(backbone_gw->orig)), __CPAchecker_TMP_1, __CPAchecker_TMP_2, (int)crc) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12484: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(backbone_gw->bat_priv, "Sending REQUEST to %pM\n", (uint8_t *)(&(backbone_gw->orig))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 12904-12905: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "handle_unclaim(): UNCLAIM %pM on vid %d (sent by %pM)...\n", claim_addr, (int)vid, (uint8_t *)(&(backbone_gw->orig))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12719: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "bla_del_claim(): %pM, vid %d\n", mac, (int)vid) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 12652-12653: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "bla_add_claim(): changing ownership for %pM, vid %d\n", mac, (int)vid) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 12618-12619: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "bla_add_claim(): adding new entry %pM, vid %d to hash ...\n", mac, (int)vid) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 13264-13265: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "bla_process_claim(): ERROR - this looks like a claim frame, but is useless. eth src %pM on vid %d ...(hw_src %pM, hw_dst %pM)\n", (unsigned char *)(&(ethhdr->h_source)), (int)vid, hw_src, hw_dst) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 37793-37794: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Creating new local tt entry: %pM (ttvn: %d)\n", addr, (int)((unsigned char)tmp___3)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 37758-37759: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Roaming client %pM came back to its original location\n", addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 37740: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Re-adding pending client %pM\n", addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 37674-37675: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Deleting global tt entry %pM: %s\n", (uint8_t *)(&(tt_global->common.addr)), message) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 42181-42182: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Sending ROAMING_ADV to %pM (client %pM)\n", (uint8_t *)(&(orig_node->orig)), client) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17493: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "%s\n", msg) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 17513-17514: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "ARP MSG = [src: %pM-%pI4 dst: %pM-%pI4]\n", tmp___1, &ip_src, tmp___0, &ip_dst) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 17639-17640: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "* encapsulated within an unknown packet type (0x%x)\n", (int)(unicast_4addr_packet->u.header.packet_type)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 17626-17627: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "* encapsulated within a BCAST packet (src: %pM)\n", orig_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 17547-17548: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "* encapsulated within a UNICAST_4ADDR packet (src: %pM)\n", (uint8_t *)(&(unicast_4addr_packet->src))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17608: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "* type: Unknown (%u)!\n", (int)(unicast_4addr_packet->u.header.packet_type)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17596: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "* type: DATA\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17584: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "* type: DAT_CACHE_REPLY\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17572: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "* type: DAT_DHT_GET\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17560: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "* type: DAT_DHT_PUT\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17535: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "* encapsulated within a UNICAST packet\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17446: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "New entry added: %pI4 %pM\n", &(dat_entry->ip), (uint8_t *)(&(dat_entry->mac_addr))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17389: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Entry updated: %pI4 %pM\n", &(dat_entry->ip), (uint8_t *)(&(dat_entry->mac_addr))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 17934-17935: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "dat_select_candidates(): IP=%pI4 hash(IP)=%u\n", &ip_dst, (int)ip_key) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 17877-17879: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "dat_select_candidates() %d: selected %pM addr=%u dist=%u\n", select, (uint8_t *)(&(max_orig_node->orig)), __CPAchecker_TMP_1, (int)max) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17994: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "DHT_SEND for %pI4\n", &ip) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 18515: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "ARP request replied locally\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 32155: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "bcast packet queue full\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 38288-38289: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Local tt entry (%pM) pending to be removed: %s\n", (uint8_t *)(&(tt_local_entry->common.addr)), message) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 115101 (count: 38369, min: 0, max: 3, avg: 3.00)
Number of global variables:                          115101 (count: 38369, min: 0, max: 3, avg: 3.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  170232
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.687s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.431s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 258ms

PredicateCPA statistics
-----------------------
Number of abstractions:            170229 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  34922 (21%)
  Because of loop head:            3585 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       170229 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   3
  Times result was 'false':        0 (0%)
Number of coverage checks:         17126
  BDD entailment checks:           17126
Number of SMT sat checks:          3
  trivial:                         3
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          4
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   265876 (86%)

Time for post operator:                 14.326s
  Time for path formula creation:       13.974s
    Actual computation:                 10.653s
Time for strengthen operator:            0.221s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  7.831s
  Time for abstraction:                  2.239s (Max:     0.035s, Count: 170229)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.137s
  Time for BDD entailment checks:        0.111s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 187363, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.108s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.999s
  Time for transition matches:                         0.449s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       260735 (count: 260735, min: 1, max: 1, avg: 1.00) [1 x 260735]

CPA algorithm statistics
------------------------
Number of iterations:            153077
Max size of waitlist:            47
Average size of waitlist:        30
Number of computed successors:   170232
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         17126
Number of times breaked:         3

Total time for CPA algorithm:        36.677s (Max:    20.194s)
  Time for choose from waitlist:      0.248s
  Time for precision adjustment:      9.978s
  Time for transfer relation:        23.835s
  Time for merge operator:            0.084s
  Time for stop operator:             0.658s
  Time for adding to reached set:     0.558s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  60 (count: 3, min: 18, max: 22, avg: 20.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.580s
  Counterexample analysis:                0.661s (Max:     0.244s, Calls: 3)
    Refinement sat check:                 0.578s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.661s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.001s
  Precision update:                                    0.004s
  ARG update:                                          0.000s

Length of refined path (in blocks):                      48 (count: 3, min: 14, max: 18, avg: 16.00)
Number of affected states:                               33 (count: 3, min: 9, max: 13, avg: 11.00)
Length (states) of path with itp 'true':                 12 (count: 3, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:        33 (count: 3, min: 9, max: 13, avg: 11.00)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              30 (count: 3, min: 8, max: 12, avg: 10.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 38249
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 38247.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      38.349s
Time for refinements:                 1.671s
Average time for refinement:          0.557s
Max time for refinement:              0.883s

Code Coverage
-----------------------------
  Function coverage:      0.276
  Visited lines:          11340
  Total lines:            25054
  Line coverage:          0.453
  Visited conditions:     1384
  Total conditions:       6050
  Condition coverage:     0.229

CPAchecker general statistics
-----------------------------
Number of program locations:     16698
Number of CFA edges:             25872
Number of relevant variables:    5679
Number of functions:             753
Number of loops:                 198
Size of reached set:             38369
  Number of reached locations:   3920 (23%)
    Avg states per location:     9
    Max states per location:     320 (at node N23920)
  Number of reached functions:   208 (28%)
  Number of partitions:          38369
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:         13.708s
  Time for loading CPAs:          0.789s
  Time for loading parser:        0.540s
  Time for CFA construction:     12.306s
    Time for parsing file(s):     2.432s
    Time for AST to CFA:          4.396s
    Time for CFA sanity check:    2.168s
    Time for post-processing:     2.947s
      Time for var class.:        0.000s
Time for Analysis:               38.349s
CPU time for analysis:           52.810s
Total time for CPAchecker:       52.063s
Total CPU time for CPAchecker:   79.120s

Time for Garbage Collector:       0.976s (in 4 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               1863MB (  1777 MiB) max;    593MB (   565 MiB) avg;   1933MB (  1843 MiB) peak
Used non-heap memory:             28MB (    27 MiB) max;     24MB (    23 MiB) avg;     29MB (    27 MiB) peak
Used in PS Old Gen pool:         116MB (   111 MiB) max;     36MB (    35 MiB) avg;    116MB (   111 MiB) peak
Allocated heap memory:          3611MB (  3444 MiB) max;   2573MB (  2453 MiB) avg
Allocated non-heap memory:        29MB (    28 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:  13664MB ( 13031 MiB) max;  13616MB ( 12985 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
