scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--infiniband--hw--nes--iw_nes.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1479292579_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 15697: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10298: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15592: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15547: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 50605: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 48874-48875: Function pointer *(g_cm_core->api->connect) with type struct nes_cm_node * (*)(struct nes_cm_core *, struct nes_vnic *, u16 , void *, struct nes_cm_info *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

lines 24752-24753: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)-24189255811072L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 32463: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 49140: Ignoring function call through function pointer *(g_cm_core->api->destroy_cm_core): (*(g_cm_core->api->destroy_cm_core))(g_cm_core); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15697: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 50558-50559: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)-24189255811072L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10298: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 50605: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15547: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15592: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 15500-15501: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)-24189255811072L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 49062: Ignoring function call through function pointer *(g_cm_core->api->stop_listener): (*(g_cm_core->api->stop_listener))(g_cm_core, __CPAchecker_TMP_1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from handle_recv_entry to rem_ref_cm_node (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 43977: Ignoring function call through function pointer *(cm_id->rem_ref): (*(cm_id->rem_ref))(cm_id); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 49425: Ignoring function call through function pointer *(cm_id->event_handler): ret = (*(cm_id->event_handler))(cm_id, &cm_event); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from cm_event_connect_error to mini_cm_close (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 24799: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, page, offset, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 48872: Ignoring function call through function pointer *(cm_id->add_ref): (*(cm_id->add_ref))(cm_id); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from nes_connect to nes_cm_event_handler (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 48004: Ignoring function call through function pointer *(nesqp->ibqp.event_handler): (*(nesqp->ibqp.event_handler))(&ibevent, nesqp->ibqp.qp_context); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 22439: Ignoring function call through function pointer *(cqp_request->cqp_callback): (*(cqp_request->cqp_callback))(nesdev, cqp_request); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from nes_cqp_ce_handler to nes_cqp_ce_handler (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nes_rem_ref_cm_node to rem_ref_cm_node (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Error: Refinement using predicate refinement failed.Try using cpa.value.symbolic.refiner.SymbolicValueAnalysisRefiner (SymbolicPrecisionRefinementStrategy.performRefinement, SEVERE)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 422397 (count: 84090, min: 0, max: 6, avg: 5.02)
Number of global variables:                          420440 (count: 84090, min: 0, max: 5, avg: 5.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  284510
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                1.475s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.639s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 428ms

PredicateCPA statistics
-----------------------
Number of abstractions:            284502 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  90293 (32%)
  Because of loop head:            4348 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       284502 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   8
  Times result was 'false':        0 (0%)
Number of coverage checks:         17414
  BDD entailment checks:           17414
Number of SMT sat checks:          8
  trivial:                         8
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          8
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   439069 (85%)

Time for post operator:                 20.982s
  Time for path formula creation:       20.296s
    Actual computation:                 14.276s
Time for strengthen operator:            0.373s
  Time for satisfiability checks:        0.000s
Time for prec operator:                 12.801s
  Time for abstraction:                  2.890s (Max:     0.018s, Count: 284502)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.130s
  Time for BDD entailment checks:        0.103s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 301933, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.313s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.034s
  Time for transition matches:                         0.904s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       420272 (count: 420272, min: 1, max: 1, avg: 1.00) [1 x 420272]

CPA algorithm statistics
------------------------
Number of iterations:            266511
Max size of waitlist:            155
Average size of waitlist:        93
Number of computed successors:   284510
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         17414
Number of times breaked:         8

Total time for CPA algorithm:        54.014s (Max:    25.530s)
  Time for choose from waitlist:      0.369s
  Time for precision adjustment:     16.631s
  Time for transfer relation:        33.324s
  Time for merge operator:            0.071s
  Time for stop operator:             0.743s
  Time for adding to reached set:     0.954s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                5034 (count: 8, min: 341, max: 930, avg: 629.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.463s
  Counterexample analysis:                5.891s (Max:     1.190s, Calls: 8)
    Refinement sat check:                 3.529s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.004s
  Building the counterexample trace:                   5.891s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.011s
  ARG update:                                          0.000s

Length of refined path (in blocks):                    3100 (count: 7, min: 320, max: 749, avg: 442.86)
Number of affected states:                              464 (count: 7, min: 7, max: 334, avg: 66.29)
Length (states) of path with itp 'true':               2629 (count: 7, min: 1, max: 741, avg: 375.57)
Length (states) of path with itp non-trivial itp:       464 (count: 7, min: 7, max: 334, avg: 66.29)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             457 (count: 7, min: 6, max: 333, avg: 65.29)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 84090
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 33388.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      61.155s
Time for refinements:                 7.139s
Average time for refinement:          0.892s
Max time for refinement:              1.656s

Code Coverage
-----------------------------
  Function coverage:      0.467
  Visited lines:          19808
  Total lines:            32986
  Line coverage:          0.600
  Visited conditions:     2543
  Total conditions:       7464
  Condition coverage:     0.341

CPAchecker general statistics
-----------------------------
Number of program locations:     19016
Number of CFA edges:             29560
Number of relevant variables:    5251
Number of functions:             640
Number of loops:                 164
Size of reached set:             84090
  Number of reached locations:   7324 (39%)
    Avg states per location:     11
    Max states per location:     2368 (at node N103)
  Number of reached functions:   299 (47%)
  Number of partitions:          84057
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2861 (before line 14814), Function main called from node N2144, stack depth 1 [1544bdb1], stack [main], Init])
  Number of target states:       1
  Size of final wait list        148

Time for analysis setup:         14.738s
  Time for loading CPAs:          0.811s
  Time for loading parser:        0.606s
  Time for CFA construction:     13.248s
    Time for parsing file(s):     3.375s
    Time for AST to CFA:          5.787s
    Time for CFA sanity check:    0.534s
    Time for post-processing:     3.223s
      Time for var class.:        0.000s
Time for Analysis:               61.155s
CPU time for analysis:           73.600s
Total time for CPAchecker:       75.898s
Total CPU time for CPAchecker:  101.980s

Time for Garbage Collector:       1.648s (in 5 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               2342MB (  2233 MiB) max;    815MB (   777 MiB) avg;   2485MB (  2370 MiB) peak
Used non-heap memory:             29MB (    27 MiB) max;     25MB (    24 MiB) avg;     29MB (    28 MiB) peak
Used in PS Old Gen pool:         282MB (   269 MiB) max;     95MB (    91 MiB) avg;    282MB (   269 MiB) peak
Allocated heap memory:          3611MB (  3444 MiB) max;   2843MB (  2711 MiB) avg
Allocated non-heap memory:        29MB (    28 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:  13748MB ( 13111 MiB) max;  13649MB ( 13016 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
