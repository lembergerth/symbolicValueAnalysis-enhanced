scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/linux-3.8-rc1-32_7a-drivers--net--ethernet--intel--e1000e--e1000e.ko-ldv_main1_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_261317108_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 34380: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 34428: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 40183: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 34110-34111: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 40090-40091: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 34202: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 40270: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 34247: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 40315: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 40225: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 34157: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 40137: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 14611-14612: Function pointer *(hw->phy.ops.write_reg_page) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 14614-14615: Function pointer *(hw->phy.ops.write_reg_page) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 14619-14620: Function pointer *(hw->phy.ops.write_reg_page) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 14622-14623: Function pointer *(hw->phy.ops.write_reg_page) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 51893: Function pointer *(hw->phy.ops.write_reg_page) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 51899: Function pointer *(hw->phy.ops.write_reg_page) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 51901: Function pointer *(hw->phy.ops.write_reg_page) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 51827-51828: Function pointer *(hw->phy.ops.write_reg_page) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 51830-51831: Function pointer *(hw->phy.ops.write_reg_page) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7547: Function pointer *(hw->nvm.ops.read) with type s32  (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7560: Function pointer *(hw->nvm.ops.write) with type s32  (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7520: Function pointer *(hw->phy.ops.write_reg) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11455: Function pointer *(hw->phy.ops.write_reg_locked) with type s32  (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 11745: Ignoring function call through function pointer *(hw->phy.ops.acquire): ret_val = (*(hw->phy.ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 20710: Ignoring function call through function pointer *(mac->ops.id_led_init): ret_val = (*(mac->ops.id_led_init))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_init_hw_80003es2lan to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19797: Ignoring function call through function pointer *(hw->mac.ops.set_lan_id): (*(hw->mac.ops.set_lan_id))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7508: Ignoring function call through function pointer *(hw->phy.ops.read_reg): tmp = (*(hw->phy.ops.read_reg))(hw, offset, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 28034: Ignoring function call through function pointer *(hw->phy.ops.acquire): ret_val = (*(hw->phy.ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from __e1000e_read_phy_reg_igp to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000e_read_phy_reg_igp to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 48254: Ignoring function call through function pointer *(mac->ops.reset_hw): (*(mac->ops.reset_hw))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000e_reset to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_reset to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 48254: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000e_reset to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_phy_has_link_generic to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_check_polarity_82577 to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info_82577 to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 32878: Ignoring function call through function pointer *(hw->phy.ops.get_cable_length): ret_val = (*(hw->phy.ops.get_cable_length))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_get_phy_info_82577 to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info_82577 to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 32878: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : ret_val = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000_get_phy_info_82577 to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info_82577 to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7520: Ignoring function call through function pointer *(hw->phy.ops.write_reg): tmp = (*(hw->phy.ops.write_reg))(hw, offset, (int)data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 49238: Ignoring function call through function pointer *(hw->phy.ops.acquire): ret_val = (*(hw->phy.ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000e_update_phy_stats to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_phy_stats to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 49238: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : ret_val = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000e_update_phy_stats to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_phy_stats to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_phy_stats to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_phy_info_m88 to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_check_polarity_m88 to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 30893: Ignoring function call through function pointer *(hw->phy.ops.get_cable_length): ret_val = (*(hw->phy.ops.get_cable_length))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000e_get_phy_info_m88 to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_phy_info_m88 to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 30893: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : ret_val = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000e_get_phy_info_m88 to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_phy_info_m88 to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_phy_info_m88 to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_phy_info_m88 to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 28269: Ignoring function call through function pointer *(hw->phy.ops.acquire): ret_val = (*(hw->phy.ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from __e1000_write_kmrn_reg to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_write_kmrn_reg to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 28269: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : ret_val = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from __e1000_write_kmrn_reg to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_write_kmrn_reg to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_write_kmrn_reg to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_write_kmrn_reg to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_write_kmrn_reg to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_cable_length_m88 to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17542: Ignoring function call through function pointer *(mac->ops.id_led_init): ret_val = (*(mac->ops.id_led_init))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_init_hw_ich8lan to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_init_hw_ich8lan to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17542: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : ret_val = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000_init_hw_ich8lan to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_init_hw_ich8lan to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_init_hw_ich8lan to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_init_hw_ich8lan to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_init_hw_ich8lan to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_init_hw_ich8lan to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_shutdown to e1000e_down (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_lv_jumbo_workaround_ich8lan to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14586: Ignoring function call through function pointer *(hw->phy.ops.acquire): ret_val = (*(hw->phy.ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_copy_rx_addrs_to_phy_ich8lan to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_copy_rx_addrs_to_phy_ich8lan to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14586: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : ret_val = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000_copy_rx_addrs_to_phy_ich8lan to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_copy_rx_addrs_to_phy_ich8lan to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_copy_rx_addrs_to_phy_ich8lan to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_copy_rx_addrs_to_phy_ich8lan to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_copy_rx_addrs_to_phy_ich8lan to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_copy_rx_addrs_to_phy_ich8lan to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_copy_rx_addrs_to_phy_ich8lan to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_cfg_kmrn_10_100_80003es2lan to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_cfg_kmrn_1000_80003es2lan to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17183: Ignoring function call through function pointer *(hw->nvm.ops.valid_led_default): ret_val = (*(hw->nvm.ops.valid_led_default))(hw, &data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 53260: Ignoring function call through function pointer *(ei->get_variants): err = (*(ei->get_variants))(adapter); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_probe to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_probe to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 53260: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : err = e1000_io_slot_reset(adapter); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000_probe to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_probe to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_probe to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_probe to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_probe to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_probe to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_probe to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_probe to e1000_id_led_init_pchlan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7560: Ignoring function call through function pointer *(hw->nvm.ops.write): tmp = (*(hw->nvm.ops.write))(hw, (int)offset, (int)words, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7547: Ignoring function call through function pointer *(hw->nvm.ops.read): tmp = (*(hw->nvm.ops.read))(hw, (int)offset, (int)words, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 22020: Ignoring function call through function pointer *(mac->ops.set_lan_id): (*(mac->ops.set_lan_id))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000e_get_bus_info_pcie to e1000_power_up_phy_copper (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19040: Ignoring function call through function pointer *(hw->phy.ops.acquire): ret_val = (*(hw->phy.ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19040: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : ret_val = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000_id_led_init_pchlan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_clear_hw_cntrs_ich8lan to e1000e_get_bus_info_pcie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_cable_length_82577 to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7534: Ignoring function call through function pointer *(hw->nvm.ops.update): tmp = (*(hw->nvm.ops.update))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7534: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : tmp = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000_id_led_init_pchlan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000e_get_bus_info_pcie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_update_nvm_checksum to e1000_validate_nvm_checksum_82571 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 22361: Ignoring function call through function pointer *(hw->mac.ops.rar_set): (*(hw->mac.ops.rar_set))(hw, (u8 *)(&alt_mac_addr), 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 43334: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch(__CPAchecker_TMP_2); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 43347: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)next_rxd); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 40137: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 43477: Ignoring function call through function pointer *(adapter->alloc_rx_buf): (*(adapter->alloc_rx_buf))(rx_ring, cleaned_count, 32U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 40183: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, page, offset, size, dir, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 34275: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from dma_mapping_error to e1000_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_ringparam to e1000e_down (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 34380: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 40225: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 34428: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 47364: Ignoring function call through function pointer *(hw->mac.ops.update_mc_addr_list): (*(hw->mac.ops.update_mc_addr_list))(hw, mta_list, (u32 )i); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 47364: Return type of function e1000_clean_rx_irq is bool , but result is used as type void: e1000_clean_rx_irq(hw, mta_list, (u32 )i); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000e_write_mc_addr_list to e1000_clean_rx_irq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 44380: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)next_rxd); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 44542: Ignoring function call through function pointer *(adapter->alloc_rx_buf): (*(adapter->alloc_rx_buf))(rx_ring, cleaned_count, 32U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_clean_jumbo_rx_irq to e1000_alloc_jumbo_rx_buffers (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 40090-40091: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544UL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_alloc_rx_buffers to dma_mapping_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_alloc_rx_buffers_ps to dma_mapping_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 44570: Ignoring function call through function pointer *(adapter->alloc_rx_buf): (*(adapter->alloc_rx_buf))(rx_ring, cleaned_count, 32U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 43991: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch(__CPAchecker_TMP_2); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 44004: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)next_rxd); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 40270: Ignoring function call through function pointer *(ops->sync_single_for_cpu): (*(ops->sync_single_for_cpu))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 40315: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 44234: Ignoring function call through function pointer *(adapter->alloc_rx_buf): (*(adapter->alloc_rx_buf))(rx_ring, cleaned_count, 32U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_clean_rx_irq_ps to e1000_alloc_jumbo_rx_buffers (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 44262: Ignoring function call through function pointer *(adapter->alloc_rx_buf): (*(adapter->alloc_rx_buf))(rx_ring, cleaned_count, 32U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 47305: Ignoring function call through function pointer *(hw->mac.ops.update_mc_addr_list): (*(hw->mac.ops.update_mc_addr_list))(hw, 0, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000e_write_mc_addr_list to e1000_alloc_jumbo_rx_buffers (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 47432: Ignoring function call through function pointer *(hw->mac.ops.rar_set): (*(hw->mac.ops.rar_set))(hw, (u8 *)(&(ha->addr)), tmp___0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 47432: Return type of function e1000_clean_rx_irq is bool , but result is used as type void: e1000_clean_rx_irq(hw, (u8 *)(&(ha->addr)), tmp___0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000e_write_uc_addr_list to e1000_clean_rx_irq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 46505: Ignoring function call through function pointer *(hw->mac.ops.write_vfta): (*(hw->mac.ops.write_vfta))(hw, index, vfta); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_vlan_rx_kill_vid to e1000_alloc_jumbo_rx_buffers (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 46461: Ignoring function call through function pointer *(hw->mac.ops.write_vfta): (*(hw->mac.ops.write_vfta))(hw, index, vfta); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_vlan_rx_add_vid to e1000_alloc_jumbo_rx_buffers (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 46916: Ignoring function call through function pointer *(hw->mac.ops.config_collision_dist): (*(hw->mac.ops.config_collision_dist))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_configure_tx to e1000_power_up_phy_copper (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_configure_tx to e1000_clear_hw_cntrs_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 54638: Ignoring function call through function pointer *(adapter->ptp_clock_info.gettime): (*(adapter->ptp_clock_info.gettime))(&(adapter->ptp_clock_info), &ts); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000e_systim_overflow_work to e1000_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_systim_overflow_work to e1000_set_ringparam (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 38888: Ignoring function call through function pointer *(hw->phy.ops.acquire): tmp___0 = (*(hw->phy.ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000e_get_eee to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_eee to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 38888: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : tmp___0 = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000e_get_eee to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_eee to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_eee to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_eee to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_eee to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_eee to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_eee to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_eee to e1000_id_led_init_pchlan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_eee to e1000e_get_bus_info_pcie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_eee to e1000_validate_nvm_checksum_82571 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_eee to e1000_read_mac_addr_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16401: Ignoring function call through function pointer *(nvm->ops.acquire): (*(nvm->ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16401: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_id_led_init_pchlan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000e_get_bus_info_pcie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_validate_nvm_checksum_82571 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_read_mac_addr_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_update_nvm_checksum_ich8lan to e1000_update_nvm_checksum_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_check_downshift to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 22643: Ignoring function call through function pointer *(mac->ops.config_collision_dist): (*(mac->ops.config_collision_dist))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000e_check_for_copper_link to e1000_power_up_phy_copper (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_check_for_copper_link to e1000_clear_hw_cntrs_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_check_for_copper_link to e1000e_systim_overflow_work (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 48045: Ignoring function call through function pointer *(adapter->hw.phy.ops.power_down): (*(adapter->hw.phy.ops.power_down))(&(adapter->hw)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_power_down_phy to e1000_power_up_phy_copper (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy to e1000_clear_hw_cntrs_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy to e1000e_systim_overflow_work (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy to e1000_remove (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_shutdown to __e1000_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_id_led_init_pchlan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000e_get_bus_info_pcie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_validate_nvm_checksum_82571 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_read_mac_addr_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000_update_nvm_checksum_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_get_phy_info to e1000e_check_for_copper_link (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_get_cable_length_igp_2 to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14139: Ignoring function call through function pointer *(hw->phy.ops.acquire): ret_val = (*(hw->phy.ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14139: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : ret_val = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_id_led_init_pchlan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000e_get_bus_info_pcie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_validate_nvm_checksum_82571 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_read_mac_addr_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_update_nvm_checksum_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000e_check_for_copper_link (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_k1_gig_workaround_hv to e1000_check_for_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 24712: Ignoring function call through function pointer *(hw->nvm.ops.valid_led_default): ret_val = (*(hw->nvm.ops.valid_led_default))(hw, &data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000e_id_led_init_generic to e1000_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_id_led_init_generic to e1000_set_ringparam (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_id_led_init_generic to e1000e_get_eee (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_features to e1000e_reinit_locked (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_features to e1000e_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000e_down (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000e_up (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000e_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 35402: Ignoring function call through function pointer *(hw->mac.ops.setup_link): retval = (*(hw->mac.ops.setup_link))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 35402: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : retval = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_id_led_init_pchlan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000e_get_bus_info_pcie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_validate_nvm_checksum_82571 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_read_mac_addr_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_update_nvm_checksum_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000e_check_for_copper_link (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000_check_for_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_set_pauseparam to e1000e_id_led_init_generic (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_phy_force_speed_duplex_m88 to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 30223: Ignoring function call through function pointer *(hw->mac.ops.config_collision_dist): (*(hw->mac.ops.config_collision_dist))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000e_phy_force_speed_duplex_setup to e1000_power_up_phy_copper (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_phy_force_speed_duplex_setup to e1000_clear_hw_cntrs_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_phy_force_speed_duplex_setup to e1000e_systim_overflow_work (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_phy_force_speed_duplex_setup to e1000_remove (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_phy_force_speed_duplex_setup to e1000e_update_phy_task (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_print_hw_hang to e1e_rphy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10640: Ignoring function call through function pointer *(mac->ops.check_mng_mode): tmp = (*(mac->ops.check_mng_mode))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10652: Ignoring function call through function pointer *(phy->ops.check_reset_block): tmp___1 = (*(phy->ops.check_reset_block))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10652: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : tmp___1 = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_id_led_init_pchlan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000e_get_bus_info_pcie (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_validate_nvm_checksum_82571 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_read_mac_addr_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_update_nvm_checksum_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000e_check_for_copper_link (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000_check_for_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000e_id_led_init_generic (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000_power_down_phy_copper_82571 to e1000e_phy_force_speed_duplex_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23531: Ignoring function call through function pointer *(hw->mac.ops.config_collision_dist): (*(hw->mac.ops.config_collision_dist))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from e1000e_setup_fiber_serdes_link to e1000_power_up_phy_copper (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_setup_fiber_serdes_link to e1000_clear_hw_cntrs_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_setup_fiber_serdes_link to e1000e_systim_overflow_work (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_setup_fiber_serdes_link to e1000_remove (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_setup_fiber_serdes_link to e1000e_update_phy_task (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from e1000e_setup_fiber_serdes_link to e1000_power_down_phy_copper_82571 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 28192: Ignoring function call through function pointer *(hw->phy.ops.acquire): ret_val = (*(hw->phy.ops.acquire))(hw); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from __e1000_read_kmrn_reg to e1000_init_hw_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_read_kmrn_reg to e1000_get_variants_80003es2lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 28192: Return type of function e1000_io_slot_reset is pci_ers_result_t , but result is used as type s32 : ret_val = e1000_io_slot_reset(hw); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from __e1000_read_kmrn_reg to e1000_io_slot_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_read_kmrn_reg to e1000_get_phy_info_82577 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_read_kmrn_reg to e1000_nway_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_read_kmrn_reg to e1000e_get_phy_info_m88 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_read_kmrn_reg to e1000_setup_copper_link_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_read_kmrn_reg to e1000_init_hw_ich8lan (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __e1000_read_kmrn_reg to e1000_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Error: Refinement using predicate refinement failed.Try using cpa.value.symbolic.refiner.SymbolicValueAnalysisRefiner (SymbolicPrecisionRefinementStrategy.performRefinement, SEVERE)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 491463 (count: 83298, min: 0, max: 6, avg: 5.90)
Number of global variables:                          333184 (count: 83298, min: 0, max: 4, avg: 4.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  363564
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                1.662s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.852s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 543ms

PredicateCPA statistics
-----------------------
Number of abstractions:            363556 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  89786 (25%)
  Because of loop head:            9738 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       363556 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   8
  Times result was 'false':        0 (0%)
Number of coverage checks:         30465
  BDD entailment checks:           30465
Number of SMT sat checks:          8
  trivial:                         8
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          8
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   413092 (70%)

Time for post operator:                 57.689s
  Time for path formula creation:       56.758s
    Actual computation:                 35.867s
Time for strengthen operator:            0.512s
  Time for satisfiability checks:        0.000s
Time for prec operator:                 29.290s
  Time for abstraction:                  5.189s (Max:     0.662s, Count: 363556)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.229s
  Time for BDD entailment checks:        0.155s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 394038, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.437s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.177s
  Time for transition matches:                         1.098s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       518390 (count: 518390, min: 1, max: 1, avg: 1.00) [1 x 518390]

CPA algorithm statistics
------------------------
Number of iterations:            325367
Max size of waitlist:            1961
Average size of waitlist:        1580
Number of computed successors:   363564
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         30465
Number of times breaked:         8

Total time for CPA algorithm:       137.190s (Max:    51.643s)
  Time for choose from waitlist:      0.479s
  Time for precision adjustment:     34.036s
  Time for transfer relation:        97.176s
  Time for merge operator:            0.124s
  Time for stop operator:             1.217s
  Time for adding to reached set:     1.294s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):               18380 (count: 8, min: 19, max: 4595, avg: 2297.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  57.242s
  Counterexample analysis:               55.016s (Max:    14.079s, Calls: 8)
    Refinement sat check:                15.252s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.014s
  Building the counterexample trace:                  55.016s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.005s
  ARG update:                                          0.000s

Length of refined path (in blocks):                    7959 (count: 7, min: 15, max: 4314, avg: 1137.00)
Number of affected states:                               83 (count: 7, min: 2, max: 16, avg: 11.86)
Length (states) of path with itp 'true':               7869 (count: 7, min: 4, max: 4311, avg: 1124.14)
Length (states) of path with itp non-trivial itp:        83 (count: 7, min: 2, max: 16, avg: 11.86)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              76 (count: 7, min: 1, max: 15, avg: 10.86)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 83298
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 41638.38
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     194.055s
Time for refinements:                56.865s
Average time for refinement:          7.108s
Max time for refinement:             14.422s

Code Coverage
-----------------------------
  Function coverage:      0.411
  Visited lines:          13829
  Total lines:            31102
  Line coverage:          0.445
  Visited conditions:     6080
  Total conditions:       30886
  Condition coverage:     0.197

CPAchecker general statistics
-----------------------------
Number of program locations:     54626
Number of CFA edges:             99928
Number of relevant variables:    5527
Number of functions:             778
Number of loops:                 174
Size of reached set:             83298
  Number of reached locations:   10083 (18%)
    Avg states per location:     8
    Max states per location:     2046 (at node N0)
  Number of reached functions:   320 (41%)
  Number of partitions:          83282
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N24053 (before lines 48256-48261), Function e1000e_reset called from node N26932, stack depth 13 [5b63ff35], stack [main, e1000_get_variants_ich8lan, e1000_init_phy_params_pchlan, e1000_init_phy_workarounds_pchlan, e1000_init_hw_80003es2lan, e1000_get_variants_80003es2lan, e1000_init_mac_params_80003es2lan, e1000_power_up_phy_copper, e1e_rphy, e1000e_read_phy_reg_igp, __e1000e_read_phy_reg_igp, e1000_io_slot_reset, e1000e_reset], Init])
  Number of target states:       1
  Size of final wait list        1932

Time for analysis setup:         14.538s
  Time for loading CPAs:          0.910s
  Time for loading parser:        0.573s
  Time for CFA construction:     12.977s
    Time for parsing file(s):     2.731s
    Time for AST to CFA:          3.657s
    Time for CFA sanity check:    0.507s
    Time for post-processing:     5.906s
      Time for var class.:        0.000s
Time for Analysis:              194.055s
CPU time for analysis:          212.140s
Total time for CPAchecker:      208.598s
Total CPU time for CPAchecker:  238.890s

Time for Garbage Collector:       3.669s (in 8 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3549MB (  3385 MiB) max;   1330MB (  1268 MiB) avg;   3601MB (  3434 MiB) peak
Used non-heap memory:             29MB (    28 MiB) max;     27MB (    26 MiB) avg;     30MB (    28 MiB) peak
Used in PS Old Gen pool:         375MB (   358 MiB) max;    215MB (   205 MiB) avg;    375MB (   358 MiB) peak
Allocated heap memory:          4633MB (  4418 MiB) max;   3864MB (  3685 MiB) avg
Allocated non-heap memory:        30MB (    28 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:  14585MB ( 13910 MiB) max;  13791MB ( 13152 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
