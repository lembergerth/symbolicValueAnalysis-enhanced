scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-kernel--rcu--rcutorture.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1748142619_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5553: Function pointer *(cur_ops->get_state) with type unsigned long int (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 8996: Ignoring function call through function pointer *(cur_ops->init): (*(cur_ops->init))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8670: Ignoring function call through function pointer *(cur_ops->cb_barrier): (*(cur_ops->cb_barrier))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rcu_torture_cleanup to rcu_torture_cleanup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8771: Ignoring function call through function pointer *(cur_ops->cb_barrier): (*(cur_ops->cb_barrier))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7780: Ignoring function call through function pointer *(cur_ops->stats): (*(cur_ops->stats))(page); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5846: Ignoring function call through function pointer *(cur_ops->readlock): idx = (*(cur_ops->readlock))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5848: Ignoring function call through function pointer *(cur_ops->completed): completed = (*(cur_ops->completed))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5914: Ignoring function call through function pointer *(cur_ops->read_delay): (*(cur_ops->read_delay))(&rand); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rcu_torture_timer to rcu_torture_timer (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4466: Ignoring function call through function pointer *(cur_ops->deferred_free): (*(cur_ops->deferred_free))(rp); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rcu_torture_cb to rcu_torture_timer (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rcu_torture_cb to rcu_torture_cb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rcu_busted_torture_deferred_free to rcu_torture_cb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rcu_torture_cb to rcu_busted_torture_deferred_free (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5933: Ignoring function call through function pointer *(cur_ops->completed): completed_end = (*(cur_ops->completed))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6592: Ignoring function call through function pointer *(cur_ops->readunlock): (*(cur_ops->readunlock))(idx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5898: Ignoring function call through function pointer *(cur_ops->readunlock): (*(cur_ops->readunlock))(idx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rcu_torture_timer to rcu_torture_cb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rcu_torture_timer to rcu_busted_torture_deferred_free (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

The void * pointer rcutorture_cpu_notify::hcpu to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 8626:	N3582 -{cpu = (long)hcpu;}-> N3583) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

Ignoring cast from signed char to void. (PredicateCPA:CtoFormulaConverter.makeCast, WARNING)

line 4597: Ignoring call via function pointer call_rcu_busted::func for which no suitable target was found in line: (*func)(head); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4597: Ignoring function call through function pointer *func: (*func)(head); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                  80076 (count: 40040, min: 0, max: 2, avg: 2.00)
Number of global variables:                           80076 (count: 40040, min: 0, max: 2, avg: 2.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                   46441
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.281s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.164s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 100ms

PredicateCPA statistics
-----------------------
Number of abstractions:            46439 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10023 (22%)
  Because of loop head:            543 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       46439 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   2
  Times result was 'false':        0 (0%)
Number of coverage checks:         5144
  BDD entailment checks:           5144
Number of SMT sat checks:          2
  trivial:                         2
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          3
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   42824 (58%)

Time for post operator:                  8.534s
  Time for path formula creation:        8.389s
    Actual computation:                  7.213s
Time for strengthen operator:            0.093s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  2.697s
  Time for abstraction:                  1.092s (Max:     0.158s, Count: 46439)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.094s
  Time for BDD entailment checks:        0.084s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 51589, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.056s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.416s
Automaton transfers with branching:                0
Automaton transfer successors:                        64640 (count: 64640, min: 1, max: 1, avg: 1.00) [1 x 64640]

CPA algorithm statistics
------------------------
Number of iterations:            41248
Max size of waitlist:            68
Average size of waitlist:        29
Number of computed successors:   46441
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         5144
Number of times breaked:         2

Total time for CPA algorithm:        16.739s (Max:    12.735s)
  Time for choose from waitlist:      0.094s
  Time for precision adjustment:      3.790s
  Time for transfer relation:        11.604s
  Time for merge operator:            0.049s
  Time for stop operator:             0.310s
  Time for adding to reached set:     0.314s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                 635 (count: 2, min: 317, max: 318, avg: 317.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.381s
  Counterexample analysis:                6.251s (Max:     3.182s, Calls: 2)
    Refinement sat check:                 5.463s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.002s
  Building the counterexample trace:                   6.251s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.017s
  ARG update:                                          0.000s

Length of refined path (in blocks):                     612 (count: 2, min: 299, max: 313, avg: 306.00)
Number of affected states:                              608 (count: 2, min: 297, max: 311, avg: 304.00)
Length (states) of path with itp 'true':                  2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:       608 (count: 2, min: 297, max: 311, avg: 304.00)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             606 (count: 2, min: 296, max: 310, avg: 303.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 630
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 630.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      23.151s
Time for refinements:                 6.412s
Average time for refinement:          3.206s
Max time for refinement:              3.283s

Code Coverage
-----------------------------
  Function coverage:      0.773
  Visited lines:          6334
  Total lines:            8001
  Line coverage:          0.792
  Visited conditions:     1081
  Total conditions:       1754
  Condition coverage:     0.616

CPAchecker general statistics
-----------------------------
Number of program locations:     3922
Number of CFA edges:             5859
Number of relevant variables:    713
Number of functions:             141
Number of loops:                 45
Size of reached set:             40040
  Number of reached locations:   2548 (65%)
    Avg states per location:     15
    Max states per location:     354 (at node N750)
  Number of reached functions:   109 (77%)
  Number of partitions:          39940
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1753 (before line 5916), Function rcu_torture_timer called from node N6046, stack depth 6 [5ecb2af], stack [main, rcu_torture_init, rcu_torture_cleanup, rcu_torture_stats_print, rcu_torture_printk, rcu_torture_timer], Init])
  Number of target states:       0

Time for analysis setup:          4.207s
  Time for loading CPAs:          0.574s
  Time for loading parser:        0.624s
  Time for CFA construction:      2.937s
    Time for parsing file(s):     0.782s
    Time for AST to CFA:          1.022s
    Time for CFA sanity check:    0.125s
    Time for post-processing:     0.836s
      Time for var class.:        0.000s
Time for Analysis:               23.151s
CPU time for analysis:           32.710s
Total time for CPAchecker:       27.363s
Total CPU time for CPAchecker:   40.140s

Time for Garbage Collector:       0.553s (in 3 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                594MB (   567 MiB) max;    332MB (   317 MiB) avg;    640MB (   610 MiB) peak
Used non-heap memory:             25MB (    24 MiB) max;     22MB (    21 MiB) avg;     26MB (    24 MiB) peak
Used in PS Old Gen pool:          24MB (    22 MiB) max;      0MB (     0 MiB) avg;     24MB (    22 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        27MB (    25 MiB) max;     25MB (    24 MiB) avg
Total process virtual memory:  14037MB ( 13387 MiB) max;  13823MB ( 13183 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
