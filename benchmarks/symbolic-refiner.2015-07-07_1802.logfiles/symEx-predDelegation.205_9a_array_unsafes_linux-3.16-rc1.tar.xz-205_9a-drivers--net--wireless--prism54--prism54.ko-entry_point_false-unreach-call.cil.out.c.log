scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/205_9a_array_unsafes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--wireless--prism54--prism54.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1553555262_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 15412: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15459: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6987-6988: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8362: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7034: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

lines 6987-6988: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)-24189255811072L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15459: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7034: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15412: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

The void * pointer kmalloc::__retval__ to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 8512:	N908 -{buf->mem = kmalloc(1500UL, 32U);}-> N911) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

Skipping recursive function call from mgt_cpu_to_le to mgt_cpu_to_le (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

The void * pointer kzalloc::__retval__ to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 lines 18826-18827:	N6654 -{*((priv->mib) + ((unsigned long)i)) = kzalloc((size_t )(((int)((isl_oid[i]).size)) * (((int)((isl_oid[i]).range)) + 1)), 208U);}-> N6656) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

Skipping recursive function call from mgt_le_to_cpu to mgt_le_to_cpu (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Destroying the void * pointer  ldv_main_exported_3::tmp produces garbage! (in the following line(s):
 line 18275:	N6435 -{ldv_main_exported_3();}-> N6437) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                1021553 (count: 1021555, min: 0, max: 1, avg: 1.00)
Number of global variables:                         1021553 (count: 1021555, min: 0, max: 1, avg: 1.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 1165379
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                3.285s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     2.401s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 1514ms

PredicateCPA statistics
-----------------------
Number of abstractions:            1165378 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  200993 (17%)
  Because of loop head:            80969 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1165378 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   1
  Times result was 'false':        0 (0%)
Number of coverage checks:         133315
  BDD entailment checks:           133315
Number of SMT sat checks:          1
  trivial:                         1
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          4
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   276457 (19%)

Time for post operator:                194.629s
  Time for path formula creation:      191.948s
    Actual computation:                180.359s
Time for strengthen operator:            1.595s
  Time for satisfiability checks:        0.000s
Time for prec operator:                 32.432s
  Time for abstraction:                 12.109s (Max:     0.037s, Count: 1165378)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.766s
  Time for BDD entailment checks:        0.509s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 1298699, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             1.287s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.807s
  Time for transition matches:                         3.742s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1717341 (count: 1717341, min: 1, max: 1, avg: 1.00) [1 x 1717341]

CPA algorithm statistics
------------------------
Number of iterations:            1024717
Max size of waitlist:            7346
Average size of waitlist:        3632
Number of computed successors:   1165379
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         133315
Number of times breaked:         1

Total time for CPA algorithm:       813.461s (Max:   805.207s)
  Time for choose from waitlist:      1.439s
  Time for precision adjustment:     44.783s
  Time for transfer relation:       234.506s
  Time for merge operator:          208.300s
  Time for stop operator:           312.045s
  Time for adding to reached set:     4.161s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  62 (count: 1, min: 62, max: 62, avg: 62.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.960s
  Counterexample analysis:                0.481s (Max:     0.481s, Calls: 1)
    Refinement sat check:                 0.401s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.481s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.004s
  ARG update:                                          0.000s

Length of refined path (in blocks):                      58 (count: 1, min: 58, max: 58, avg: 58.00)
Number of affected states:                               40 (count: 1, min: 40, max: 40, avg: 40.00)
Length (states) of path with itp 'true':                 17 (count: 1, min: 17, max: 17, avg: 17.00)
Length (states) of path with itp non-trivial itp:        40 (count: 1, min: 40, max: 40, avg: 40.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 1, min: 2, max: 2, avg: 2.00)
Equal non-trivial interpolants along paths:              37 (count: 1, min: 37, max: 37, avg: 37.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 10511
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 10511.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     814.513s
Time for refinements:                 1.051s
Average time for refinement:          1.051s
Max time for refinement:              1.051s

Code Coverage
-----------------------------
  Function coverage:      0.227
  Visited lines:          7564
  Total lines:            12985
  Line coverage:          0.583
  Visited conditions:     250
  Total conditions:       1478
  Condition coverage:     0.169

CPAchecker general statistics
-----------------------------
Number of program locations:     4768
Number of CFA edges:             6574
Number of relevant variables:    1671
Number of functions:             299
Number of loops:                 55
Size of reached set:             1021555
  Size of final wait list        7344

Time for analysis setup:          6.537s
  Time for loading CPAs:          0.701s
  Time for loading parser:        0.559s
  Time for CFA construction:      5.193s
    Time for parsing file(s):     1.763s
    Time for AST to CFA:          1.684s
    Time for CFA sanity check:    0.205s
    Time for post-processing:     1.307s
      Time for var class.:        0.000s
Time for Analysis:              814.514s
CPU time for analysis:          887.900s
Total time for CPAchecker:      821.056s
Total CPU time for CPAchecker:  900.020s

Time for Garbage Collector:      59.383s (in 66 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5008MB (  4776 MiB) max;   2739MB (  2612 MiB) avg;   5620MB (  5360 MiB) peak
Used non-heap memory:             28MB (    26 MiB) max;     26MB (    24 MiB) avg;     28MB (    26 MiB) peak
Used in PS Old Gen pool:        2048MB (  1953 MiB) max;   1220MB (  1164 MiB) avg;   2048MB (  1953 MiB) peak
Allocated heap memory:          5688MB (  5425 MiB) max;   4923MB (  4694 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  13696MB ( 13062 MiB) max;  13633MB ( 13002 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
