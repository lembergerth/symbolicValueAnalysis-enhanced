scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--isdn--i4l--isdn.ko-ldv_main3_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-2021945818_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 34594: Function pointer *(compressor->compress) with type int (*)(void *, struct sk_buff *, struct sk_buff *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 34514: Function pointer *(ipc->incomp) with type void (*)(void *, struct sk_buff *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 34469: Function pointer *(ipc->decompress) with type int (*)(void *, struct sk_buff *, struct sk_buff *, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 34797-34799: Function pointer *(is->link_compressor->reset) with type void (*)(void *, unsigned char, unsigned char, unsigned char *, unsigned int, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 34790-34792: Function pointer *(mis->compressor->reset) with type void (*)(void *, unsigned char, unsigned char, unsigned char *, unsigned int, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 34761-34763: Function pointer *(is->link_decompressor->reset) with type void (*)(void *, unsigned char, unsigned char, unsigned char *, unsigned int, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 34747-34749: Function pointer *(mis->decompressor->reset) with type void (*)(void *, unsigned char, unsigned char, unsigned char *, unsigned int, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 35016: Function pointer *(is->link_compressor->reset) with type void (*)(void *, unsigned char, unsigned char, unsigned char *, unsigned int, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 35006: Function pointer *(is->compressor->reset) with type void (*)(void *, unsigned char, unsigned char, unsigned char *, unsigned int, struct isdn_ppp_resetparams *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 35130: Function pointer *(ipc->init) with type int (*)(void *, struct isdn_ppp_comp_data *, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 26047-26048: Function pointer *(((dev->drv)[drvidx])->interface->readstat) with type int (*)(u_char *, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 23225-23226: Function pointer *(((dev->drv)[c->driver])->interface->writebuf_skb) with type int (*)(int, int, int, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 23097-23098: Function pointer *(((dev->drv)[c->driver])->interface->writebuf_skb) with type int (*)(int, int, int, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 26196-26198: Function pointer *(((dev->drv)[drvidx])->interface->writecmd) with type int (*)(u_char *, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 28341-28342: Function pointer *(((dev->drv)[drvidx])->interface->writebuf_skb) with type int (*)(int, int, int, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 28329-28330: Function pointer *(((dev->drv)[drvidx])->interface->writebuf_skb) with type int (*)(int, int, int, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28309: Function pointer *(((dev->drv)[drvidx])->interface->writebuf_skb) with type int (*)(int, int, int, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28236: Function pointer *(((dev->drv)[drvidx])->interface->writebuf_skb) with type int (*)(int, int, int, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 7765: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 35126: Ignoring function call through function pointer *(ipc->alloc): stat = (*(ipc->alloc))(data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 35130: Ignoring function call through function pointer *(ipc->init): ret = (*(ipc->init))(stat, data, is->unit, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 35169: Ignoring function call through function pointer *(is->compressor->free): (*(is->compressor->free))(is->comp_stat); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from isdn_tty_cmd_ATA to isdn_tty_modem_result (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 24373: Ignoring function call through function pointer *(((dev->drv)[cmd->driver])->interface->command): tmp___0 = (*(((dev->drv)[cmd->driver])->interface->command))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8786: Ignoring function call through function pointer *(cprot->pops->restart): (*(cprot->pops->restart))(cprot, dev___0, dops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from isdn_net_dial to isdn_command (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_all_eaz to isdn_command (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_net_hangup to isdn_net_hangup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9859: Ignoring function call through function pointer *(pops->disconn_ind): (*(pops->disconn_ind))(cprot); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from isdn_net_hangup to isdn_concap_dl_connect_req (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 25154: Ignoring function call through function pointer *(divert_if->stat_callback): tmp___19 = (*(divert_if->stat_callback))(c); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from isdn_status_callback to isdn_concap_dl_connect_req (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_status_callback to isdn_status_callback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10599: Ignoring function call through function pointer *(cprot->pops->close): (*(cprot->pops->close))(cprot); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from isdn_net_close to isdn_concap_dl_connect_req (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_net_close to isdn_status_callback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_net_close to isdn_net_close (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_concap_dl_disconn_req to isdn_net_hangup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_net_close to isdn_command (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 35936: Ignoring function call through function pointer *(cprot->dops->disconn_req): (*(cprot->dops->disconn_req))(cprot); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from isdn_x25iface_connect_ind to isdn_concap_dl_connect_req (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_x25iface_connect_ind to isdn_status_callback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_x25iface_connect_ind to isdn_net_close (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_x25iface_connect_ind to isdn_command (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_x25iface_connect_ind to isdn_x25iface_connect_ind (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_net_close to isdn_net_hangup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10621: Ignoring function call through function pointer *(cprot->pops->close): (*(cprot->pops->close))(cprot); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from isdn_status_callback to isdn_command (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_net_close to isdn_x25iface_connect_ind (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_tty_stat_callback to isdn_tty_modem_hup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_tty_stat_callback to isdn_tty_modem_result (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 28341-28342: Ignoring function call through function pointer *(((dev->drv)[drvidx])->interface->writebuf_skb): ret = (*(((dev->drv)[drvidx])->interface->writebuf_skb))(drvidx, chan, ack, skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 28329-28330: Ignoring function call through function pointer *(((dev->drv)[drvidx])->interface->writebuf_skb): ret = (*(((dev->drv)[drvidx])->interface->writebuf_skb))(drvidx, chan, ack, skb_tmp); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 28309: Ignoring function call through function pointer *(((dev->drv)[drvidx])->interface->writebuf_skb): ret = (*(((dev->drv)[drvidx])->interface->writebuf_skb))(drvidx, chan, ack, nskb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9283: Ignoring function call through function pointer *(pops->connect_ind): (*(pops->connect_ind))(cprot); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from isdn_net_stat_callback to isdn_concap_dl_connect_req (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_net_stat_callback to isdn_status_callback (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_net_stat_callback to isdn_command (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9206: Ignoring function call through function pointer *(pops->disconn_ind): (*(pops->disconn_ind))(cprot); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9165: Ignoring function call through function pointer *(pops->disconn_ind): (*(pops->disconn_ind))(cprot); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 23225-23226: Ignoring function call through function pointer *(((dev->drv)[c->driver])->interface->writebuf_skb): tmp___3 = (*(((dev->drv)[c->driver])->interface->writebuf_skb))(c->driver, __CPAchecker_TMP_2, 1, skb___0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 23097-23098: Ignoring function call through function pointer *(((dev->drv)[c->driver])->interface->writebuf_skb): tmp = (*(((dev->drv)[c->driver])->interface->writebuf_skb))(c->driver, __CPAchecker_TMP_0, 1, skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 24850: Ignoring function call through function pointer *(divert_if->stat_callback): (*(divert_if->stat_callback))(c); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 24757: Ignoring function call through function pointer *(divert_if->stat_callback): (*(divert_if->stat_callback))(c); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 24745: Ignoring function call through function pointer *(divert_if->stat_callback): (*(divert_if->stat_callback))(c); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from isdn_star to isdn_wildmat (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_status_callback to isdn_net_dial (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_tty_find_icall to isdn_tty_modem_result (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 24605: Ignoring function call through function pointer *(divert_if->stat_callback): retval = (*(divert_if->stat_callback))(c); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from isdn_status_callback to isdn_net_close (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_net_stat_callback to isdn_net_close (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_status_callback to isdn_x25iface_connect_ind (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from isdn_net_stat_callback to isdn_x25iface_connect_ind (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                3856122 (count: 1928063, min: 0, max: 2, avg: 2.00)
Number of global variables:                         3856122 (count: 1928063, min: 0, max: 2, avg: 2.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 2246503
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                6.223s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     4.267s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 3126ms

PredicateCPA statistics
-----------------------
Number of abstractions:            2246501 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  385971 (17%)
  Because of loop head:            32019 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       2246501 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   2
  Times result was 'false':        0 (0%)
Number of coverage checks:         316264
  BDD entailment checks:           316264
Number of SMT sat checks:          2
  trivial:                         2
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          3
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   3312202 (83%)

Time for post operator:                484.263s
  Time for path formula creation:      479.040s
    Actual computation:                433.820s
Time for strengthen operator:            3.032s
  Time for satisfiability checks:        0.000s
Time for prec operator:                133.826s
  Time for abstraction:                 63.337s (Max:     1.306s, Count: 2246501)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 1.705s
  Time for BDD entailment checks:        1.020s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 2562771, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             2.714s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.644s
  Time for transition matches:                         6.915s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      3267262 (count: 3267262, min: 1, max: 1, avg: 1.00) [1 x 3267262]

CPA algorithm statistics
------------------------
Number of iterations:            1929982
Max size of waitlist:            189
Average size of waitlist:        158
Number of computed successors:   2246503
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         316264
Number of times breaked:         2

Total time for CPA algorithm:       753.077s (Max:   748.317s)
  Time for choose from waitlist:      2.628s
  Time for precision adjustment:    156.815s
  Time for transfer relation:       562.908s
  Time for merge operator:            0.776s
  Time for stop operator:             7.085s
  Time for adding to reached set:     7.937s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                 639 (count: 2, min: 190, max: 449, avg: 319.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.272s
  Counterexample analysis:                2.027s (Max:     1.641s, Calls: 2)
    Refinement sat check:                 1.612s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.002s
  Building the counterexample trace:                   2.027s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.045s
  ARG update:                                          0.000s

Length of refined path (in blocks):                     631 (count: 2, min: 186, max: 445, avg: 315.50)
Number of affected states:                              621 (count: 2, min: 181, max: 440, avg: 310.50)
Length (states) of path with itp 'true':                  8 (count: 2, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:       621 (count: 2, min: 181, max: 440, avg: 310.50)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             619 (count: 2, min: 180, max: 439, avg: 309.50)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 1740
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 1089.50
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     755.370s
Time for refinements:                 2.292s
Average time for refinement:          1.146s
Max time for refinement:              1.828s

Code Coverage
-----------------------------
  Function coverage:      0.354
  Visited lines:          13083
  Total lines:            26740
  Line coverage:          0.489
  Visited conditions:     2029
  Total conditions:       6210
  Condition coverage:     0.327

CPAchecker general statistics
-----------------------------
Number of program locations:     14200
Number of CFA edges:             20880
Number of relevant variables:    3261
Number of functions:             509
Number of loops:                 181
Size of reached set:             1928063
  Size of final wait list        169

Time for analysis setup:         10.502s
  Time for loading CPAs:          0.910s
  Time for loading parser:        0.592s
  Time for CFA construction:      8.926s
    Time for parsing file(s):     2.306s
    Time for AST to CFA:          3.470s
    Time for CFA sanity check:    0.247s
    Time for post-processing:     2.523s
      Time for var class.:        0.000s
Time for Analysis:              755.370s
CPU time for analysis:          880.310s
Total time for CPAchecker:      765.877s
Total CPU time for CPAchecker:  900.160s

Time for Garbage Collector:     112.811s (in 57 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5812MB (  5542 MiB) max;   3133MB (  2988 MiB) avg;   7804MB (  7442 MiB) peak
Used non-heap memory:             28MB (    27 MiB) max;     26MB (    25 MiB) avg;     28MB (    27 MiB) peak
Used in PS Old Gen pool:        3975MB (  3790 MiB) max;   1713MB (  1634 MiB) avg;   3975MB (  3790 MiB) peak
Allocated heap memory:          8537MB (  8142 MiB) max;   5425MB (  5173 MiB) avg
Allocated non-heap memory:        52MB (    50 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  13851MB ( 13209 MiB) max;  13597MB ( 12967 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
