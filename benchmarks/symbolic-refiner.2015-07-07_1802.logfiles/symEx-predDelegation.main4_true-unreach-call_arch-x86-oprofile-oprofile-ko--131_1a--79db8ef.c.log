scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-commit-tester/ALL.prp ../svcomp15/ldv-commit-tester/main4_true-unreach-call_arch-x86-oprofile-oprofile-ko--131_1a--79db8ef.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-154778442_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 10278: Function pointer *(apic->read) with type u32  (*)(u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10290: Function pointer *(apic->write) with type void (*)(u32 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9388: Function pointer *(timer___0->base->get_time) with type ktime_t  (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 10394-10396: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 14113-14115: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 8424: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4069: Ignoring function call through function pointer *(oprofile_ops.stop): (*(oprofile_ops.stop))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12408: Ignoring function call through function pointer *(model->shutdown): (*(model->shutdown))((const struct op_msrs *)msrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11921: Ignoring function call through function pointer *(model->setup_ctrs): (*(model->setup_ctrs))((const struct op_x86_model_spec *)model, (const struct op_msrs *)msrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10278: Ignoring function call through function pointer *(apic->read): tmp = (*(apic->read))(reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10290: Ignoring function call through function pointer *(apic->write): (*(apic->write))(reg, val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11035: Ignoring function call through function pointer *(model->start): (*(model->start))(msrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_up (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3940: Ignoring function call through function pointer *(oprofile_ops.switch_events): tmp = (*(oprofile_ops.switch_events))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12253: Ignoring function call through function pointer *(model->fill_in_addresses): err = (*(model->fill_in_addresses))((struct op_msrs *)((__per_cpu_offset[0]) + __ptr)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from nmi_resume to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5202: Ignoring function call through function pointer *(oprofile_ops.backtrace): (*(oprofile_ops.backtrace))(regs, (unsigned int)backtrace); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12070: Ignoring function call through function pointer *(model->cpu_down): (*(model->cpu_down))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from nmi_cpu_shutdown to nmi_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11143: Ignoring function call through function pointer *(model->stop): (*(model->stop))(msrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_up (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_down (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_switch to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11592: Ignoring function call through function pointer *(model->switch_ctrl): (*(model->switch_ctrl))((const struct op_x86_model_spec *)model, (const struct op_msrs *)msrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from nmi_cpu_switch to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_down to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_switch (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_up to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to switch_worker (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to switch_worker (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_down (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_start to nmi_cpu_switch (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4034: Ignoring function call through function pointer *(oprofile_ops.start): err = (*(oprofile_ops.start))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from switch_worker to nmi_setup (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_shutdown to nmi_cpu_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_stop to nmi_cpu_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_cpu_down to nmi_cpu_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_shutdown to nmi_cpu_start (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_shutdown to nmi_cpu_down (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_shutdown to nmi_cpu_stop (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nmi_shutdown to nmi_cpu_switch (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                      0 (count: 250965, min: 0, max: 0, avg: 0.00)
Number of global variables:                               0 (count: 250965, min: 0, max: 0, avg: 0.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  277058
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.758s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.580s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 392ms

PredicateCPA statistics
-----------------------
Number of abstractions:            277058 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  60722 (22%)
  Because of loop head:            5984 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       277058 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         26094
  BDD entailment checks:           26094
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          0

Number of path formula cache hits:   221054 (54%)

Time for post operator:                 59.474s
  Time for path formula creation:       58.848s
    Actual computation:                 53.954s
Time for strengthen operator:            0.418s
Time for prec operator:                 12.542s
  Time for abstraction:                  5.016s (Max:     0.433s, Count: 277058)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.204s
  Time for BDD entailment checks:        0.163s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 303153, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.285s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.125s
  Time for transition matches:                         0.894s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       458816 (count: 458816, min: 1, max: 1, avg: 1.00) [1 x 458816]

CPA algorithm statistics
------------------------
Number of iterations:            250965
Max size of waitlist:            84
Average size of waitlist:        53
Number of computed successors:   277058
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         26094
Number of times breaked:         0

Total time for CPA algorithm:        90.398s (Max:    90.398s)
  Time for choose from waitlist:      0.364s
  Time for precision adjustment:     15.437s
  Time for transfer relation:        70.678s
  Time for merge operator:            0.085s
  Time for stop operator:             0.872s
  Time for adding to reached set:     1.004s

Predicate-Abstraction Refiner statistics
----------------------------------------
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.622
  Visited lines:          6961
  Total lines:            9258
  Line coverage:          0.752
  Visited conditions:     850
  Total conditions:       1508
  Condition coverage:     0.564

CPAchecker general statistics
-----------------------------
Number of program locations:     4496
Number of CFA edges:             6409
Number of relevant variables:    1453
Number of functions:             288
Number of loops:                 76
Size of reached set:             250965
  Number of reached locations:   2628 (58%)
    Avg states per location:     95
    Max states per location:     11376 (at node N7068)
  Number of reached functions:   179 (62%)
  Number of partitions:          250965
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.839s
  Time for loading CPAs:          0.716s
  Time for loading parser:        0.495s
  Time for CFA construction:      4.556s
    Time for parsing file(s):     1.108s
    Time for AST to CFA:          1.920s
    Time for CFA sanity check:    0.193s
    Time for post-processing:     1.058s
      Time for var class.:        0.000s
Time for Analysis:               90.398s
CPU time for analysis:          104.510s
Total time for CPAchecker:       96.242s
Total CPU time for CPAchecker:  115.430s

Time for Garbage Collector:       2.918s (in 8 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3484MB (  3322 MiB) max;   1225MB (  1168 MiB) avg;   3615MB (  3447 MiB) peak
Used non-heap memory:             27MB (    25 MiB) max;     25MB (    24 MiB) avg;     27MB (    26 MiB) peak
Used in PS Old Gen pool:         333MB (   318 MiB) max;     91MB (    86 MiB) avg;    333MB (   318 MiB) peak
Allocated heap memory:          4689MB (  4472 MiB) max;   3611MB (  3444 MiB) avg
Allocated non-heap memory:        28MB (    27 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:  13597MB ( 12967 MiB) max;  13596MB ( 12966 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
