scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-fs--dlm--dlm.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-12606503_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 32498: Function pointer *(ls->ls_ops->recover_done) with type void (*)(void *, struct dlm_slot *, int, int, uint32_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38592: Function pointer *notify with type int (*)(void *, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38573: Function pointer *notify with type int (*)(void *, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 38183: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 36044: Function pointer *(con->sock->ops->accept) with type int (*)(struct socket *, struct socket *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 36055-36056: Function pointer *(newsock->ops->getname) with type int (*)(struct socket *, struct sockaddr *, int *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 36535: Function pointer *(sock->ops->bind) with type int (*)(struct socket *, struct sockaddr *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 36550-36551: Function pointer *(sock->ops->connect) with type int (*)(struct socket *, struct sockaddr *, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 36655: Function pointer *(sock->ops->bind) with type int (*)(struct socket *, struct sockaddr *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Extern function ktime_get() returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

Extern function ns_to_timeval(kt.tv64) returning a composite is treated as nondet. (PredicateCPA:CExpressionVisitorWithPointerAliasing.visit, WARNING)

line 38183: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 38144: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size(from, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 38107: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 38592: Ignoring call via function pointer dlm_plock_callback::notify for which no suitable target was found in line: rv = (*notify)((void *)fl, (void *)0, 0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 38592: Ignoring function call through function pointer *notify: rv = (*notify)((void *)fl, (void *)0, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 38573: Ignoring call via function pointer dlm_plock_callback::notify for which no suitable target was found in line: (*notify)((void *)fl, (void *)0, op->info.rv); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 38573: Ignoring function call through function pointer *notify: (*notify)((void *)fl, (void *)0, op->info.rv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 32384: Ignoring function call through function pointer *(ls->ls_ops->recover_prep): (*(ls->ls_ops->recover_prep))(ls->ls_ops_arg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from close_connection to close_connection (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 37536: Ignoring function call through function pointer *(con->connect_action): (*(con->connect_action))(con); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from process_send_sockets to process_send_sockets (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9128: Ignoring call via function pointer dlm_callback_work::castfn for which no suitable target was found in line: (*castfn)(lkb->ldv_20297.lkb_astparam); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9128: Ignoring function call through function pointer *castfn: (*castfn)(lkb->ldv_20297.lkb_astparam); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from dlm_callback_work to process_send_sockets (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dlm_callback_work to dlm_callback_work (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 36535: Ignoring function call through function pointer *(sock->ops->bind): result = (*(sock->ops->bind))(sock, (struct sockaddr *)(&src_addr), addr_len); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 36550-36551: Ignoring function call through function pointer *(sock->ops->connect): result = (*(sock->ops->connect))(sock, (struct sockaddr *)(&saddr), addr_len, 2048); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 37505: Ignoring function call through function pointer *(con->rx_action): err = (*(con->rx_action))(con); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Error: Refinement using predicate refinement failed.Try using cpa.value.symbolic.refiner.SymbolicValueAnalysisRefiner (SymbolicPrecisionRefinementStrategy.performRefinement, SEVERE)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 350928 (count: 19498, min: 0, max: 18, avg: 18.00)
Number of global variables:                          350928 (count: 19498, min: 0, max: 18, avg: 18.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  109320
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                1.070s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.637s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 183ms

PredicateCPA statistics
-----------------------
Number of abstractions:            109300 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20174 (18%)
  Because of loop head:            1672 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       109300 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   20
  Times result was 'false':        0 (0%)
Number of coverage checks:         9980
  BDD entailment checks:           9980
Number of SMT sat checks:          20
  trivial:                         20
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          20
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   160629 (83%)

Time for post operator:                 23.367s
  Time for path formula creation:       23.023s
    Actual computation:                 19.467s
Time for strengthen operator:            0.148s
  Time for satisfiability checks:        0.001s
Time for prec operator:                  7.822s
  Time for abstraction:                  2.862s (Max:     0.223s, Count: 109300)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.120s
  Time for BDD entailment checks:        0.088s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 119321, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.132s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.252s
  Time for transition matches:                         0.567s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       198199 (count: 198199, min: 1, max: 1, avg: 1.00) [1 x 198199]

CPA algorithm statistics
------------------------
Number of iterations:            98290
Max size of waitlist:            168
Average size of waitlist:        63
Number of computed successors:   109320
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         9980
Number of times breaked:         20

Total time for CPA algorithm:        42.749s (Max:    15.974s)
  Time for choose from waitlist:      0.171s
  Time for precision adjustment:      9.886s
  Time for transfer relation:        30.660s
  Time for merge operator:            0.064s
  Time for stop operator:             0.502s
  Time for adding to reached set:     0.424s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                6329 (count: 20, min: 33, max: 1815, avg: 316.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  43.312s
  Counterexample analysis:               42.388s (Max:    10.095s, Calls: 20)
    Refinement sat check:                33.667s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.003s
  Building the counterexample trace:                  42.388s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.025s
  ARG update:                                          0.000s

Length of refined path (in blocks):                    2758 (count: 19, min: 11, max: 1339, avg: 145.16)
Number of affected states:                             1396 (count: 19, min: 7, max: 887, avg: 73.47)
Length (states) of path with itp 'true':               1343 (count: 19, min: 1, max: 1291, avg: 70.68)
Length (states) of path with itp non-trivial itp:      1396 (count: 19, min: 7, max: 887, avg: 73.47)
Length (states) of path with itp 'false':                19 (count: 19, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 19, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1377 (count: 19, min: 6, max: 886, avg: 72.47)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     19
Number of failed refinements:         0
Max. size of reached set before ref.: 19498
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 4968.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      85.762s
Time for refinements:                43.013s
Average time for refinement:          2.150s
Max time for refinement:             10.187s

Code Coverage
-----------------------------
  Function coverage:      0.429
  Visited lines:          15022
  Total lines:            27300
  Line coverage:          0.550
  Visited conditions:     1893
  Total conditions:       5540
  Condition coverage:     0.342

CPAchecker general statistics
-----------------------------
Number of program locations:     16089
Number of CFA edges:             23665
Number of relevant variables:    4633
Number of functions:             825
Number of loops:                 177
Size of reached set:             19498
  Number of reached locations:   5672 (35%)
    Avg states per location:     3
    Max states per location:     187 (at node N3838)
  Number of reached functions:   354 (43%)
  Number of partitions:          19186
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N12847 (before line 31191), Function main called from node N12331, stack depth 1 [203b520], stack [main], Init])
  Number of target states:       1
  Size of final wait list        160

Time for analysis setup:         13.303s
  Time for loading CPAs:          0.938s
  Time for loading parser:        0.666s
  Time for CFA construction:     11.626s
    Time for parsing file(s):     2.690s
    Time for AST to CFA:          3.454s
    Time for CFA sanity check:    2.094s
    Time for post-processing:     3.108s
      Time for var class.:        0.000s
Time for Analysis:               85.762s
CPU time for analysis:           97.690s
Total time for CPAchecker:       99.070s
Total CPU time for CPAchecker:  122.900s

Time for Garbage Collector:       0.855s (in 5 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               2207MB (  2104 MiB) max;    615MB (   586 MiB) avg;   2240MB (  2136 MiB) peak
Used non-heap memory:             28MB (    27 MiB) max;     26MB (    24 MiB) avg;     29MB (    27 MiB) peak
Used in PS Old Gen pool:          36MB (    35 MiB) max;     10MB (     9 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:          3611MB (  3444 MiB) max;   2833MB (  2701 MiB) avg
Allocated non-heap memory:        29MB (    28 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:  15037MB ( 14340 MiB) max;  13842MB ( 13201 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
