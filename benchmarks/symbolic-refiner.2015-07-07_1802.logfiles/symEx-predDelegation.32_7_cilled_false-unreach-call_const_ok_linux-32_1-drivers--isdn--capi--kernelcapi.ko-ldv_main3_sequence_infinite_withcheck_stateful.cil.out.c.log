scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.4-simple/ALL.prp ../svcomp15/ldv-linux-3.4-simple/32_7_cilled_false-unreach-call_const_ok_linux-32_1-drivers--isdn--capi--kernelcapi.ko-ldv_main3_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1393606749_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                      0 (count: 114, min: 0, max: 0, avg: 0.00)
Number of global variables:                               0 (count: 114, min: 0, max: 0, avg: 0.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                     122
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.037s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.008s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 1ms

PredicateCPA statistics
-----------------------
Number of abstractions:            121 (99% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7 (6%)
  Because of loop head:            1 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       121 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   1
  Times result was 'false':        0 (0%)
Number of coverage checks:         9
  BDD entailment checks:           9
Number of SMT sat checks:          1
  trivial:                         1
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          0

Number of path formula cache hits:   22 (2%)

Time for post operator:                  0.362s
  Time for path formula creation:        0.360s
    Actual computation:                  0.564s
Time for strengthen operator:            0.001s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  0.061s
  Time for abstraction:                  0.041s (Max:     0.032s, Count: 121)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 132, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.024s
Automaton transfers with branching:                0
Automaton transfer successors:                         1098 (count: 1098, min: 1, max: 1, avg: 1.00) [1 x 1098]

CPA algorithm statistics
------------------------
Number of iterations:            88
Max size of waitlist:            29
Average size of waitlist:        16
Number of computed successors:   122
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         9
Number of times breaked:         1

Total time for CPA algorithm:         0.652s (Max:     0.652s)
  Time for choose from waitlist:      0.002s
  Time for precision adjustment:      0.111s
  Time for transfer relation:         0.503s
  Time for merge operator:            0.001s
  Time for stop operator:             0.022s
  Time for adding to reached set:     0.003s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  43 (count: 1, min: 43, max: 43, avg: 43.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.975s
  Counterexample analysis:                2.337s (Max:     2.337s, Calls: 1)
    Refinement sat check:                 2.227s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   2.337s
  Extracting precise counterexample:                   0.635s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     0
Number of failed refinements:         0
Max. size of reached set before ref.: 114
Max. size of reached set after ref.:  0
Avg. size of reached set before ref.: 114.00
Avg. size of reached set after ref.:  NaN

Total time for CEGAR algorithm:       3.635s
Time for refinements:                 2.983s
Average time for refinement:          2.983s
Max time for refinement:              2.983s

Code Coverage
-----------------------------
  Function coverage:      0.048
  Visited lines:          4112
  Total lines:            14566
  Line coverage:          0.282
  Visited conditions:     68
  Total conditions:       962
  Condition coverage:     0.071

CPAchecker general statistics
-----------------------------
Number of program locations:     2765
Number of CFA edges:             3705
Number of relevant variables:    2939
Number of functions:             125
Number of loops:                 28
Size of reached set:             114
  Number of reached locations:   114 (4%)
    Avg states per location:     1
    Max states per location:     1 (at node N3971)
  Number of reached functions:   6 (5%)
  Number of partitions:          114
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        26

Time for analysis setup:          7.463s
  Time for loading CPAs:          0.678s
  Time for loading parser:        0.572s
  Time for CFA construction:      6.144s
    Time for parsing file(s):     1.529s
    Time for AST to CFA:          2.588s
    Time for CFA sanity check:    0.348s
    Time for post-processing:     1.467s
      Time for var class.:        0.000s
Time for Analysis:                3.635s
CPU time for analysis:            4.480s
Total time for CPAchecker:       11.103s
Total CPU time for CPAchecker:   18.800s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                433MB (   413 MiB) max;    229MB (   218 MiB) avg;    444MB (   423 MiB) peak
Used non-heap memory:             23MB (    22 MiB) max;     17MB (    16 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        25MB (    24 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13687MB ( 13053 MiB) max;  13590MB ( 12960 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 10657) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
