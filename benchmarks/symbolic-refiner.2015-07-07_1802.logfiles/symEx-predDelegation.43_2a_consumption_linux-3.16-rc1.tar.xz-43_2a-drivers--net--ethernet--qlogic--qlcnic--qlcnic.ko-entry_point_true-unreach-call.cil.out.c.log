scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--ethernet--qlogic--qlcnic--qlcnic.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1821073819_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 37615: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14247: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 41072: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 40979-40980: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28918: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 41114: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28873: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 41026: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 41815: Function pointer *(adapter->ahw->hw_ops->change_l2_filter) with type void (*)(struct qlcnic_adapter *, u64 *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9777: Function pointer *(adapter->ahw->hw_ops->change_macvlan) with type int (*)(struct qlcnic_adapter *, u8 *, u16 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 9744: Ignoring function call through function pointer *(adapter->ahw->hw_ops->alloc_mbx_args): tmp = (*(adapter->ahw->hw_ops->alloc_mbx_args))(mbx, adapter, arg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46780: Ignoring function call through function pointer *(adapter->ahw->hw_ops->get_beacon_state): (*(adapter->ahw->hw_ops->get_beacon_state))(adapter); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9815: Ignoring function call through function pointer *(adapter->nic_ops->cancel_idc_work): (*(adapter->nic_ops->cancel_idc_work))(adapter); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9777: Ignoring function call through function pointer *(adapter->ahw->hw_ops->change_macvlan): tmp = (*(adapter->ahw->hw_ops->change_macvlan))(adapter, addr, (int)id, (int)cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9801: Ignoring function call through function pointer *(adapter->ahw->hw_ops->config_promisc_mode): tmp = (*(adapter->ahw->hw_ops->config_promisc_mode))(adapter, mode); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 41026: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 41114: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 32630: Ignoring function call through function pointer *(adapter->ahw->hw_ops->read_reg): tmp = (*(adapter->ahw->hw_ops->read_reg))(adapter, 136323108UL, &err); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 51638: Ignoring function call through function pointer *(adapter->ahw->hw_ops->get_saved_state): tmp = (*(adapter->ahw->hw_ops->get_saved_state))(t_hdr, index); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 22947: Ignoring function call through function pointer *(adapter->ahw->hw_ops->write_reg): (*(adapter->ahw->hw_ops->write_reg))(adapter, 106954904UL, xg_val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15523: Ignoring function call through function pointer *(adapter->nic_ops->config_ipaddr): (*(adapter->nic_ops->config_ipaddr))(adapter, ip, cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15310: Ignoring function call through function pointer *(adapter->ahw->hw_ops->get_nic_info): tmp = (*(adapter->ahw->hw_ops->get_nic_info))(adapter, info, (int)id); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15239: Ignoring function call through function pointer *(adapter->ahw->hw_ops->api_lock): tmp = (*(adapter->ahw->hw_ops->api_lock))(adapter); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46755: Ignoring function call through function pointer *(adapter->ahw->hw_ops->read_crb): (*(adapter->ahw->hw_ops->read_crb))(adapter, buf, offset, size); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12641: Ignoring function call through function pointer *(adapter->ahw->hw_ops->write_reg): (*(adapter->ahw->hw_ops->write_reg))(adapter, (ulong )offset, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10167: Ignoring function call through function pointer *(adapter->ahw->hw_ops->read_reg): tmp = (*(adapter->ahw->hw_ops->read_reg))(adapter, (ulong )addr, &err); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 23728: Ignoring function call through function pointer *(hw_ops->io_error_detected): tmp___0 = (*(hw_ops->io_error_detected))(pdev, state); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15346: Ignoring function call through function pointer *(adapter->nic_ops->napi_add): tmp = (*(adapter->nic_ops->napi_add))(adapter, netdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9759: Ignoring function call through function pointer *(adapter->ahw->hw_ops->mbx_cmd): tmp = (*(adapter->ahw->hw_ops->mbx_cmd))(adapter, cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from qlcnic_issue_cmd to qlcnic_sriov_pf_cfg_intrcoal_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15412: Ignoring function call through function pointer *(adapter->ahw->hw_ops->napi_disable): (*(adapter->ahw->hw_ops->napi_disable))(adapter); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 37615: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from qlcnic_82xx_fw_cmd_create_tx_ctx to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_sriov_pf_cfg_intrcoal_cmd to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_82xx_set_nic_info to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_82xx_set_nic_info to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14247: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from qlcnic_sriov_pf_linkevent_cmd to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_83xx_get_port_config to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_83xx_get_port_config to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_83xx_set_port_config to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_83xx_set_port_config to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 33966: Ignoring function call through function pointer *(adapter->ahw->hw_ops->read_reg): tmp___4 = (*(adapter->ahw->hw_ops->read_reg))(adapter, 106954904UL, &err); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 40979-40980: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, ((struct page *)-24189255811072L) + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 41142: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from dma_mapping_error to qlcnic_set_pauseparam (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_sriov_cfg_bc_intr to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 55898: Ignoring function call through function pointer *(mbx->ops->enqueue_cmd): err = (*(mbx->ops->enqueue_cmd))(adapter, cmd, &timeout); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 55898: Return type of function qlcnic_dump_ctrl is u32 , but result is used as type int: err = qlcnic_dump_ctrl(adapter, cmd, &timeout); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from qlcnic_83xx_issue_cmd to qlcnic_dump_ctrl (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10167: Return type of function qlcnic_dump_ctrl is u32 , but result is used as type int: tmp = qlcnic_dump_ctrl(adapter, (ulong )addr, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from qlcnic_ind_rd to qlcnic_dump_ctrl (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10167: Return type of function qlcnic_dump_l2_cache is u32 , but result is used as type int: tmp = qlcnic_dump_l2_cache(adapter, (ulong )addr, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from qlcnic_ind_rd to qlcnic_dump_l2_cache (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_read_pollrd to qlcnic_ind_rd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 10074-10075: Ignoring function call through function pointer *(adapter->ahw->hw_ops->read_reg): done = (*(adapter->ahw->hw_ops->read_reg))(adapter, ((unsigned long)((sem + 14336) * 8)) + 101711872UL, &err); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 10074-10075: Return type of function qlcnic_dump_ctrl is u32 , but result is used as type int: done = qlcnic_dump_ctrl(adapter, ((unsigned long)((sem + 14336) * 8)) + 101711872UL, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from qlcnic_pcie_sem_lock to qlcnic_dump_ctrl (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 10074-10075: Return type of function qlcnic_dump_l2_cache is u32 , but result is used as type int: done = qlcnic_dump_l2_cache(adapter, ((unsigned long)((sem + 14336) * 8)) + 101711872UL, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from qlcnic_pcie_sem_lock to qlcnic_dump_l2_cache (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_pcie_sem_lock to qlcnic_get_eeprom (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_82xx_hw_read_wx_2M to qlcnic_pcie_sem_lock (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 10142-10143: Ignoring function call through function pointer *(adapter->ahw->hw_ops->read_reg): (*(adapter->ahw->hw_ops->read_reg))(adapter, ((unsigned long)((sem * 8) + 114692)) + 101711872UL, &err); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 10142-10143: Return type of function qlcnic_dump_ctrl is u32 , but result is used as type int: qlcnic_dump_ctrl(adapter, ((unsigned long)((sem * 8) + 114692)) + 101711872UL, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from qlcnic_pcie_sem_unlock to qlcnic_dump_ctrl (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 10142-10143: Return type of function qlcnic_dump_l2_cache is u32 , but result is used as type int: qlcnic_dump_l2_cache(adapter, ((unsigned long)((sem * 8) + 114692)) + 101711872UL, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from qlcnic_pcie_sem_unlock to qlcnic_dump_l2_cache (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_pcie_sem_unlock to qlcnic_get_eeprom (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_pcie_sem_unlock to qlcnic_82xx_hw_read_wx_2M (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_83xx_config_ipaddr to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_83xx_config_ipaddr to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_dump_crb to qlcnic_ind_rd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_read_rom to qlcnic_ind_rd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_read_mux2 to qlcnic_ind_rd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_dump_l1_cache to qlcnic_ind_rd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_read_pollrdmwr to qlcnic_ind_rd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_read_memory_pexdma to qlcnic_get_saved_state (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_read_memory_pexdma to qlcnic_ind_rd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_ms_mem_write128 to qlcnic_ind_rd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_start_pex_dma to qlcnic_get_saved_state (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_start_pex_dma to qlcnic_ind_rd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_read_memory_test_agent to qlcnic_ind_rd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 59791: Ignoring function call through function pointer *(adapter->ahw->hw_ops->read_reg): tmp___0 = (*(adapter->ahw->hw_ops->read_reg))(adapter, indirect_add, &err); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 59791: Return type of function qlcnic_dump_ctrl is u32 , but result is used as type int: tmp___0 = qlcnic_dump_ctrl(adapter, indirect_add, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from qlcnic_83xx_lockless_flash_read32 to qlcnic_dump_ctrl (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 59791: Return type of function qlcnic_dump_l2_cache is u32 , but result is used as type int: tmp___0 = qlcnic_dump_l2_cache(adapter, indirect_add, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from qlcnic_83xx_lockless_flash_read32 to qlcnic_dump_l2_cache (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_83xx_lockless_flash_read32 to qlcnic_get_eeprom (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_83xx_lockless_flash_read32 to qlcnic_82xx_hw_read_wx_2M (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 59791: Return type of function qlcnic_83xx_dump_rom is u32 , but result is used as type int: tmp___0 = qlcnic_83xx_dump_rom(adapter, indirect_add, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from qlcnic_83xx_lockless_flash_read32 to qlcnic_83xx_dump_rom (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_dump_mux to qlcnic_ind_rd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_dump_que to qlcnic_ind_rd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 59740: Ignoring function call through function pointer *(adapter->ahw->hw_ops->read_reg): tmp = (*(adapter->ahw->hw_ops->read_reg))(adapter, indirect_add, &err); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 59740: Return type of function qlcnic_dump_ctrl is u32 , but result is used as type int: tmp = qlcnic_dump_ctrl(adapter, indirect_add, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 59740: Return type of function qlcnic_dump_l2_cache is u32 , but result is used as type int: tmp = qlcnic_dump_l2_cache(adapter, indirect_add, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 59740: Return type of function qlcnic_83xx_dump_rom is u32 , but result is used as type int: tmp = qlcnic_83xx_dump_rom(adapter, indirect_add, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

lines 10142-10143: Return type of function qlcnic_83xx_dump_rom is u32 , but result is used as type int: qlcnic_83xx_dump_rom(adapter, ((unsigned long)((sem * 8) + 114692)) + 101711872UL, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from qlcnic_pcie_sem_unlock to qlcnic_83xx_dump_rom (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10090: Ignoring function call through function pointer *(adapter->ahw->hw_ops->read_reg): done = (*(adapter->ahw->hw_ops->read_reg))(adapter, (ulong )id_reg, &err); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10090: Return type of function qlcnic_dump_ctrl is u32 , but result is used as type int: done = qlcnic_dump_ctrl(adapter, (ulong )id_reg, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 10090: Return type of function qlcnic_dump_l2_cache is u32 , but result is used as type int: done = qlcnic_dump_l2_cache(adapter, (ulong )id_reg, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 10125: Ignoring function call through function pointer *(adapter->ahw->hw_ops->write_reg): (*(adapter->ahw->hw_ops->write_reg))(adapter, (ulong )id_reg, __CPAchecker_TMP_0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from qlcnic_pcie_sem_lock to qlcnic_82xx_fw_cmd_create_tx_ctx (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_82xx_hw_write_wx_2M to qlcnic_pcie_sem_lock (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_82xx_hw_read_wx_2M to qlcnic_pcie_sem_unlock (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_83xx_create_tx_ctx to qlcnic_alloc_mbx_args (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_83xx_create_tx_ctx to qlcnic_issue_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 29671: Ignoring function call through function pointer *(adapter->ahw->hw_ops->write_reg): (*(adapter->ahw->hw_ops->write_reg))(adapter, 154206216UL, addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from do_rom_fast_read to qlcnic_82xx_fw_cmd_create_tx_ctx (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_pcie_sem_lock to qlcnic_82xx_hw_write_wx_2M (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_pcie_sem_lock to qlcnic_82xx_hw_read_wx_2M (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 10074-10075: Return type of function qlcnic_83xx_dump_rom is u32 , but result is used as type int: done = qlcnic_83xx_dump_rom(adapter, ((unsigned long)((sem + 14336) * 8)) + 101711872UL, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from qlcnic_pcie_sem_lock to qlcnic_83xx_dump_rom (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10090: Return type of function qlcnic_83xx_dump_rom is u32 , but result is used as type int: done = qlcnic_83xx_dump_rom(adapter, (ulong )id_reg, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 29673: Ignoring function call through function pointer *(adapter->ahw->hw_ops->write_reg): (*(adapter->ahw->hw_ops->write_reg))(adapter, 154206228UL, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 29675: Ignoring function call through function pointer *(adapter->ahw->hw_ops->write_reg): (*(adapter->ahw->hw_ops->write_reg))(adapter, 154206224UL, 3U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 29677: Ignoring function call through function pointer *(adapter->ahw->hw_ops->write_reg): (*(adapter->ahw->hw_ops->write_reg))(adapter, 154206212UL, 11U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 29629: Ignoring function call through function pointer *(adapter->ahw->hw_ops->read_reg): tmp = (*(adapter->ahw->hw_ops->read_reg))(adapter, 154140676UL, &err); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 29629: Return type of function qlcnic_dump_ctrl is u32 , but result is used as type int: tmp = qlcnic_dump_ctrl(adapter, 154140676UL, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from qlcnic_wait_rom_done to qlcnic_dump_ctrl (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 29629: Return type of function qlcnic_dump_l2_cache is u32 , but result is used as type int: tmp = qlcnic_dump_l2_cache(adapter, 154140676UL, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from qlcnic_wait_rom_done to qlcnic_dump_l2_cache (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_wait_rom_done to qlcnic_get_eeprom (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 29690: Ignoring function call through function pointer *(adapter->ahw->hw_ops->write_reg): (*(adapter->ahw->hw_ops->write_reg))(adapter, 154206224UL, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 29694: Ignoring function call through function pointer *(adapter->ahw->hw_ops->write_reg): (*(adapter->ahw->hw_ops->write_reg))(adapter, 154206228UL, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 29696: Ignoring function call through function pointer *(adapter->ahw->hw_ops->read_reg): tmp___0 = (*(adapter->ahw->hw_ops->read_reg))(adapter, 154206232UL, &err); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 29696: Return type of function qlcnic_dump_ctrl is u32 , but result is used as type int: tmp___0 = qlcnic_dump_ctrl(adapter, 154206232UL, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from do_rom_fast_read to qlcnic_dump_ctrl (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 29696: Return type of function qlcnic_dump_l2_cache is u32 , but result is used as type int: tmp___0 = qlcnic_dump_l2_cache(adapter, 154206232UL, &err); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from do_rom_fast_read to qlcnic_dump_l2_cache (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from do_rom_fast_read to qlcnic_get_eeprom (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_82xx_hw_write_wx_2M to qlcnic_pcie_sem_unlock (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_rom_fast_read_words to qlcnic_pcie_sem_lock (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlcnic_wait_rom_done to qlcnic_82xx_hw_read_wx_2M (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from do_rom_fast_read to qlcnic_82xx_hw_read_wx_2M (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               30696268 (count: 1058494, min: 0, max: 29, avg: 29.00)
Number of global variables:                        30696268 (count: 1058494, min: 0, max: 29, avg: 29.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 1238198
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               19.377s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     3.945s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 1722ms

PredicateCPA statistics
-----------------------
Number of abstractions:            1238169 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  339908 (27%)
  Because of loop head:            20163 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1238169 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   29
  Times result was 'false':        0 (0%)
Number of coverage checks:         104861
  BDD entailment checks:           104861
Number of SMT sat checks:          29
  trivial:                         29
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          30
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   1876217 (84%)

Time for post operator:                459.025s
  Time for path formula creation:      456.092s
    Actual computation:                361.741s
Time for strengthen operator:            1.845s
  Time for satisfiability checks:        0.000s
Time for prec operator:                169.085s
  Time for abstraction:                 57.897s (Max:     0.592s, Count: 1238169)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.678s
  Time for BDD entailment checks:        0.470s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 1343090, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             1.372s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.884s
  Time for transition matches:                         4.090s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      2001242 (count: 2001242, min: 1, max: 1, avg: 1.00) [1 x 2001242]

CPA algorithm statistics
------------------------
Number of iterations:            1131194
Max size of waitlist:            393
Average size of waitlist:        344
Number of computed successors:   1238198
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         104861
Number of times breaked:         29

Total time for CPA algorithm:       740.322s (Max:   702.446s)
  Time for choose from waitlist:      1.624s
  Time for precision adjustment:    198.431s
  Time for transfer relation:       522.330s
  Time for merge operator:            0.326s
  Time for stop operator:             4.090s
  Time for adding to reached set:     4.668s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):               20970 (count: 29, min: 548, max: 1670, avg: 723.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  83.063s
  Counterexample analysis:               82.479s (Max:     6.304s, Calls: 29)
    Refinement sat check:                61.968s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.013s
  Building the counterexample trace:                  82.480s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.030s
  ARG update:                                          0.000s

Length of refined path (in blocks):                   16046 (count: 29, min: 497, max: 1665, avg: 553.31)
Number of affected states:                             2240 (count: 29, min: 4, max: 1663, avg: 77.24)
Length (states) of path with itp 'true':              13777 (count: 29, min: 1, max: 492, avg: 475.07)
Length (states) of path with itp non-trivial itp:      2240 (count: 29, min: 4, max: 1663, avg: 77.24)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 29, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2211 (count: 29, min: 3, max: 1662, avg: 76.24)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 5791
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 2581.83
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     823.470s
Time for refinements:                83.147s
Average time for refinement:          2.867s
Max time for refinement:              6.369s

Code Coverage
-----------------------------
  Function coverage:      0.195
  Visited lines:          18687
  Total lines:            48079
  Line coverage:          0.389
  Visited conditions:     2089
  Total conditions:       18718
  Condition coverage:     0.112

CPAchecker general statistics
-----------------------------
Number of program locations:     41053
Number of CFA edges:             67114
Number of relevant variables:    9929
Number of functions:             1375
Number of loops:                 349
Size of reached set:             1058494
  Size of final wait list        373

Time for analysis setup:         16.455s
  Time for loading CPAs:          0.991s
  Time for loading parser:        0.542s
  Time for CFA construction:     14.826s
    Time for parsing file(s):     3.661s
    Time for AST to CFA:          4.783s
    Time for CFA sanity check:    0.509s
    Time for post-processing:     5.703s
      Time for var class.:        0.000s
Time for Analysis:              823.470s
CPU time for analysis:          869.930s
Total time for CPAchecker:      839.929s
Total CPU time for CPAchecker:  900.010s

Time for Garbage Collector:      31.773s (in 42 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4998MB (  4766 MiB) max;   2452MB (  2338 MiB) avg;   5751MB (  5485 MiB) peak
Used non-heap memory:             30MB (    28 MiB) max;     27MB (    26 MiB) avg;     30MB (    28 MiB) peak
Used in PS Old Gen pool:        2159MB (  2059 MiB) max;    946MB (   902 MiB) avg;   2159MB (  2059 MiB) peak
Allocated heap memory:          5636MB (  5375 MiB) max;   4763MB (  4542 MiB) avg
Allocated non-heap memory:        49MB (    46 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:  14363MB ( 13697 MiB) max;  13861MB ( 13218 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
