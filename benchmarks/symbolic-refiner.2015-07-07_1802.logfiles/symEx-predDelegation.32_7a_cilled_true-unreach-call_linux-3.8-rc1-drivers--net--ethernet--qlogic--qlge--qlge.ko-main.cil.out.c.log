scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--net--ethernet--qlogic--qlge--qlge.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-320988282_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8107: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8154: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7839: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7748-7749: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7924: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7968: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7880: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7794: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

lines 7748-7749: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544UL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7995: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7794: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7924: Ignoring function call through function pointer *(ops->sync_single_for_cpu): (*(ops->sync_single_for_cpu))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7880: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7968: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12767: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch(__CPAchecker_TMP_1); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12077: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)addr); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 11990: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)(lbq_desc->p.pg_chunk.va)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 12283: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch(__CPAchecker_TMP_2); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 18414: Ignoring function call through function pointer *(qdev->nic_ops->get_flash): err = (*(qdev->nic_ops->get_flash))(qdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ql_write_cfg to pci_dma_mapping_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16584: Ignoring function call through function pointer *(qdev->nic_ops->port_initialize): status = (*(qdev->nic_ops->port_initialize))(qdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ql_adapter_initialize to qlge_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8107: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8154: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from qlge_open to ql_adapter_up (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ql_alloc_rx_buffers to ql_update_buffer_queues (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from qlge_resume to ql_adapter_up (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ql_adapter_initialize to qlge_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ql_map_send to pci_dma_mapping_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7839: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, page, offset, size, dir, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ql_map_send to dma_mapping_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ql_update_sbq to pci_dma_mapping_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ql_get_next_chunk to pci_dma_mapping_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7995: Return type of function qlge_send is netdev_tx_t , but result is used as type int: tmp___0 = qlge_send(dev, dma_addr); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from dma_mapping_error to qlge_send (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from pci_dma_mapping_error to dma_mapping_error (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ql_start_rss to ql_write_cfg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ql_start_tx_ring to ql_write_cfg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ql_start_rx_ring to ql_write_cfg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                               15937803 (count: 2276831, min: 0, max: 7, avg: 7.00)
Number of global variables:                        15937803 (count: 2276831, min: 0, max: 7, avg: 7.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 2591344
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:               10.796s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:    33.234s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 4039ms

PredicateCPA statistics
-----------------------
Number of abstractions:            2591337 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  482269 (19%)
  Because of loop head:            68440 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       2591337 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   7
  Times result was 'false':        0 (0%)
Number of coverage checks:         313085
  BDD entailment checks:           313085
Number of SMT sat checks:          7
  trivial:                         7
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          8
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   898360 (27%)

Time for post operator:                359.995s
  Time for path formula creation:      353.467s
    Actual computation:                299.521s
Time for strengthen operator:            3.993s
  Time for satisfiability checks:        0.000s
Time for prec operator:                151.855s
  Time for abstraction:                 33.195s (Max:     1.829s, Count: 2591337)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 1.857s
  Time for BDD entailment checks:        1.191s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 2904438, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             3.365s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 19.974s
  Time for transition matches:                         8.339s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      3465140 (count: 3465140, min: 1, max: 1, avg: 1.00) [1 x 3465140]

CPA algorithm statistics
------------------------
Number of iterations:            2278103
Max size of waitlist:            113
Average size of waitlist:        79
Number of computed successors:   2591344
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         313085
Number of times breaked:         7

Total time for CPA algorithm:       721.486s (Max:   719.138s)
  Time for choose from waitlist:      3.515s
  Time for precision adjustment:    184.421s
  Time for transfer relation:       494.932s
  Time for merge operator:            0.857s
  Time for stop operator:             8.361s
  Time for adding to reached set:     8.630s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                 629 (count: 7, min: 35, max: 291, avg: 89.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.546s
  Counterexample analysis:                0.456s (Max:     0.197s, Calls: 7)
    Refinement sat check:                 0.332s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.456s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.010s
  ARG update:                                          0.000s

Length of refined path (in blocks):                     184 (count: 7, min: 15, max: 37, avg: 26.29)
Number of affected states:                              143 (count: 7, min: 8, max: 32, avg: 20.43)
Length (states) of path with itp 'true':                 34 (count: 7, min: 4, max: 6, avg: 4.86)
Length (states) of path with itp non-trivial itp:       143 (count: 7, min: 8, max: 32, avg: 20.43)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             136 (count: 7, min: 7, max: 31, avg: 19.43)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 401
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 205.14
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     722.052s
Time for refinements:                 0.566s
Average time for refinement:          0.080s
Max time for refinement:              0.223s

Code Coverage
-----------------------------
  Function coverage:      0.640
  Visited lines:          13373
  Total lines:            16775
  Line coverage:          0.797
  Visited conditions:     1725
  Total conditions:       2816
  Condition coverage:     0.613

CPAchecker general statistics
-----------------------------
Number of program locations:     8314
Number of CFA edges:             11709
Number of relevant variables:    2510
Number of functions:             420
Number of loops:                 117
Size of reached set:             2276831
  Size of final wait list        80

Time for analysis setup:          8.042s
  Time for loading CPAs:          0.779s
  Time for loading parser:        0.555s
  Time for CFA construction:      6.633s
    Time for parsing file(s):     2.047s
    Time for AST to CFA:          2.055s
    Time for CFA sanity check:    0.466s
    Time for post-processing:     1.841s
      Time for var class.:        0.000s
Time for Analysis:              722.052s
CPU time for analysis:          885.580s
Total time for CPAchecker:      730.100s
Total CPU time for CPAchecker:  900.430s

Time for Garbage Collector:     151.046s (in 51 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6758MB (  6445 MiB) max;   3512MB (  3349 MiB) avg;   8390MB (  8002 MiB) peak
Used non-heap memory:             27MB (    26 MiB) max;     25MB (    24 MiB) avg;     27MB (    26 MiB) peak
Used in PS Old Gen pool:        4407MB (  4203 MiB) max;   2151MB (  2051 MiB) avg;   4469MB (  4262 MiB) peak
Allocated heap memory:          8954MB (  8539 MiB) max;   5797MB (  5528 MiB) avg
Allocated non-heap memory:        51MB (    49 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  13602MB ( 12972 MiB) max;  13596MB ( 12966 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
