scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.4-simple/ALL.prp ../svcomp15/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--rtc--rtc-test.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_658868500_tempdir
The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                    173 (count: 175, min: 0, max: 1, avg: 0.99)
Number of global variables:                             173 (count: 175, min: 0, max: 1, avg: 0.99)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                     333
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.029s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.011s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 4ms

PredicateCPA statistics
-----------------------
Number of abstractions:            332 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  44 (13%)
  Because of loop head:            3 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       332 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   1
  Times result was 'false':        0 (0%)
Number of coverage checks:         29
  BDD entailment checks:           29
Number of SMT sat checks:          1
  trivial:                         1
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          2
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   336 (63%)

Time for post operator:                  0.137s
  Time for path formula creation:        0.132s
    Actual computation:                  0.129s
Time for strengthen operator:            0.001s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  0.056s
  Time for abstraction:                  0.027s (Max:     0.001s, Count: 332)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 365, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.029s
Automaton transfers with branching:                0
Automaton transfer successors:                         1309 (count: 1309, min: 1, max: 1, avg: 1.00) [1 x 1309]

CPA algorithm statistics
------------------------
Number of iterations:            295
Max size of waitlist:            13
Average size of waitlist:        6
Number of computed successors:   333
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         29
Number of times breaked:         1

Total time for CPA algorithm:         0.456s (Max:     0.284s)
  Time for choose from waitlist:      0.002s
  Time for precision adjustment:      0.111s
  Time for transfer relation:         0.299s
  Time for merge operator:            0.001s
  Time for stop operator:             0.014s
  Time for adding to reached set:     0.012s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  19 (count: 1, min: 19, max: 19, avg: 19.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.040s
  Counterexample analysis:                0.016s (Max:     0.016s, Calls: 1)
    Refinement sat check:                 0.011s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.016s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.003s
  Precision update:                                    0.003s
  ARG update:                                          0.000s

Length of refined path (in blocks):                      15 (count: 1, min: 15, max: 15, avg: 15.00)
Number of affected states:                               13 (count: 1, min: 13, max: 13, avg: 13.00)
Length (states) of path with itp 'true':                  1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:        13 (count: 1, min: 13, max: 13, avg: 13.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              12 (count: 1, min: 12, max: 12, avg: 12.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 131
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 131.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:       0.505s
Time for refinements:                 0.048s
Average time for refinement:          0.048s
Max time for refinement:              0.048s

Code Coverage
-----------------------------
  Function coverage:      0.536
  Visited lines:          1979
  Total lines:            2129
  Line coverage:          0.930
  Visited conditions:     39
  Total conditions:       74
  Condition coverage:     0.527

CPAchecker general statistics
-----------------------------
Number of program locations:     306
Number of CFA edges:             365
Number of relevant variables:    130
Number of functions:             28
Number of loops:                 1
Size of reached set:             175
  Number of reached locations:   175 (57%)
    Avg states per location:     1
    Max states per location:     1 (at node N0)
  Number of reached functions:   15 (54%)
  Number of partitions:          175
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.283s
  Time for loading CPAs:          0.476s
  Time for loading parser:        0.514s
  Time for CFA construction:      1.217s
    Time for parsing file(s):     0.540s
    Time for AST to CFA:          0.324s
    Time for CFA sanity check:    0.037s
    Time for post-processing:     0.154s
      Time for var class.:        0.000s
Time for Analysis:                0.505s
CPU time for analysis:            0.680s
Total time for CPAchecker:        2.793s
Total CPU time for CPAchecker:    4.410s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                189MB (   180 MiB) max;    117MB (   112 MiB) avg;    189MB (   180 MiB) peak
Used non-heap memory:             20MB (    19 MiB) max;     14MB (    13 MiB) avg;     21MB (    20 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13600MB ( 12970 MiB) max;  13585MB ( 12955 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
