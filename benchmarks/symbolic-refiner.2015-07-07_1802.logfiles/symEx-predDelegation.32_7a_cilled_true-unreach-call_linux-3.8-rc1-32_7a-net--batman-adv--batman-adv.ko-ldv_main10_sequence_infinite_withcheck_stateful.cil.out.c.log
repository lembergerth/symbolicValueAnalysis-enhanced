scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-net--batman-adv--batman-adv.ko-ldv_main10_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-304731740_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 22868: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv, "Interface deactivated: %s\n", (char *)(&(hard_iface->net_dev->name))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Cannot get declaration of function __builtin_va_start, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15358: Ignoring parameters passed as varargs to function batadv_fdebug_log: batadv_fdebug_log(bat_priv->debug_log, "[%10u] %s", tmp, (char *)(&tmp_log_buf)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 15317: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end((__va_list_tag *)(&args)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 15360: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end((__va_list_tag *)(&args)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 23224: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv, "Removing interface: %s\n", (char *)(&(hard_iface->net_dev->name))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Destroying the void * pointer  batadv_orig_node_del_if::data_ptr produces garbage! (in the following line(s):
 line 28211:	N12753 -{ret = batadv_orig_node_del_if(orig_node, max_if_num, __CPAchecker_TMP_1);}-> N12754) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

line 22501: Ignoring function call through function pointer *(bat_priv->bat_algo_ops->bat_primary_iface_set): (*(bat_priv->bat_algo_ops->bat_primary_iface_set))(new_hard_iface); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 39399-39400: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Deleting %pM from global tt entry %pM: %s\n", (uint8_t *)(&(orig_node->orig)), (uint8_t *)(&(tt_global_entry->common.addr)), message) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 39651-39652: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Deleting global tt entry %pM: %s\n", (uint8_t *)(&(tt_global->common.addr)), message) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 38288-38289: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Local tt entry (%pM) pending to be removed: %s\n", (uint8_t *)(&(tt_local_entry->common.addr)), message) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 39814-39815: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Deleting global tt entry (%pM): %s\n", (uint8_t *)(&(tt_global->common.addr)), msg) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 13493-13494: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "bla_purge_claims(): %pM, vid %d, time out\n", (uint8_t *)(&(claim->addr)), __CPAchecker_TMP_1) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 12168-12170: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "bla_send_claim(): REQUEST of %pM to %pMon vid %d\n", (unsigned char *)(&(ethhdr->h_source)), (unsigned char *)(&(ethhdr->h_dest)), (int)vid) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 12134-12135: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "bla_send_claim(): ANNOUNCE of %pM on vid %d\n", (unsigned char *)(&(ethhdr->h_source)), (int)vid) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12112: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "bla_send_claim(): UNCLAIM %pM on vid %d\n", mac, (int)vid) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12090: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "bla_send_claim(): CLAIM %pM on vid %d\n", mac, (int)vid) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 12904-12905: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "handle_unclaim(): UNCLAIM %pM on vid %d (sent by %pM)...\n", claim_addr, (int)vid, (uint8_t *)(&(backbone_gw->orig))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12719: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "bla_del_claim(): %pM, vid %d\n", mac, (int)vid) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 13344-13345: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(backbone_gw->bat_priv, "bla_purge_backbone_gw(): backbone gw %pM timed out\n", (uint8_t *)(&(backbone_gw->orig))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 42443: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Deleting local tt entry (%pM): pending\n", (uint8_t *)(&(tt_common->addr))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 42530: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Local changes committed, updating to ttvn %u\n", (int)((unsigned char)tmp___0)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 10692: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Other host probably restarted!\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 10669: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "We missed a lot of packets (%i) !\n", seq_num_diff + -1) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 8491: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "batman packet queue full\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 19556-19558: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Changing route to gateway %pM (gw_flags: %i, tq: %i)\n", (uint8_t *)(&(next_gw->orig_node->orig)), __CPAchecker_TMP_2, __CPAchecker_TMP_3) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 36711-36713: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Impossible to send uevent for (%s,%s,%s) event (err: %d)\n", batadv_uev_type_str[(unsigned int)type], batadv_uev_action_str[(unsigned int)action], __CPAchecker_TMP_0, ret) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 19542-19544: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Adding route to gateway %pM (gw_flags: %i, tq: %i)\n", (uint8_t *)(&(next_gw->orig_node->orig)), __CPAchecker_TMP_0, __CPAchecker_TMP_1) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 19528: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Removing selected gateway - no gateway in range\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27503-27504: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Originator timeout: originator %pM, last_seen %u\n", (uint8_t *)(&(orig_node->orig)), tmp) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27423-27425: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "neighbor purge: originator %pM, neighbor: %pM, iface: %s\n", (uint8_t *)(&(orig_node->orig)), (uint8_t *)(&(neigh_node->addr)), (char *)(&(if_incoming->net_dev->name))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27434-27436: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "neighbor timeout: originator %pM, neighbor: %pM, last_seen: %u\n", (uint8_t *)(&(orig_node->orig)), (uint8_t *)(&(neigh_node->addr)), tmp) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 29121-29123: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Changing route towards: %pM (now via %pM - was via %pM)\n", (uint8_t *)(&(orig_node->orig)), (uint8_t *)(&(neigh_node->addr)), (uint8_t *)(&(curr_router->addr))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 29111-29112: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Adding route towards: %pM (via %pM)\n", (uint8_t *)(&(orig_node->orig)), (uint8_t *)(&(neigh_node->addr))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 29097: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Deleting route towards: %pM\n", (uint8_t *)(&(orig_node->orig))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 19751-19754: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Found new gateway %pM -> gw_class: %i - %i%s/%i%s\n", (uint8_t *)(&(orig_node->orig)), (int)new_gwflags, __CPAchecker_TMP_0, __CPAchecker_TMP_1, __CPAchecker_TMP_2, __CPAchecker_TMP_3) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 19812-19814: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Gateway class of originator %pM changed from %i to %i\n", (uint8_t *)(&(orig_node->orig)), __CPAchecker_TMP_1, (int)new_gwflags) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 19829: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "Gateway %pM removed from gateway list\n", (uint8_t *)(&(orig_node->orig))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 18851: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "ARP Request for %pI4: fallback prevented\n", &ip_dst) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 18837: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "ARP Request for %pI4: fallback\n", &ip_dst) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 8163-8168: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "%s %spacket (originator %pM, seqno %u, TQ %d, TTL %d, IDF %s, ttvn %d) on interface %s [%pM]\n", fwd_str, __CPAchecker_TMP_7, (uint8_t *)(&(batadv_ogm_packet->orig)), tmp___0, __CPAchecker_TMP_8, (int)(batadv_ogm_packet->header.ttl), __CPAchecker_TMP_10, __CPAchecker_TMP_11, (char *)(&(hard_iface->net_dev->name)), hard_iface->net_dev->dev_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 8285-8288: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "%s packet (originator %pM, seqno %u, TTL %d) on interface %s [%pM]\n", __CPAchecker_TMP_6, (uint8_t *)(&(batadv_ogm_packet->orig)), tmp___0, (int)(batadv_ogm_packet->header.ttl), (char *)(&(forw_packet->if_incoming->net_dev->name)), forw_packet->if_incoming->net_dev->dev_addr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 32420: Ignoring function call through function pointer *(bat_priv->bat_algo_ops->bat_ogm_emit): (*(bat_priv->bat_algo_ops->bat_ogm_emit))(forw_packet); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from batadv_send_outstanding_bat_ogm_packet to batadv_send_outstanding_bat_ogm_packet (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 32057: Ignoring function call through function pointer *(bat_priv->bat_algo_ops->bat_ogm_schedule): (*(bat_priv->bat_algo_ops->bat_ogm_schedule))(hard_iface); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from batadv_schedule_bat_ogm to batadv_send_outstanding_bat_ogm_packet (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23256: Ignoring function call through function pointer *(bat_priv->bat_algo_ops->bat_iface_disable): (*(bat_priv->bat_algo_ops->bat_iface_disable))(hard_iface); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 32462: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "purge_outstanding_packets(): %s\n", (char *)(&(hard_iface->net_dev->name))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 32469: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(bat_priv, "purge_outstanding_packets()\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 17038: Ignoring call via function pointer __batadv_dat_purge::to_purge for which no suitable target was found in line: tmp = (*to_purge)(dat_entry); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17038: Ignoring function call through function pointer *to_purge: tmp = (*to_purge)(dat_entry); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Error: Refinement using predicate refinement failed.Try using cpa.value.symbolic.refiner.SymbolicValueAnalysisRefiner (SymbolicPrecisionRefinementStrategy.performRefinement, SEVERE)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 210679 (count: 210761, min: 0, max: 1, avg: 1.00)
Number of global variables:                          210679 (count: 210761, min: 0, max: 1, avg: 1.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  351835
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                1.041s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.728s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 499ms

PredicateCPA statistics
-----------------------
Number of abstractions:            351833 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  72180 (21%)
  Because of loop head:            7178 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       351833 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   2
  Times result was 'false':        0 (0%)
Number of coverage checks:         35594
  BDD entailment checks:           35594
Number of SMT sat checks:          2
  trivial:                         2
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          2
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   296878 (56%)

Time for post operator:                 48.854s
  Time for path formula creation:       48.100s
    Actual computation:                 40.363s
Time for strengthen operator:            0.484s
  Time for satisfiability checks:        0.000s
Time for prec operator:                 14.913s
  Time for abstraction:                  4.155s (Max:     0.036s, Count: 351833)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.249s
  Time for BDD entailment checks:        0.187s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 387432, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.388s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.462s
  Time for transition matches:                         1.080s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       516245 (count: 516245, min: 1, max: 1, avg: 1.00) [1 x 516245]

CPA algorithm statistics
------------------------
Number of iterations:            316237
Max size of waitlist:            53
Average size of waitlist:        27
Number of computed successors:   351835
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         35594
Number of times breaked:         2

Total time for CPA algorithm:        91.348s (Max:    47.799s)
  Time for choose from waitlist:      0.475s
  Time for precision adjustment:     18.717s
  Time for transfer relation:        67.238s
  Time for merge operator:            0.128s
  Time for stop operator:             1.133s
  Time for adding to reached set:     1.201s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                 282 (count: 2, min: 141, max: 141, avg: 141.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.304s
  Counterexample analysis:                0.909s (Max:     0.461s, Calls: 2)
    Refinement sat check:                 0.751s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.909s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.002s
  Precision update:                                    0.005s
  ARG update:                                          0.000s

Length of refined path (in blocks):                     113 (count: 1, min: 113, max: 113, avg: 113.00)
Number of affected states:                               19 (count: 1, min: 19, max: 19, avg: 19.00)
Length (states) of path with itp 'true':                 93 (count: 1, min: 93, max: 93, avg: 93.00)
Length (states) of path with itp non-trivial itp:        19 (count: 1, min: 19, max: 19, avg: 19.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              18 (count: 1, min: 18, max: 18, avg: 18.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 210761
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 158121.50
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      93.340s
Time for refinements:                 1.992s
Average time for refinement:          0.996s
Max time for refinement:              1.479s

Code Coverage
-----------------------------
  Function coverage:      0.356
  Visited lines:          12398
  Total lines:            25054
  Line coverage:          0.495
  Visited conditions:     1728
  Total conditions:       6050
  Condition coverage:     0.286

CPAchecker general statistics
-----------------------------
Number of program locations:     16698
Number of CFA edges:             25872
Number of relevant variables:    5679
Number of functions:             753
Number of loops:                 198
Size of reached set:             210761
  Number of reached locations:   5117 (31%)
    Avg states per location:     41
    Max states per location:     1604 (at node N62)
  Number of reached functions:   268 (36%)
  Number of partitions:          210748
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N11733 (before line 26540), Function main called from node N11694, stack depth 1 [67573d5f], stack [main], Init])
  Number of target states:       1
  Size of final wait list        4

Time for analysis setup:         13.328s
  Time for loading CPAs:          0.880s
  Time for loading parser:        0.656s
  Time for CFA construction:     11.680s
    Time for parsing file(s):     2.399s
    Time for AST to CFA:          4.557s
    Time for CFA sanity check:    0.941s
    Time for post-processing:     3.449s
      Time for var class.:        0.000s
Time for Analysis:               93.340s
CPU time for analysis:          112.210s
Total time for CPAchecker:      106.673s
Total CPU time for CPAchecker:  137.940s

Time for Garbage Collector:       3.429s (in 7 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3418MB (  3260 MiB) max;   1157MB (  1104 MiB) avg;   3575MB (  3409 MiB) peak
Used non-heap memory:             29MB (    28 MiB) max;     26MB (    25 MiB) avg;     30MB (    28 MiB) peak
Used in PS Old Gen pool:         381MB (   363 MiB) max;    166MB (   159 MiB) avg;    381MB (   363 MiB) peak
Allocated heap memory:          4602MB (  4389 MiB) max;   3404MB (  3247 MiB) avg
Allocated non-heap memory:        30MB (    29 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:  13664MB ( 13031 MiB) max;  13596MB ( 12966 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
