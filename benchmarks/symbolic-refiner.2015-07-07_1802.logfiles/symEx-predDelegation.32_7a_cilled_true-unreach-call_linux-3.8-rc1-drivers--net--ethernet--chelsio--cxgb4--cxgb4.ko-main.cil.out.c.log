scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--net--ethernet--chelsio--cxgb4--cxgb4.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1176391857_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 32701: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 32748: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 32481: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 32390-32391: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 32566: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 32522: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 32436: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16396: Function pointer *((ulds[uld]).add) with type void * (*)(const struct cxgb4_lld_info *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 26045: Ignoring function call through function pointer *(acts->int_handler): (*(acts->int_handler))(adapter); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16545: Ignoring function call through function pointer *((ulds[i]).state_change): (*((ulds[i]).state_change))((adap->uld_handle)[i], new_state); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16545: Return type of function eeh_err_detected is pci_ers_result_t , but result is used as type int: eeh_err_detected((adap->uld_handle)[i], new_state); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from notify_ulds to eeh_err_detected (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 36667: Ignoring function call through function pointer *(q->handler): ret = (*(q->handler))(q, (__be64 *)rc, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 36664: Ignoring function call through function pointer *(q->handler): ret = (*(q->handler))(q, q->cur_desc, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 32522: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 32566: Ignoring function call through function pointer *(ops->sync_single_for_cpu): (*(ops->sync_single_for_cpu))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 36643: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)(si.va)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 36647: Ignoring function call through function pointer *(q->handler): ret = (*(q->handler))(q, q->cur_desc, (const struct pkt_gl *)(&si)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 32436: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 32390-32391: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544UL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 32593: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from t4_eth_xmit to map_skb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 33064: Ignoring function call through function pointer *(skb->destructor): (*(skb->destructor))(skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16490: Ignoring function call through function pointer *((ulds[i]).state_change): (*((ulds[i]).state_change))((adap->uld_handle)[i], 3); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16218: Ignoring function call through function pointer *((ulds[0]).control): (*((ulds[0]).control))((adap->uld_handle)[0], cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                2995932 (count: 203435, min: 0, max: 16, avg: 14.73)
Number of global variables:                         1627464 (count: 203435, min: 0, max: 8, avg: 8.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  292958
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                3.061s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:    49.397s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 3
Most constraints before refinement in state: 3
Constraints after refinement in state: 7813
Constraints before refinement in state: 15799
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 1322ms

PredicateCPA statistics
-----------------------
Number of abstractions:            292947 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  81500 (28%)
  Because of loop head:            3200 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       292947 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   11
  Times result was 'false':        0 (0%)
Number of coverage checks:         17836
  BDD entailment checks:           17836
Number of SMT sat checks:          11
  trivial:                         11
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          24
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   171539 (44%)

Time for post operator:                 79.614s
  Time for path formula creation:       78.684s
    Actual computation:                 72.709s
Time for strengthen operator:            0.535s
  Time for satisfiability checks:        0.000s
Time for prec operator:                 15.378s
  Time for abstraction:                  6.390s (Max:     0.260s, Count: 292947)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.207s
  Time for BDD entailment checks:        0.152s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 310819, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.388s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.665s
  Time for transition matches:                         1.099s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       439806 (count: 439806, min: 1, max: 1, avg: 1.00) [1 x 439806]

CPA algorithm statistics
------------------------
Number of iterations:            273208
Max size of waitlist:            1539
Average size of waitlist:        557
Number of computed successors:   292958
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         17836
Number of times breaked:         11

Total time for CPA algorithm:       850.692s (Max:   829.197s)
  Time for choose from waitlist:      0.496s
  Time for precision adjustment:     22.356s
  Time for transfer relation:       237.924s
  Time for merge operator:           37.807s
  Time for stop operator:           547.849s
  Time for adding to reached set:     1.456s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                4150 (count: 11, min: 50, max: 759, avg: 377.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.035s
  Counterexample analysis:                7.392s (Max:     2.202s, Calls: 11)
    Refinement sat check:                 4.842s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.005s
  Building the counterexample trace:                   7.392s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.014s
  ARG update:                                          0.000s

Length of refined path (in blocks):                    1596 (count: 11, min: 11, max: 714, avg: 145.09)
Number of affected states:                              293 (count: 11, min: 4, max: 47, avg: 26.64)
Length (states) of path with itp 'true':               1292 (count: 11, min: 4, max: 670, avg: 117.45)
Length (states) of path with itp non-trivial itp:       293 (count: 11, min: 4, max: 47, avg: 26.64)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 11, min: 0, max: 10, avg: 1.09)
Equal non-trivial interpolants along paths:             270 (count: 11, min: 3, max: 46, avg: 24.55)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 13569
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 6518.09
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     858.793s
Time for refinements:                 8.100s
Average time for refinement:          0.736s
Max time for refinement:              2.482s

Code Coverage
-----------------------------
  Function coverage:      0.316
  Visited lines:          12671
  Total lines:            22389
  Line coverage:          0.566
  Visited conditions:     1088
  Total conditions:       3238
  Condition coverage:     0.336

CPAchecker general statistics
-----------------------------
Number of program locations:     10399
Number of CFA edges:             15025
Number of relevant variables:    3909
Number of functions:             626
Number of loops:                 173
Size of reached set:             203435
  Number of reached locations:   3139 (30%)
    Avg states per location:     64
    Max states per location:     6008 (at node N17852)
  Number of reached functions:   198 (32%)
  Number of partitions:          115726
    Avg size of partitions:      1
    Max size of partitions:      2970 (with key [N15553 (before lines 34882-34883), Function write_sgl called from node N15872, stack depth 16 [592b6761], stack [main, eeh_err_detected, notify_ulds, napi_rx_handler, process_responses, fwevtq_handler, do_l2t_write_rpl, send_pending, t4_ofld_send, ofld_send, ofld_xmit, service_ofldq, map_skb, dma_mapping_error, t4_eth_xmit, write_sgl], Init])
  Number of target states:       0
  Size of final wait list        1536

Time for analysis setup:          9.728s
  Time for loading CPAs:          0.768s
  Time for loading parser:        0.563s
  Time for CFA construction:      8.307s
    Time for parsing file(s):     2.296s
    Time for AST to CFA:          3.076s
    Time for CFA sanity check:    0.284s
    Time for post-processing:     2.352s
      Time for var class.:        0.000s
Time for Analysis:              858.793s
CPU time for analysis:          882.360s
Total time for CPAchecker:      868.527s
Total CPU time for CPAchecker:  900.340s

Time for Garbage Collector:       8.109s (in 73 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3516MB (  3353 MiB) max;   1349MB (  1287 MiB) avg;   3934MB (  3752 MiB) peak
Used non-heap memory:             28MB (    27 MiB) max;     28MB (    27 MiB) avg;     29MB (    27 MiB) peak
Used in PS Old Gen pool:         591MB (   564 MiB) max;    401MB (   383 MiB) avg;    591MB (   564 MiB) peak
Allocated heap memory:          4767MB (  4546 MiB) max;   3261MB (  3110 MiB) avg
Allocated non-heap memory:        29MB (    28 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:  14046MB ( 13396 MiB) max;  13631MB ( 12999 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
