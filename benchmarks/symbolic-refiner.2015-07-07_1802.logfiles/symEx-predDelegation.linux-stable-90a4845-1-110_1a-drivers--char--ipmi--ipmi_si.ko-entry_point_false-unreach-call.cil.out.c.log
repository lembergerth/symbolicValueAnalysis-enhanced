scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-validator-v0.6/ALL.prp ../svcomp15/ldv-validator-v0.6/linux-stable-90a4845-1-110_1a-drivers--char--ipmi--ipmi_si.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1800848487_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 14421: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14423: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14425: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14427: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14429: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14431: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14380: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14384: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14375: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14359: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14348: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14350: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14314: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14318: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14309: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14297: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14263: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14254: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13888: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13890: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13894: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13896: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13930: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13858: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13860: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13862: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13853: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6356: Function pointer *(smi_info->io.outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6510: Function pointer *(info->io.outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6541: Function pointer *(info->io.outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13980: Function pointer *(bt->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11782: Function pointer *(kcs->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11794: Function pointer *(kcs->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12843: Function pointer *(smic->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12831: Function pointer *(smic->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12819: Function pointer *(smic->io->outputb) with type void (*)(struct si_sm_io *, unsigned int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 12783: Ignoring function call through function pointer *(smic->io->inputb): tmp = (*(smic->io->inputb))(smic->io, 2U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12795: Ignoring function call through function pointer *(smic->io->inputb): tmp = (*(smic->io->inputb))(smic->io, 1U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12807: Ignoring function call through function pointer *(smic->io->inputb): tmp = (*(smic->io->inputb))(smic->io, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12831: Ignoring function call through function pointer *(smic->io->outputb): (*(smic->io->outputb))(smic->io, 1U, (int)control); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12819: Ignoring function call through function pointer *(smic->io->outputb): (*(smic->io->outputb))(smic->io, 2U, (int)flags); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12843: Ignoring function call through function pointer *(smic->io->outputb): (*(smic->io->outputb))(smic->io, 0U, (int)data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9304: Ignoring function call through function pointer *(new_smi->handlers->size): tmp = (*(new_smi->handlers->size))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9321: Ignoring function call through function pointer *(new_smi->handlers->init_data): new_smi->io_size = (*(new_smi->handlers->init_data))(new_smi->si_sm, &(new_smi->io)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14205: Ignoring function call through function pointer *(bt->io->inputb): status = (*(bt->io->inputb))(bt->io, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13879: Ignoring function call through function pointer *(bt->io->inputb): tmp = (*(bt->io->inputb))(bt->io, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13888: Ignoring function call through function pointer *(bt->io->outputb): (*(bt->io->outputb))(bt->io, 0U, 64); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13890: Ignoring function call through function pointer *(bt->io->outputb): (*(bt->io->outputb))(bt->io, 0U, 8); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13892: Ignoring function call through function pointer *(bt->io->inputb): (*(bt->io->inputb))(bt->io, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5824: Ignoring function call through function pointer *(smi_info->handlers->event): si_sm_result = (*(smi_info->handlers->event))(smi_info->si_sm, (long)time); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from smi_event_handler to bt_event (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6384: Ignoring function call through function pointer *(new_smi->irq_setup): (*(new_smi->irq_setup))(new_smi); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14529: Ignoring function call through function pointer *(bt->io->inputb): tmp = (*(bt->io->inputb))(bt->io, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14533: Ignoring function call through function pointer *(bt->io->inputb): tmp___0 = (*(bt->io->inputb))(bt->io, 2U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13840: Ignoring function call through function pointer *(bt->io->inputb): tmp = (*(bt->io->inputb))(bt->io, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13849: Ignoring function call through function pointer *(bt->io->inputb): tmp___1 = (*(bt->io->inputb))(bt->io, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13853: Ignoring function call through function pointer *(bt->io->outputb): (*(bt->io->outputb))(bt->io, 0U, 64); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13858: Ignoring function call through function pointer *(bt->io->outputb): (*(bt->io->outputb))(bt->io, 0U, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13860: Ignoring function call through function pointer *(bt->io->outputb): (*(bt->io->outputb))(bt->io, 0U, 16); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13862: Ignoring function call through function pointer *(bt->io->outputb): (*(bt->io->outputb))(bt->io, 2U, 128); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Error: Refinement using predicate refinement failed.Try using cpa.value.symbolic.refiner.SymbolicValueAnalysisRefiner (SymbolicPrecisionRefinementStrategy.performRefinement, SEVERE)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                   4255 (count: 3001, min: 0, max: 2, avg: 1.42)
Number of global variables:                            2999 (count: 3001, min: 0, max: 1, avg: 1.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                    8813
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.145s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.099s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 33ms

PredicateCPA statistics
-----------------------
Number of abstractions:            8810 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1923 (22%)
  Because of loop head:            47 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       8810 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   3
  Times result was 'false':        0 (0%)
Number of coverage checks:         917
  BDD entailment checks:           917
Number of SMT sat checks:          3
  trivial:                         3
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          3
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   12430 (81%)

Time for post operator:                  3.402s
  Time for path formula creation:        3.327s
    Actual computation:                  3.103s
Time for strengthen operator:            0.017s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  1.129s
  Time for abstraction:                  0.544s (Max:     0.017s, Count: 8810)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 9734, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.134s
Automaton transfers with branching:                0
Automaton transfer successors:                        16101 (count: 16101, min: 1, max: 1, avg: 1.00) [1 x 16101]

CPA algorithm statistics
------------------------
Number of iterations:            7729
Max size of waitlist:            80
Average size of waitlist:        34
Number of computed successors:   8813
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         917
Number of times breaked:         3

Total time for CPA algorithm:         6.787s (Max:     2.975s)
  Time for choose from waitlist:      0.041s
  Time for precision adjustment:      1.543s
  Time for transfer relation:         4.749s
  Time for merge operator:            0.014s
  Time for stop operator:             0.128s
  Time for adding to reached set:     0.088s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                1074 (count: 3, min: 282, max: 396, avg: 358.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.878s
  Counterexample analysis:                1.588s (Max:     0.621s, Calls: 3)
    Refinement sat check:                 1.168s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.001s
  Building the counterexample trace:                   1.588s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.002s
  Precision update:                                    0.003s
  ARG update:                                          0.000s

Length of refined path (in blocks):                     405 (count: 2, min: 177, max: 228, avg: 202.50)
Number of affected states:                               43 (count: 2, min: 14, max: 29, avg: 21.50)
Length (states) of path with itp 'true':                360 (count: 2, min: 162, max: 198, avg: 180.00)
Length (states) of path with itp non-trivial itp:        43 (count: 2, min: 14, max: 29, avg: 21.50)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              41 (count: 2, min: 13, max: 28, avg: 20.50)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 3003
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 2633.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:       8.577s
Time for refinements:                 1.789s
Average time for refinement:          0.596s
Max time for refinement:              0.703s

Code Coverage
-----------------------------
  Function coverage:      0.289
  Visited lines:          5692
  Total lines:            9088
  Line coverage:          0.626
  Visited conditions:     608
  Total conditions:       2564
  Condition coverage:     0.237

CPAchecker general statistics
-----------------------------
Number of program locations:     5655
Number of CFA edges:             8685
Number of relevant variables:    1153
Number of functions:             235
Number of loops:                 39
Size of reached set:             3001
  Number of reached locations:   1327 (23%)
    Avg states per location:     2
    Max states per location:     18 (at node N132)
  Number of reached functions:   68 (29%)
  Number of partitions:          3001
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        70

Time for analysis setup:          5.736s
  Time for loading CPAs:          0.748s
  Time for loading parser:        0.591s
  Time for CFA construction:      4.322s
    Time for parsing file(s):     1.187s
    Time for AST to CFA:          1.308s
    Time for CFA sanity check:    0.174s
    Time for post-processing:     1.440s
      Time for var class.:        0.000s
Time for Analysis:                8.577s
CPU time for analysis:           13.930s
Total time for CPAchecker:       14.318s
Total CPU time for CPAchecker:   24.510s

Time for Garbage Collector:       0.181s (in 1 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                529MB (   504 MiB) max;    255MB (   243 MiB) avg;    582MB (   555 MiB) peak
Used non-heap memory:             24MB (    23 MiB) max;     19MB (    18 MiB) avg;     25MB (    23 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        26MB (    24 MiB) max;     25MB (    23 MiB) avg
Total process virtual memory:  13675MB ( 13041 MiB) max;  13594MB ( 12964 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
