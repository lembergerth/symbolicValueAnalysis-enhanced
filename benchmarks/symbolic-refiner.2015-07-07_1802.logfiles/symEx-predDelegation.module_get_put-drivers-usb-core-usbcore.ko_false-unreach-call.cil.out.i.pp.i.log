scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.0/ALL.prp ../svcomp15/ldv-linux-3.0/module_get_put-drivers-usb-core-usbcore.ko_false-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_478337230_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 31824: Function pointer *(ops->alloc_coherent) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31879: Function pointer *(ops->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16120: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16023: Function pointer *(ops->map_sg) with type int (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 15895-15896: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16165: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16073: Function pointer *(ops->unmap_sg) with type void (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15945: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8485: Function pointer *(hcd->driver->update_hub_device) with type int (*)(struct usb_hcd *, struct usb_device *, struct usb_tt *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9501: Function pointer *(hcd->driver->update_hub_device) with type int (*)(struct usb_hcd *, struct usb_device *, struct usb_tt *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10418: Function pointer *(hcd->driver->free_dev) with type void (*)(struct usb_hcd *, struct usb_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13848: Function pointer *(hcd->driver->relinquish_port) with type void (*)(struct usb_hcd *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8063: Function pointer *(drv->clear_tt_buffer_complete) with type void (*)(struct usb_hcd *, struct usb_host_endpoint *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 35190: Function pointer *(p->qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46240: Function pointer *(hcd->driver->pci_resume) with type int (*)(struct usb_hcd *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 17190-17192: Function pointer *(hcd->driver->hub_control) with type int (*)(struct usb_hcd *, u16 , u16 , u16 , char *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46063: Function pointer *(hcd->driver->pci_suspend) with type int (*)(struct usb_hcd *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 46100: Function pointer *(hcd->driver->pci_resume) with type int (*)(struct usb_hcd *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18390: Function pointer *(hcd->driver->unmap_urb_for_dma) with type void (*)(struct usb_hcd *, struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 19649-19650: Function pointer *(hcd->driver->alloc_streams) with type int (*)(struct usb_hcd *, struct usb_device *, struct usb_host_endpoint **, unsigned int, unsigned int, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19714: Function pointer *(hcd->driver->free_streams) with type int (*)(struct usb_hcd *, struct usb_device *, struct usb_host_endpoint **, unsigned int, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19486: Function pointer *(hcd->driver->reset_bandwidth) with type void (*)(struct usb_hcd *, struct usb_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19512: Function pointer *(hcd->driver->endpoint_disable) with type void (*)(struct usb_hcd *, struct usb_host_endpoint *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19544: Function pointer *(hcd->driver->endpoint_reset) with type void (*)(struct usb_hcd *, struct usb_host_endpoint *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16465: Function pointer *(mon_ops->urb_complete) with type void (*)(struct usb_bus *, struct urb *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16428: Function pointer *(mon_ops->urb_submit) with type void (*)(struct usb_bus *, struct urb *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 16447: Function pointer *(mon_ops->urb_submit_error) with type void (*)(struct usb_bus *, struct urb *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 31110: Ignoring function call through function pointer *(file->f_op->open): err = (*(file->f_op->open))(inode, file); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16428: Ignoring function call through function pointer *(mon_ops->urb_submit): (*(mon_ops->urb_submit))(bus, urb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 31824: Ignoring function call through function pointer *(ops->alloc_coherent): memory = (*(ops->alloc_coherent))(dev, size, dma_handle, tmp___1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 15895-15896: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, (struct page *)(1152897315351035904UL + (tmp___2 >> 12)), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16196: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from dma_mapping_error to hub_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 18806: Ignoring function call through function pointer *(hcd->driver->urb_dequeue): value = (*(hcd->driver->urb_dequeue))(hcd, urb, status); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 31879: Ignoring function call through function pointer *(ops->free_coherent): (*(ops->free_coherent))(dev, size, vaddr, bus); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15945: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16165: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, (struct dma_attrs *)0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16073: Ignoring function call through function pointer *(ops->unmap_sg): (*(ops->unmap_sg))(dev, sg, nents, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 18390: Ignoring function call through function pointer *(hcd->driver->unmap_urb_for_dma): (*(hcd->driver->unmap_urb_for_dma))(hcd, urb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16465: Ignoring function call through function pointer *(mon_ops->urb_complete): (*(mon_ops->urb_complete))(bus, urb, status); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 18956: Ignoring function call through function pointer *(urb->complete): (*(urb->complete))(urb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from usb_unlink_urb to usb_hcd_unlink_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from set_port_feature to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8485: Ignoring function call through function pointer *(hcd->driver->update_hub_device): ret = (*(hcd->driver->update_hub_device))(hcd, hdev, &(hub->tt), 16U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from hub_activate to usb_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from get_port_status to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from clear_port_feature to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from recursively_mark_NOTATTACHED to recursively_mark_NOTATTACHED (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19479: Ignoring function call through function pointer *(hcd->driver->check_bandwidth): ret = (*(hcd->driver->check_bandwidth))(hcd, udev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from usb_hcd_alloc_bandwidth to hub_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_hcd_alloc_bandwidth to usbdev_release (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_hcd_alloc_bandwidth to usb_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 35190: Ignoring function call through function pointer *(p->qproc): (*(p->qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19450: Ignoring function call through function pointer *(hcd->driver->add_endpoint): ret = (*(hcd->driver->add_endpoint))(hcd, udev, (new_alt->endpoint) + ((unsigned long)i)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from usbdev_remove to destroy_all_async (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_get_string to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19422: Ignoring function call through function pointer *(hcd->driver->drop_endpoint): ret = (*(hcd->driver->drop_endpoint))(hcd, udev, (cur_alt->endpoint) + ((unsigned long)i)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19352: Ignoring function call through function pointer *(hcd->driver->add_endpoint): ret = (*(hcd->driver->add_endpoint))(hcd, udev, (alt->endpoint) + ((unsigned long)j)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19283: Ignoring function call through function pointer *(hcd->driver->drop_endpoint): ret = (*(hcd->driver->drop_endpoint))(hcd, udev, ep); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19301: Ignoring function call through function pointer *(hcd->driver->drop_endpoint): ret = (*(hcd->driver->drop_endpoint))(hcd, udev, ep); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19486: Ignoring function call through function pointer *(hcd->driver->reset_bandwidth): (*(hcd->driver->reset_bandwidth))(hcd, udev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19258: Ignoring function call through function pointer *(hcd->driver->check_bandwidth): (*(hcd->driver->check_bandwidth))(hcd, udev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19228: Ignoring function call through function pointer *(hcd->driver->drop_endpoint): (*(hcd->driver->drop_endpoint))(hcd, udev, ep); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19239: Ignoring function call through function pointer *(hcd->driver->drop_endpoint): (*(hcd->driver->drop_endpoint))(hcd, udev, ep); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from usb_hcd_flush_endpoint to usb_kill_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_hcd_flush_endpoint to unlink1 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19512: Ignoring function call through function pointer *(hcd->driver->endpoint_disable): (*(hcd->driver->endpoint_disable))(hcd, ep); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from usb_set_configuration to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19544: Ignoring function call through function pointer *(hcd->driver->endpoint_reset): (*(hcd->driver->endpoint_reset))(hcd, ep); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 28112: Ignoring function call through function pointer *(udriver->resume): status = (*(udriver->resume))(udev, msg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from hub_quiesce to usb_kill_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10418: Ignoring function call through function pointer *(hcd->driver->free_dev): (*(hcd->driver->free_dev))(hcd, udev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from usb_disconnect to usb_disconnect (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11400: Ignoring function call through function pointer *(hcd->driver->reset_device): status = (*(hcd->driver->reset_device))(hcd, udev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from hub_port_reset to hub_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_port_reset to usbdev_release (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_port_reset to usb_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_port_init to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_set_address to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12420: Ignoring function call through function pointer *(hcd->driver->address_device): retval = (*(hcd->driver->address_device))(hcd, udev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from hub_set_address to hub_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_set_address to usbdev_release (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_set_address to usb_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_get_descriptor to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13163: Ignoring function call through function pointer *(hcd->driver->update_device): (*(hcd->driver->update_device))(hcd, udev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from hub_port_init to hub_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_port_init to usbdev_release (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_port_init to usb_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_reset_and_verify_device to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_set_interface to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_clear_halt to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_get_status to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from finish_port_resume to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19910: Ignoring function call through function pointer *(hcd->driver->bus_resume): status = (*(hcd->driver->bus_resume))(hcd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from usb_dev_thaw to usb_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_dev_restore to usb_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 46240: Ignoring function call through function pointer *(hcd->driver->pci_resume): retval = (*(hcd->driver->pci_resume))(hcd, (bool )(event == 64)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 26766: Ignoring function call through function pointer *(udriver->disconnect): (*(udriver->disconnect))(udev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from usb_unbind_device to usb_dev_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15313: Ignoring function call through function pointer *(drv___0->post_reset): rebind = (*(drv___0->post_reset))(cintf___0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from usb_reset_device to usb_unbind_device (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_runtime_resume to usb_resume_both (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 27006: Ignoring function call through function pointer *(driver->disconnect): (*(driver->disconnect))(intf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from usb_unbind_interface to usb_dev_complete (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_unbind_interface to __usb_queue_reset_device (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_irq to usb_submit_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_clear_tt_buffer to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8063: Ignoring function call through function pointer *(drv->clear_tt_buffer_complete): (*(drv->clear_tt_buffer_complete))(clear->hcd, clear->ep); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from destroy_async_on_interface to destroy_async (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 17323: Ignoring function call through function pointer *(hcd->driver->hub_status_data): length = (*(hcd->driver->hub_status_data))(hcd, (char *)(&buffer)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from usb_hcd_poll_rh_status to hub_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_hcd_poll_rh_status to usbdev_release (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_hcd_poll_rh_status to usb_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_hcd_poll_rh_status to usb_hcd_giveback_urb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 28150: Ignoring function call through function pointer *(driver->suspend): status = (*(driver->suspend))(intf, msg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from usb_suspend_interface to generic_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_port_suspend to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 19813: Ignoring function call through function pointer *(hcd->driver->bus_suspend): status = (*(hcd->driver->bus_suspend))(hcd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from hcd_bus_suspend to usb_unbind_device (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hcd_bus_suspend to usb_dev_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_runtime_suspend to usb_suspend_both (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 46063: Ignoring function call through function pointer *(hcd->driver->pci_suspend): retval = (*(hcd->driver->pci_suspend))(hcd, (bool )((int)do_wakeup)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 46100: Ignoring function call through function pointer *(hcd->driver->pci_resume): (*(hcd->driver->pci_resume))(hcd, (bool )0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 26923: Ignoring function call through function pointer *(driver->probe): error = (*(driver->probe))(intf, id); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from usb_probe_interface to hub_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_probe_interface to usbdev_release (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_probe_interface to usb_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_dev_freeze to usb_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 26739: Ignoring function call through function pointer *(udriver->probe): error = (*(udriver->probe))(udev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from usb_probe_device to usb_unbind_device (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_probe_device to usb_dev_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_probe_device to usb_probe_device (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_dev_poweroff to usb_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from hub_events to usb_reset_device (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from get_hub_status to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from clear_hub_feature to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5364: Ignoring function call through function pointer *(usb_hcd->driver->alloc_dev): tmp___3 = (*(usb_hcd->driver->alloc_dev))(usb_hcd, dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from usb_alloc_dev to hub_probe (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_alloc_dev to usbdev_release (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_alloc_dev to usb_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from usb_enumerate_device_otg to usb_control_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13823: Ignoring function call through function pointer *(hcd->driver->port_handed_over): tmp___7 = (*(hcd->driver->port_handed_over))(hcd, port1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Error: line 13823: Unrecognized C code (Impossible structure assignment due to incompatible types: assignment of UnaliasedLocation{variable=hub_port_connect_change::port1} with type signed int to UnaliasedLocation{variable=hub_suspend::msg} with type struct pm_message): tmp___7 = hub_suspend(hcd, port1); (line was originally pointer call(hub_suspend) tmp___7 = (*((hcd->driver)->port_handed_over))(hcd, port1);) (AssignmentHandler.makeDestructiveAssignment, SEVERE)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                      0 (count: 1365622, min: 0, max: 0, avg: 0.00)
Number of global variables:                               0 (count: 1365622, min: 0, max: 0, avg: 0.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 1550397
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                2.533s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     2.684s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 1813ms

PredicateCPA statistics
-----------------------
Number of abstractions:            1550397 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  272669 (18%)
  Because of loop head:            23337 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1550397 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         184776
  BDD entailment checks:           184776
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          0

Number of path formula cache hits:   480994 (24%)

Time for post operator:                486.754s
  Time for path formula creation:      483.697s
    Actual computation:                401.717s
Time for strengthen operator:            1.859s
Time for prec operator:                111.459s
  Time for abstraction:                 23.593s (Max:     1.295s, Count: 1550397)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.799s
  Time for BDD entailment checks:        0.497s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 1735174, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             1.437s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.026s
  Time for transition matches:                         3.852s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      2168673 (count: 2168673, min: 1, max: 1, avg: 1.00) [1 x 2168673]

CPA algorithm statistics
------------------------
Number of iterations:            1365404
Max size of waitlist:            272
Average size of waitlist:        205
Number of computed successors:   1550397
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         184776
Number of times breaked:         0

Total time for CPA algorithm:       681.579s (Max:   681.579s)
  Time for choose from waitlist:      1.677s
  Time for precision adjustment:    124.597s
  Time for transfer relation:       535.290s
  Time for merge operator:            0.486s
  Time for stop operator:             4.016s
  Time for adding to reached set:     4.812s

Predicate-Abstraction Refiner statistics
----------------------------------------
  Predicate creation:                                  0.000s
  Precision update:                                    0.000s
  ARG update:                                          0.000s

Length of refined path (in blocks):                       0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of affected states:                                0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         0 (count: 0, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 0, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 0, min: 0, max: 0, avg: 0.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.589
  Visited lines:          16128
  Total lines:            26572
  Line coverage:          0.607
  Visited conditions:     3534
  Total conditions:       6114
  Condition coverage:     0.578

CPAchecker general statistics
-----------------------------
Number of program locations:     16072
Number of CFA edges:             23181
Number of relevant variables:    4488
Number of functions:             699
Number of loops:                 162
Size of reached set:             1365622
  Size of final wait list        218

Time for analysis setup:         10.295s
  Time for loading CPAs:          0.966s
  Time for loading parser:        0.556s
  Time for CFA construction:      8.697s
    Time for parsing file(s):     2.089s
    Time for AST to CFA:          3.333s
    Time for CFA sanity check:    0.308s
    Time for post-processing:     2.690s
      Time for var class.:        0.000s
Time for Analysis:              681.579s
CPU time for analysis:          772.750s
Total time for CPAchecker:      691.879s
Total CPU time for CPAchecker:  791.920s

Time for Garbage Collector:      79.006s (in 39 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               4867MB (  4641 MiB) max;   2813MB (  2683 MiB) avg;   6702MB (  6392 MiB) peak
Used non-heap memory:             28MB (    27 MiB) max;     25MB (    24 MiB) avg;     28MB (    27 MiB) peak
Used in PS Old Gen pool:        2756MB (  2628 MiB) max;   1316MB (  1255 MiB) avg;   2904MB (  2769 MiB) peak
Allocated heap memory:          6659MB (  6351 MiB) max;   5056MB (  4822 MiB) avg
Allocated non-heap memory:        52MB (    49 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:  13613MB ( 12982 MiB) max;  13603MB ( 12972 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
