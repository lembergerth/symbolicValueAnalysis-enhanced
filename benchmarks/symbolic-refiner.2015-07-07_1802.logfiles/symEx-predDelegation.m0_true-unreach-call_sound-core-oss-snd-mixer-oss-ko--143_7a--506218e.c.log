scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-commit-tester/ALL.prp ../svcomp15/ldv-commit-tester/m0_true-unreach-call_sound-core-oss-snd-mixer-oss-ko--143_7a--506218e.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_2061836109_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 3503-3505: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3888-3889: Function pointer *((void (*)(void *, struct module *, unsigned long))it_func) with type void (*)(void *, struct module *, unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 7956: Ignoring function call through function pointer *(chn->private_free): (*(chn->private_free))(chn); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6904: Ignoring function call through function pointer *(kcontrol->info): err = (*(kcontrol->info))(kcontrol, info); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6623: Ignoring function call through function pointer *(kctl->info): err = (*(kctl->info))(kctl, uinfo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6623: Ignoring call via function pointer snd_mixer_oss_get_recsrc2 for which no suitable target was found in line: err = snd_mixer_oss_get_recsrc2(kctl, uinfo); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from snd_mixer_oss_get_recsrc2 to snd_mixer_oss_get_recsrc2 (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 3888-3889: Ignoring call via function pointer trace_module_get::it_func for which no suitable target was found in line: (*((void (*)(void *, struct module *, unsigned long))it_func))(__data, mod, ip); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 3888-3889: Ignoring function call through function pointer *((void (*)(void *, struct module *, unsigned long))it_func): (*((void (*)(void *, struct module *, unsigned long))it_func))(__data, mod, ip); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6632: Ignoring function call through function pointer *(kctl->get): err = (*(kctl->get))(kctl, uctl); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6632: Ignoring call via function pointer snd_mixer_oss_get_recsrc2 for which no suitable target was found in line: err = snd_mixer_oss_get_recsrc2(kctl, uctl); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7181: Ignoring function call through function pointer *(kctl->info): tmp___1 = (*(kctl->info))(kctl, uinfo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7228: Ignoring function call through function pointer *(kctl->info): tmp___4 = (*(kctl->info))(kctl, uinfo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6974: Ignoring function call through function pointer *(rslot->private_free): (*(rslot->private_free))(rslot); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4958: Ignoring function call through function pointer *(pslot->get_volume): result = (*(pslot->get_volume))(fmixer, pslot, &left, &right); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5951: Ignoring function call through function pointer *(kctl->info): tmp___1 = (*(kctl->info))(kctl, uinfo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5960: Ignoring function call through function pointer *(kctl->get): tmp___2 = (*(kctl->get))(kctl, uctl); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6054: Ignoring function call through function pointer *(kctl->info): tmp___1 = (*(kctl->info))(kctl, uinfo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6063: Ignoring function call through function pointer *(kctl->get): tmp___2 = (*(kctl->get))(kctl, uctl); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5080: Ignoring function call through function pointer *(pslot->put_volume): result = (*(pslot->put_volume))(fmixer, pslot, left, right); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6214: Ignoring function call through function pointer *(kctl->info): tmp___1 = (*(kctl->info))(kctl, uinfo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6241: Ignoring function call through function pointer *(kctl->put): res = (*(kctl->put))(kctl, uctl); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6321: Ignoring function call through function pointer *(kctl->info): tmp___1 = (*(kctl->info))(kctl, uinfo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6351: Ignoring function call through function pointer *(kctl->put): res = (*(kctl->put))(kctl, uctl); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4771: Ignoring function call through function pointer *(pslot->get_recsrc): (*(pslot->get_recsrc))(fmixer, pslot, &active); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4746: Ignoring function call through function pointer *(mixer->get_recsrc): err = (*(mixer->get_recsrc))(fmixer, (unsigned int *)(&result)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4838: Ignoring function call through function pointer *(mixer->put_recsrc): (*(mixer->put_recsrc))(fmixer, (unsigned int)tmp); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6758: Ignoring function call through function pointer *(kctl->info): err = (*(kctl->info))(kctl, uinfo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6842: Ignoring function call through function pointer *(kctl->put): err = (*(kctl->put))(kctl, uctl); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4840: Ignoring function call through function pointer *(mixer->get_recsrc): (*(mixer->get_recsrc))(fmixer, (unsigned int *)(&result)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4891: Ignoring function call through function pointer *(pslot->get_recsrc): (*(pslot->get_recsrc))(fmixer, pslot, &active); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4860: Ignoring function call through function pointer *(pslot->put_recsrc): (*(pslot->put_recsrc))(fmixer, pslot, active); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 512938 (count: 158661, min: 0, max: 4, avg: 3.23)
Number of global variables:                          317318 (count: 158661, min: 0, max: 2, avg: 2.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  181614
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                1.061s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.832s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 803ms

PredicateCPA statistics
-----------------------
Number of abstractions:            181609 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  25423 (14%)
  Because of loop head:            4185 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       181609 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   5
  Times result was 'false':        0 (0%)
Number of coverage checks:         19875
  BDD entailment checks:           19875
Number of SMT sat checks:          5
  trivial:                         5
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          8
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   164599 (58%)

Time for post operator:                 29.038s
  Time for path formula creation:       27.501s
    Actual computation:                 24.324s
Time for strengthen operator:            0.764s
  Time for satisfiability checks:        0.001s
Time for prec operator:                  9.108s
  Time for abstraction:                  4.732s (Max:     0.396s, Count: 181609)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.423s
  Time for BDD entailment checks:        0.292s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 201498, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.762s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.810s
  Time for transition matches:                         1.837s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       260085 (count: 260085, min: 1, max: 1, avg: 1.00) [1 x 260085]

CPA algorithm statistics
------------------------
Number of iterations:            161640
Max size of waitlist:            75
Average size of waitlist:        45
Number of computed successors:   181614
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         19875
Number of times breaked:         5

Total time for CPA algorithm:        67.021s (Max:    62.117s)
  Time for choose from waitlist:      0.703s
  Time for precision adjustment:     14.028s
  Time for transfer relation:        43.301s
  Time for merge operator:            0.925s
  Time for stop operator:             2.735s
  Time for adding to reached set:     1.010s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                 961 (count: 5, min: 69, max: 278, avg: 192.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  12.324s
  Counterexample analysis:               12.149s (Max:     2.804s, Calls: 5)
    Refinement sat check:                10.241s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.002s
  Building the counterexample trace:                  12.149s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.015s
  ARG update:                                          0.000s

Length of refined path (in blocks):                     660 (count: 5, min: 22, max: 274, avg: 132.00)
Number of affected states:                              334 (count: 5, min: 1, max: 269, avg: 66.80)
Length (states) of path with itp 'true':                321 (count: 5, min: 4, max: 256, avg: 64.20)
Length (states) of path with itp non-trivial itp:       334 (count: 5, min: 1, max: 269, avg: 66.80)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 5, min: 0, max: 2, avg: 0.40)
Equal non-trivial interpolants along paths:             327 (count: 5, min: 0, max: 266, avg: 65.40)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 1199
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 616.80
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      79.377s
Time for refinements:                12.355s
Average time for refinement:          2.471s
Max time for refinement:              2.867s

Code Coverage
-----------------------------
  Function coverage:      0.825
  Visited lines:          5291
  Total lines:            5585
  Line coverage:          0.947
  Visited conditions:     668
  Total conditions:       800
  Condition coverage:     0.835

CPAchecker general statistics
-----------------------------
Number of program locations:     1946
Number of CFA edges:             2745
Number of relevant variables:    521
Number of functions:             103
Number of loops:                 22
Size of reached set:             158661
  Number of reached locations:   1637 (84%)
    Avg states per location:     96
    Max states per location:     3593 (at node N3208)
  Number of reached functions:   85 (83%)
  Number of partitions:          88979
    Avg size of partitions:      1
    Max size of partitions:      34 (with key [N2093 (before line 6695), Function snd_mixer_oss_get_recsrc2 called from node N3301, stack depth 8 [c8d310f], stack [main, alsa_mixer_oss_init, snd_mixer_oss_notify_handler, snd_mixer_oss_build, snd_mixer_oss_build_input, snd_mixer_oss_build_test_all, snd_mixer_oss_build_test, snd_mixer_oss_get_recsrc2], Init])
  Number of target states:       0

Time for analysis setup:          4.297s
  Time for loading CPAs:          0.712s
  Time for loading parser:        0.636s
  Time for CFA construction:      2.815s
    Time for parsing file(s):     0.826s
    Time for AST to CFA:          0.936s
    Time for CFA sanity check:    0.167s
    Time for post-processing:     0.707s
      Time for var class.:        0.000s
Time for Analysis:               79.377s
CPU time for analysis:           94.710s
Total time for CPAchecker:       83.680s
Total CPU time for CPAchecker:  102.020s

Time for Garbage Collector:       1.993s (in 7 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               2335MB (  2227 MiB) max;    633MB (   603 MiB) avg;   2426MB (  2313 MiB) peak
Used non-heap memory:             26MB (    25 MiB) max;     24MB (    23 MiB) avg;     26MB (    25 MiB) peak
Used in PS Old Gen pool:         144MB (   137 MiB) max;     39MB (    37 MiB) avg;    144MB (   137 MiB) peak
Allocated heap memory:          3689MB (  3518 MiB) max;   2578MB (  2458 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:  14090MB ( 13437 MiB) max;  13910MB ( 13266 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
