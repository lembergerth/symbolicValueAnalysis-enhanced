scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/205_9a_array_safes_linux-3.16-rc1.tar.xz-205_9a-drivers--net--caif--caif_hsi.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-276875944_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 10280: Function pointer *get_ops with type struct cfhsi_ops * (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7095: Function pointer *(cfhsi->ops->cfhsi_rx) with type int (*)(u8 *, int, struct cfhsi_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8229: Function pointer *(cfhsi->ops->cfhsi_rx) with type int (*)(u8 *, int, struct cfhsi_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7452: Function pointer *(cfhsi->ops->cfhsi_tx) with type int (*)(u8 *, int, struct cfhsi_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7543: Function pointer *(cfhsi->cfdev.flowctrl) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8794: Function pointer *(cfhsi->ops->cfhsi_rx) with type int (*)(u8 *, int, struct cfhsi_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8887: Function pointer *(cfhsi->ops->cfhsi_tx) with type int (*)(u8 *, int, struct cfhsi_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9569: Function pointer *(cfhsi->ops->cfhsi_tx) with type int (*)(u8 *, int, struct cfhsi_ops *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9489: Function pointer *(cfhsi->cfdev.flowctrl) with type void (*)(struct net_device *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 9489: Ignoring function call through function pointer *(cfhsi->cfdev.flowctrl): (*(cfhsi->cfdev.flowctrl))(cfhsi->ndev, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9569: Ignoring function call through function pointer *(cfhsi->ops->cfhsi_tx): res = (*(cfhsi->ops->cfhsi_tx))(cfhsi->tx_buf, len, cfhsi->ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7452: Ignoring function call through function pointer *(cfhsi->ops->cfhsi_tx): res = (*(cfhsi->ops->cfhsi_tx))(cfhsi->tx_buf, len, cfhsi->ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9853: Ignoring function call through function pointer *(cfhsi->ops->cfhsi_up): res = (*(cfhsi->ops->cfhsi_up))(cfhsi->ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9923: Ignoring function call through function pointer *(cfhsi->ops->cfhsi_rx_cancel): (*(cfhsi->ops->cfhsi_rx_cancel))(cfhsi->ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from cfhsi_close to cfhsi_close (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from cfhsi_close to cfhsi_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9935: Ignoring function call through function pointer *(cfhsi->ops->cfhsi_down): (*(cfhsi->ops->cfhsi_down))(cfhsi->ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from cfhsi_open to cfhsi_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7070: Ignoring function call through function pointer *(cfhsi->ops->cfhsi_fifo_occupancy): ret = (*(cfhsi->ops->cfhsi_fifo_occupancy))(cfhsi->ops, &fifo_occupancy); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7095: Ignoring function call through function pointer *(cfhsi->ops->cfhsi_rx): ret = (*(cfhsi->ops->cfhsi_rx))((u8 *)(&buffer), (int)fifo_occupancy, cfhsi->ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9880: Ignoring function call through function pointer *(cfhsi->ops->cfhsi_down): (*(cfhsi->ops->cfhsi_down))(cfhsi->ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from cfhsi_open to cfhsi_close (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10448: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8229: Ignoring function call through function pointer *(cfhsi->ops->cfhsi_rx): res = (*(cfhsi->ops->cfhsi_rx))(rx_ptr, rx_len, cfhsi->ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7543: Ignoring function call through function pointer *(cfhsi->cfdev.flowctrl): (*(cfhsi->cfdev.flowctrl))(cfhsi->ndev, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8997: Ignoring function call through function pointer *(cfhsi->ops->cfhsi_wake_down): (*(cfhsi->ops->cfhsi_wake_down))(cfhsi->ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9082: Ignoring function call through function pointer *(cfhsi->ops->cfhsi_get_peer_wake): tmp___4 = (*(cfhsi->ops->cfhsi_get_peer_wake))(cfhsi->ops, &ca_wake); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9112: Ignoring function call through function pointer *(cfhsi->ops->cfhsi_fifo_occupancy): tmp___6 = (*(cfhsi->ops->cfhsi_fifo_occupancy))(cfhsi->ops, &fifo_occupancy); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9198: Ignoring function call through function pointer *(cfhsi->ops->cfhsi_rx_cancel): (*(cfhsi->ops->cfhsi_rx_cancel))(cfhsi->ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8535: Ignoring function call through function pointer *(cfhsi->ops->cfhsi_wake_up): (*(cfhsi->ops->cfhsi_wake_up))(cfhsi->ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8670: Ignoring function call through function pointer *(cfhsi->ops->cfhsi_fifo_occupancy): tmp___7 = (*(cfhsi->ops->cfhsi_fifo_occupancy))(cfhsi->ops, &fifo_occupancy); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8708: Ignoring function call through function pointer *(cfhsi->ops->cfhsi_get_peer_wake): tmp___10 = (*(cfhsi->ops->cfhsi_get_peer_wake))(cfhsi->ops, &ca_wake); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8794: Ignoring function call through function pointer *(cfhsi->ops->cfhsi_rx): res = (*(cfhsi->ops->cfhsi_rx))(cfhsi->rx_ptr, cfhsi->rx_len, cfhsi->ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8887: Ignoring function call through function pointer *(cfhsi->ops->cfhsi_tx): res = (*(cfhsi->ops->cfhsi_tx))(cfhsi->tx_buf, len, cfhsi->ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8738: Ignoring function call through function pointer *(cfhsi->ops->cfhsi_wake_down): (*(cfhsi->ops->cfhsi_wake_down))(cfhsi->ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8637: Ignoring function call through function pointer *(cfhsi->ops->cfhsi_wake_down): (*(cfhsi->ops->cfhsi_wake_down))(cfhsi->ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10512: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                2289299 (count: 2289301, min: 0, max: 1, avg: 1.00)
Number of global variables:                         2289299 (count: 2289301, min: 0, max: 1, avg: 1.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 2635742
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                6.230s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     5.246s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 3874ms

PredicateCPA statistics
-----------------------
Number of abstractions:            2635741 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  532207 (20%)
  Because of loop head:            133823 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       2635741 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   1
  Times result was 'false':        0 (0%)
Number of coverage checks:         269828
  BDD entailment checks:           269828
Number of SMT sat checks:          1
  trivial:                         1
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          4
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   459864 (15%)

Time for post operator:                354.491s
  Time for path formula creation:      345.645s
    Actual computation:                304.891s
Time for strengthen operator:            4.100s
  Time for satisfiability checks:        0.000s
Time for prec operator:                101.825s
  Time for abstraction:                 31.367s (Max:     2.098s, Count: 2635741)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 1.781s
  Time for BDD entailment checks:        1.114s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 2905575, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             3.494s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 20.356s
  Time for transition matches:                         8.324s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      3512567 (count: 3512567, min: 1, max: 1, avg: 1.00) [1 x 3512567]

CPA algorithm statistics
------------------------
Number of iterations:            2364872
Max size of waitlist:            1199
Average size of waitlist:        594
Number of computed successors:   2635742
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         269828
Number of times breaked:         1

Total time for CPA algorithm:       721.985s (Max:   694.571s)
  Time for choose from waitlist:      3.314s
  Time for precision adjustment:    130.025s
  Time for transfer relation:       449.085s
  Time for merge operator:           28.638s
  Time for stop operator:            81.273s
  Time for adding to reached set:     8.459s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  78 (count: 1, min: 78, max: 78, avg: 78.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.854s
  Counterexample analysis:                0.057s (Max:     0.057s, Calls: 1)
    Refinement sat check:                 0.036s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.057s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.003s
  Precision update:                                    0.004s
  ARG update:                                          0.000s

Length of refined path (in blocks):                      74 (count: 1, min: 74, max: 74, avg: 74.00)
Number of affected states:                               34 (count: 1, min: 34, max: 34, avg: 34.00)
Length (states) of path with itp 'true':                 39 (count: 1, min: 39, max: 39, avg: 39.00)
Length (states) of path with itp non-trivial itp:        34 (count: 1, min: 34, max: 34, avg: 34.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 1, min: 2, max: 2, avg: 2.00)
Equal non-trivial interpolants along paths:              31 (count: 1, min: 31, max: 31, avg: 31.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 76615
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 76615.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     722.930s
Time for refinements:                 0.945s
Average time for refinement:          0.945s
Max time for refinement:              0.945s

Code Coverage
-----------------------------
  Function coverage:      0.208
  Visited lines:          5902
  Total lines:            7938
  Line coverage:          0.744
  Visited conditions:     116
  Total conditions:       750
  Condition coverage:     0.155

CPAchecker general statistics
-----------------------------
Number of program locations:     2244
Number of CFA edges:             3229
Number of relevant variables:    636
Number of functions:             130
Number of loops:                 24
Size of reached set:             2289301
  Size of final wait list        1039

Time for analysis setup:          4.321s
  Time for loading CPAs:          0.588s
  Time for loading parser:        0.573s
  Time for CFA construction:      3.087s
    Time for parsing file(s):     1.141s
    Time for AST to CFA:          0.979s
    Time for CFA sanity check:    0.147s
    Time for post-processing:     0.686s
      Time for var class.:        0.000s
Time for Analysis:              722.930s
CPU time for analysis:          892.800s
Total time for CPAchecker:      727.257s
Total CPU time for CPAchecker:  900.380s

Time for Garbage Collector:     155.139s (in 55 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               6310MB (  6018 MiB) max;   3338MB (  3183 MiB) avg;   7959MB (  7590 MiB) peak
Used non-heap memory:             27MB (    26 MiB) max;     25MB (    24 MiB) avg;     28MB (    26 MiB) peak
Used in PS Old Gen pool:        4055MB (  3867 MiB) max;   2023MB (  1929 MiB) avg;   4055MB (  3867 MiB) peak
Allocated heap memory:          8563MB (  8167 MiB) max;   5771MB (  5504 MiB) avg
Allocated non-heap memory:        51MB (    49 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  13728MB ( 13092 MiB) max;  13650MB ( 13018 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
