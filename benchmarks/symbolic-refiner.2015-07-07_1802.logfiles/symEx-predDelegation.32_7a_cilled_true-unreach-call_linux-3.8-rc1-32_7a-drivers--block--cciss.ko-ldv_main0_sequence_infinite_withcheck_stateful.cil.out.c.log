scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--cciss.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1784815491_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6479: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6527: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6328: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6235-6236: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6370: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6282: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 18666: Ignoring function call through function pointer *(h->access.command_completed): tmp = (*(h->access.command_completed))(h); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 18770: Ignoring function call through function pointer *(h->access.command_completed): tmp = (*(h->access.command_completed))(h); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6282: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10927: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6479: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6527: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 6235-6236: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544UL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17812: Ignoring function call through function pointer *(h->access.fifo_full): tmp = (*(h->access.fifo_full))(h); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17827: Ignoring function call through function pointer *(h->access.submit_command): (*(h->access.submit_command))(h, c); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 22354: Ignoring function call through function pointer *(h->access.set_intr_mask): (*(h->access.set_intr_mask))(h, 0UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6328: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, page, offset, size, dir, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6370: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 18691: Ignoring function call through function pointer *(h->access.intr_pending): tmp = (*(h->access.intr_pending))(h); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 18678: Ignoring function call through function pointer *(h->access.intr_pending): tmp = (*(h->access.intr_pending))(h); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 22093: Ignoring function call through function pointer *(h->access.set_intr_mask): (*(h->access.set_intr_mask))(h, 0UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 22240: Ignoring function call through function pointer *(h->access.set_intr_mask): (*(h->access.set_intr_mask))(h, 1UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 22175: Ignoring function call through function pointer *(h->access.set_intr_mask): (*(h->access.set_intr_mask))(h, 0UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 22207: Ignoring function call through function pointer *(h->access.set_intr_mask): (*(h->access.set_intr_mask))(h, 1UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 22211: Ignoring function call through function pointer *(h->access.set_intr_mask): (*(h->access.set_intr_mask))(h, 0UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5841: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 519792 (count: 86634, min: 0, max: 6, avg: 6.00)
Number of global variables:                          519792 (count: 86634, min: 0, max: 6, avg: 6.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  442721
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                1.718s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.990s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 602ms

PredicateCPA statistics
-----------------------
Number of abstractions:            442715 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  92113 (21%)
  Because of loop head:            3299 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       442715 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   6
  Times result was 'false':        0 (0%)
Number of coverage checks:         50353
  BDD entailment checks:           50353
Number of SMT sat checks:          6
  trivial:                         6
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          7
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   711799 (88%)

Time for post operator:                 66.638s
  Time for path formula creation:       65.536s
    Actual computation:                 60.263s
Time for strengthen operator:            0.674s
  Time for satisfiability checks:        0.000s
Time for prec operator:                 20.069s
  Time for abstraction:                  8.832s (Max:     0.311s, Count: 442715)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.382s
  Time for BDD entailment checks:        0.267s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 493082, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.489s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.224s
  Time for transition matches:                         1.351s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       634847 (count: 634847, min: 1, max: 1, avg: 1.00) [1 x 634847]

CPA algorithm statistics
------------------------
Number of iterations:            392262
Max size of waitlist:            61
Average size of waitlist:        36
Number of computed successors:   442721
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         50353
Number of times breaked:         6

Total time for CPA algorithm:       116.599s (Max:    30.880s)
  Time for choose from waitlist:      0.545s
  Time for precision adjustment:     25.175s
  Time for transfer relation:        84.566s
  Time for merge operator:            0.169s
  Time for stop operator:             1.573s
  Time for adding to reached set:     1.421s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                 926 (count: 6, min: 80, max: 240, avg: 154.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  61.810s
  Counterexample analysis:               59.768s (Max:    10.359s, Calls: 6)
    Refinement sat check:                56.236s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.002s
  Building the counterexample trace:                  59.768s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.023s
  ARG update:                                          0.000s

Length of refined path (in blocks):                     902 (count: 6, min: 76, max: 236, avg: 150.33)
Number of affected states:                              872 (count: 6, min: 71, max: 231, avg: 145.33)
Length (states) of path with itp 'true':                 24 (count: 6, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:       872 (count: 6, min: 71, max: 231, avg: 145.33)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             866 (count: 6, min: 70, max: 230, avg: 144.33)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 86633
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 50956.83
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     178.536s
Time for refinements:                61.935s
Average time for refinement:         10.322s
Max time for refinement:             10.861s

Code Coverage
-----------------------------
  Function coverage:      0.780
  Visited lines:          13505
  Total lines:            14548
  Line coverage:          0.928
  Visited conditions:     1868
  Total conditions:       2204
  Condition coverage:     0.848

CPAchecker general statistics
-----------------------------
Number of program locations:     6437
Number of CFA edges:             8977
Number of relevant variables:    2122
Number of functions:             354
Number of loops:                 81
Size of reached set:             86634
  Number of reached locations:   5432 (84%)
    Avg states per location:     15
    Max states per location:     1895 (at node N9414)
  Number of reached functions:   276 (78%)
  Number of partitions:          86634
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          9.437s
  Time for loading CPAs:          0.742s
  Time for loading parser:        0.660s
  Time for CFA construction:      7.939s
    Time for parsing file(s):     1.846s
    Time for AST to CFA:          3.513s
    Time for CFA sanity check:    0.467s
    Time for post-processing:     1.830s
      Time for var class.:        0.000s
Time for Analysis:              178.536s
CPU time for analysis:          196.580s
Total time for CPAchecker:      187.979s
Total CPU time for CPAchecker:  214.420s

Time for Garbage Collector:       2.234s (in 10 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3533MB (  3370 MiB) max;   1779MB (  1697 MiB) avg;   3710MB (  3538 MiB) peak
Used non-heap memory:             28MB (    27 MiB) max;     26MB (    25 MiB) avg;     29MB (    27 MiB) peak
Used in PS Old Gen pool:         260MB (   248 MiB) max;     78MB (    75 MiB) avg;    260MB (   248 MiB) peak
Allocated heap memory:          4791MB (  4570 MiB) max;   4414MB (  4210 MiB) avg
Allocated non-heap memory:        29MB (    28 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:  14220MB ( 13561 MiB) max;  13924MB ( 13279 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
