scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -timelimit 900s -stats -spec ../svcomp15/bitvector/ALL.prp ../svcomp15/bitvector/byte_add_1_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1625292213_tempdir
The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                  30595 (count: 1562, min: 0, max: 22, avg: 19.59)
Number of global variables:                               0 (count: 1562, min: 0, max: 0, avg: 0.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                   58313
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.319s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.573s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 5
Most constraints before refinement in state: 6
Constraints after refinement in state: 22087
Constraints before refinement in state: 22464
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 164ms

PredicateCPA statistics
-----------------------
Number of abstractions:            58305 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  263 (0%)
  Because of loop head:            5159 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       58305 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   8
  Times result was 'false':        0 (0%)
Number of coverage checks:         7201
  BDD entailment checks:           7201
Number of SMT sat checks:          8
  trivial:                         8
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          60
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   30819 (41%)

Time for post operator:                  7.523s
  Time for path formula creation:        7.292s
    Actual computation:                  6.840s
Time for strengthen operator:            0.102s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  2.146s
  Time for abstraction:                  1.029s (Max:     0.153s, Count: 58305)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.122s
  Time for BDD entailment checks:        0.103s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 65575, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.073s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.470s
Automaton transfers with branching:                0
Automaton transfer successors:                        83226 (count: 83226, min: 1, max: 1, avg: 1.00) [1 x 83226]

CPA algorithm statistics
------------------------
Number of iterations:            50993
Max size of waitlist:            31
Average size of waitlist:        7
Number of computed successors:   58313
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         7201
Number of times breaked:         8

Total time for CPA algorithm:        40.879s (Max:    20.312s)
  Time for choose from waitlist:      0.119s
  Time for precision adjustment:      3.241s
  Time for transfer relation:        15.602s
  Time for merge operator:            8.327s
  Time for stop operator:            12.497s
  Time for adding to reached set:     0.389s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                 725 (count: 8, min: 23, max: 114, avg: 90.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.924s
  Counterexample analysis:                1.150s (Max:     0.241s, Calls: 8)
    Refinement sat check:                 0.110s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.002s
  Building the counterexample trace:                   1.150s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.033s
  Precision update:                                    0.023s
  ARG update:                                          0.000s

Length of refined path (in blocks):                     577 (count: 8, min: 8, max: 112, avg: 72.13)
Number of affected states:                              537 (count: 8, min: 4, max: 108, avg: 67.13)
Length (states) of path with itp 'true':                 32 (count: 8, min: 3, max: 8, avg: 4.00)
Length (states) of path with itp non-trivial itp:       537 (count: 8, min: 4, max: 108, avg: 67.13)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         130 (count: 8, min: 1, max: 27, avg: 16.25)
Equal non-trivial interpolants along paths:             399 (count: 8, min: 1, max: 80, avg: 49.88)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 21634
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 6194.88
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      42.875s
Time for refinements:                 1.995s
Average time for refinement:          0.249s
Max time for refinement:              0.588s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          71
  Total lines:            77
  Line coverage:          0.922
  Visited conditions:     45
  Total conditions:       60
  Condition coverage:     0.750

CPAchecker general statistics
-----------------------------
Number of program locations:     83
Number of CFA edges:             114
Number of relevant variables:    25
Number of functions:             3
Number of loops:                 2
Size of reached set:             1562
  Number of reached locations:   64 (77%)
    Avg states per location:     24
    Max states per location:     82 (at node N59)
  Number of reached functions:   3 (100%)
  Number of partitions:          172
    Avg size of partitions:      9
    Max size of partitions:      82 (with key [N59 (before line 61), Function mp_add called from node N136, stack depth 2 [fccab1d], stack [main, mp_add], Init])
  Number of target states:       0

Time for analysis setup:          1.590s
  Time for loading CPAs:          0.442s
  Time for loading parser:        0.543s
  Time for CFA construction:      0.530s
    Time for parsing file(s):     0.258s
    Time for AST to CFA:          0.138s
    Time for CFA sanity check:    0.012s
    Time for post-processing:     0.078s
      Time for var class.:        0.000s
Time for Analysis:               42.875s
CPU time for analysis:           53.790s
Total time for CPAchecker:       44.470s
Total CPU time for CPAchecker:   56.300s

Time for Garbage Collector:       0.702s (in 5 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               2178MB (  2077 MiB) max;    737MB (   703 MiB) avg;   2178MB (  2077 MiB) peak
Used non-heap memory:             24MB (    22 MiB) max;     22MB (    21 MiB) avg;     24MB (    23 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          3611MB (  3444 MiB) max;   2980MB (  2842 MiB) avg
Allocated non-heap memory:        26MB (    25 MiB) max;     25MB (    24 MiB) avg
Total process virtual memory:  13600MB ( 12970 MiB) max;  13600MB ( 12970 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
