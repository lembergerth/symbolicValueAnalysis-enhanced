scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-net--batman-adv--batman-adv.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_704740022_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 36566: Function pointer *(tvlv_handler->ogm_handler) with type void (*)(struct batadv_priv *, struct batadv_orig_node *, uint8_t , void *, uint16_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 36596: Function pointer *(tvlv_handler->unicast_handler) with type int (*)(struct batadv_priv *, uint8_t *, uint8_t *, void *, uint16_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 36721-36722: Function pointer *(tvlv_handler->ogm_handler) with type void (*)(struct batadv_priv *, struct batadv_orig_node *, uint8_t , void *, uint16_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

lines 53370-53371: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv___0, "%s: Changing from: %s to: %s\n", attr_name, __CPAchecker_TMP_0, __CPAchecker_TMP_1) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 19468: Ignoring parameters passed as varargs to function batadv_fdebug_log: batadv_fdebug_log(bat_priv->debug_log, "[%10u] %s", tmp, (char *)(&tmp_log_buf)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 53335-53336: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv, "%s: Invalid parameter received: %s\n", attr_name, buff) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 31378: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv, "Interface deactivated: %s\n", (char *)(&(hard_iface->net_dev->name))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 53966-53967: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv, "New skb mark for extended isolation: %#.8x/%#.8x\n", bat_priv->isolation_mark, bat_priv->isolation_mark_mask) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 29258-29259: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv___0, "Upload speed of gateway mode invalid: %s\n", slash_ptr + 1UL) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 29183: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv, "Download speed of gateway mode invalid: %s\n", buff) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 29430-29432: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv, "Changing gateway bandwidth from: \'%u.%u/%u.%u MBit\' to: \'%u.%u/%u.%u MBit\'\n", down_curr / 10U, down_curr % 10U, up_curr / 10U, up_curr % 10U, down_new / 10U, down_new % 10U, up_new / 10U, up_new % 10U) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 53796-53797: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv___0, "Changing gw mode from: %s to: %s\n", curr_gw_mode_str, buff) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 53537-53538: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv___2, "%s: Changing from: %i to: %lu\n", attr_name, tmp___7, uint_val) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 53502-53503: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv___1, "%s: Value is too big: %lu max: %u\n", attr_name, uint_val, max) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 53476-53477: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv___0, "%s: Value is too small: %lu min: %u\n", attr_name, uint_val, min) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 53450-53451: Ignoring parameters passed as varargs to function batadv_debug_log: batadv_debug_log(_batpriv, "%s: Invalid parameter received: %s\n", attr_name, buff) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 53399: Ignoring call via function pointer __batadv_store_bool_attr::post_func for which no suitable target was found in line: (*post_func)(net_dev); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 53399: Ignoring function call through function pointer *post_func: (*post_func)(net_dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 53568: Ignoring call via function pointer __batadv_store_uint_attr::post_func for which no suitable target was found in line: (*post_func)(net_dev); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 53568: Ignoring function call through function pointer *post_func: (*post_func)(net_dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 19320: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from batadv_is_on_batman_iface to batadv_is_on_batman_iface (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Error: Refinement using predicate refinement failed.Try using cpa.value.symbolic.refiner.SymbolicValueAnalysisRefiner (SymbolicPrecisionRefinementStrategy.performRefinement, SEVERE)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 109518 (count: 4972, min: 0, max: 23, avg: 22.03)
Number of global variables:                          109340 (count: 4972, min: 0, max: 22, avg: 21.99)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                   71336
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                1.043s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.263s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 116ms

PredicateCPA statistics
-----------------------
Number of abstractions:            71311 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12672 (18%)
  Because of loop head:            641 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       71311 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   25
  Times result was 'false':        0 (0%)
Number of coverage checks:         5948
  BDD entailment checks:           5948
Number of SMT sat checks:          25
  trivial:                         25
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          27
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   111814 (87%)

Time for post operator:                  6.832s
  Time for path formula creation:        6.637s
    Actual computation:                  5.467s
Time for strengthen operator:            0.114s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  3.422s
  Time for abstraction:                  1.201s (Max:     0.031s, Count: 71311)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.105s
  Time for BDD entailment checks:        0.090s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 77312, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.068s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.853s
  Time for transition matches:                         0.368s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       159911 (count: 159911, min: 1, max: 1, avg: 1.00) [1 x 159911]

CPA algorithm statistics
------------------------
Number of iterations:            64292
Max size of waitlist:            69
Average size of waitlist:        29
Number of computed successors:   71336
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         5948
Number of times breaked:         25

Total time for CPA algorithm:        19.980s (Max:     1.527s)
  Time for choose from waitlist:      0.113s
  Time for precision adjustment:      5.145s
  Time for transfer relation:        13.423s
  Time for merge operator:            0.047s
  Time for stop operator:             0.401s
  Time for adding to reached set:     0.277s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):               10654 (count: 25, min: 131, max: 1404, avg: 426.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  20.502s
  Counterexample analysis:               19.328s (Max:     2.386s, Calls: 25)
    Refinement sat check:                12.663s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.009s
  Building the counterexample trace:                  19.329s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.036s
  ARG update:                                          0.000s

Length of refined path (in blocks):                    4709 (count: 24, min: 33, max: 1266, avg: 196.21)
Number of affected states:                             2843 (count: 24, min: 3, max: 1264, avg: 118.46)
Length (states) of path with itp 'true':               1842 (count: 24, min: 1, max: 1256, avg: 76.75)
Length (states) of path with itp non-trivial itp:      2843 (count: 24, min: 3, max: 1264, avg: 118.46)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 24, min: 0, max: 2, avg: 0.08)
Equal non-trivial interpolants along paths:            2817 (count: 24, min: 2, max: 1263, avg: 117.38)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 4972
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 2616.52
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      40.193s
Time for refinements:                20.212s
Average time for refinement:          0.808s
Max time for refinement:              2.425s

Code Coverage
-----------------------------
  Function coverage:      0.155
  Visited lines:          10762
  Total lines:            35912
  Line coverage:          0.300
  Visited conditions:     792
  Total conditions:       8572
  Condition coverage:     0.092

CPAchecker general statistics
-----------------------------
Number of program locations:     23595
Number of CFA edges:             36578
Number of relevant variables:    8260
Number of functions:             1075
Number of loops:                 236
Size of reached set:             4972
  Number of reached locations:   2497 (11%)
    Avg states per location:     1
    Max states per location:     105 (at node N417)
  Number of reached functions:   167 (16%)
  Number of partitions:          4886
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N17460 (after line 37718), Function main called from node N17121, stack depth 1 [79ec9c17], stack [main], Init])
  Number of target states:       1
  Size of final wait list        49

Time for analysis setup:         14.173s
  Time for loading CPAs:          1.102s
  Time for loading parser:        0.625s
  Time for CFA construction:     12.370s
    Time for parsing file(s):     3.482s
    Time for AST to CFA:          4.153s
    Time for CFA sanity check:    0.357s
    Time for post-processing:     4.103s
      Time for var class.:        0.000s
Time for Analysis:               40.193s
CPU time for analysis:           50.840s
Total time for CPAchecker:       54.372s
Total CPU time for CPAchecker:   77.260s

Time for Garbage Collector:       0.569s (in 3 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               1157MB (  1103 MiB) max;    527MB (   503 MiB) avg;   1168MB (  1114 MiB) peak
Used non-heap memory:             28MB (    27 MiB) max;     24MB (    23 MiB) avg;     29MB (    28 MiB) peak
Used in PS Old Gen pool:          23MB (    22 MiB) max;     11MB (    10 MiB) avg;     23MB (    22 MiB) peak
Allocated heap memory:          2553MB (  2435 MiB) max;   2353MB (  2244 MiB) avg
Allocated non-heap memory:        29MB (    28 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:  13823MB ( 13183 MiB) max;  13625MB ( 12994 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
