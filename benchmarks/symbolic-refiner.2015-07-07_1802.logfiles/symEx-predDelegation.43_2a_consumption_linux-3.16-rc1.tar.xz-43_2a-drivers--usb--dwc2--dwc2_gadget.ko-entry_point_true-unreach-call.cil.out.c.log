scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--usb--dwc2--dwc2_gadget.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1001537732_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 9351: Function pointer *(hsotg->driver->disconnect) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10164: Function pointer *(hsotg->driver->resume) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10144: Function pointer *(hsotg->driver->suspend) with type void (*)(struct usb_gadget *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5390: Function pointer *(x->shutdown) with type void (*)(struct usb_phy *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 10904: Ignoring function call through function pointer *(hsotg->plat->phy_exit): (*(hsotg->plat->phy_exit))(pdev, hsotg->plat->phy_type); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9351: Ignoring function call through function pointer *(hsotg->driver->disconnect): (*(hsotg->driver->disconnect))(&(hsotg->gadget)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7660: Ignoring function call through function pointer *(hs_req->req.complete): (*(hs_req->req.complete))(&(hs_ep->ep), &(hs_req->req)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10869: Ignoring function call through function pointer *(hsotg->plat->phy_init): (*(hsotg->plat->phy_init))(pdev, hsotg->plat->phy_type); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Error: Refinement using predicate refinement failed.Try using cpa.value.symbolic.refiner.SymbolicValueAnalysisRefiner (SymbolicPrecisionRefinementStrategy.performRefinement, SEVERE)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                   9608 (count: 1820, min: 0, max: 7, avg: 5.28)
Number of global variables:                            7272 (count: 1820, min: 0, max: 4, avg: 4.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                   13534
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.190s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.113s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 1
Most constraints before refinement in state: 1
Constraints after refinement in state: 7
Constraints before refinement in state: 15
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 49ms

PredicateCPA statistics
-----------------------
Number of abstractions:            13527 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2414 (18%)
  Because of loop head:            46 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       13527 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   7
  Times result was 'false':        0 (0%)
Number of coverage checks:         1281
  BDD entailment checks:           1281
Number of SMT sat checks:          7
  trivial:                         7
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          11
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   10923 (55%)

Time for post operator:                  3.257s
  Time for path formula creation:        3.132s
    Actual computation:                  2.889s
Time for strengthen operator:            0.028s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  1.254s
  Time for abstraction:                  0.532s (Max:     0.013s, Count: 13527)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 14827, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.208s
Automaton transfers with branching:                0
Automaton transfer successors:                        27188 (count: 27188, min: 1, max: 1, avg: 1.00) [1 x 27188]

CPA algorithm statistics
------------------------
Number of iterations:            12025
Max size of waitlist:            54
Average size of waitlist:        27
Number of computed successors:   13534
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         1281
Number of times breaked:         7

Total time for CPA algorithm:         7.721s (Max:     1.768s)
  Time for choose from waitlist:      0.079s
  Time for precision adjustment:      1.807s
  Time for transfer relation:         5.310s
  Time for merge operator:            0.024s
  Time for stop operator:             0.141s
  Time for adding to reached set:     0.115s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                3332 (count: 7, min: 342, max: 561, avg: 476.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.737s
  Counterexample analysis:                3.367s (Max:     1.106s, Calls: 7)
    Refinement sat check:                 1.941s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.004s
  Building the counterexample trace:                   3.367s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.003s
  ARG update:                                          0.000s

Length of refined path (in blocks):                    1258 (count: 6, min: 110, max: 395, avg: 209.67)
Number of affected states:                               29 (count: 6, min: 2, max: 10, avg: 4.83)
Length (states) of path with itp 'true':               1223 (count: 6, min: 105, max: 392, avg: 203.83)
Length (states) of path with itp non-trivial itp:        29 (count: 6, min: 2, max: 10, avg: 4.83)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 6, min: 0, max: 3, avg: 0.67)
Equal non-trivial interpolants along paths:              19 (count: 6, min: 0, max: 9, avg: 3.17)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 2118
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 1751.43
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      11.373s
Time for refinements:                 3.651s
Average time for refinement:          0.521s
Max time for refinement:              1.123s

Code Coverage
-----------------------------
  Function coverage:      0.469
  Visited lines:          5796
  Total lines:            8470
  Line coverage:          0.684
  Visited conditions:     406
  Total conditions:       1138
  Condition coverage:     0.357

CPAchecker general statistics
-----------------------------
Number of program locations:     3528
Number of CFA edges:             5177
Number of relevant variables:    1399
Number of functions:             145
Number of loops:                 26
Size of reached set:             1820
  Number of reached locations:   1183 (34%)
    Avg states per location:     1
    Max states per location:     37 (at node N224)
  Number of reached functions:   68 (47%)
  Number of partitions:          1772
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4979 (before line 12631), Function main called from node N4882, stack depth 1 [5ae9fa73], stack [main], Init])
  Number of target states:       1
  Size of final wait list        38

Time for analysis setup:          4.880s
  Time for loading CPAs:          0.647s
  Time for loading parser:        0.516s
  Time for CFA construction:      3.635s
    Time for parsing file(s):     1.083s
    Time for AST to CFA:          1.089s
    Time for CFA sanity check:    0.160s
    Time for post-processing:     0.964s
      Time for var class.:        0.000s
Time for Analysis:               11.374s
CPU time for analysis:           18.540s
Total time for CPAchecker:       16.259s
Total CPU time for CPAchecker:   27.310s

Time for Garbage Collector:       0.146s (in 1 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                527MB (   503 MiB) max;    258MB (   246 MiB) avg;    580MB (   553 MiB) peak
Used non-heap memory:             25MB (    23 MiB) max;     20MB (    19 MiB) avg;     25MB (    24 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        26MB (    25 MiB) max;     25MB (    23 MiB) avg
Total process virtual memory:  13671MB ( 13038 MiB) max;  13598MB ( 12968 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
