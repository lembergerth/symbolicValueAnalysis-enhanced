scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--sfc--sfc.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1721427485_tempdir
line 60525: Dereferencing of non-pointer type efx_vfdi_op_t  in expression *(vfdi_ops[req->op]) (ASTConverter.convert, WARNING)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 18532: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18580: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31146: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33731: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 31053-31054: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 33638-33639: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31188: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33773: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31100: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33685: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 37300: Function pointer *(efx->mdio.mdio_read) with type int (*)(struct net_device *, int, int, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 43615-43616: Function pointer *(efx->mdio.mdio_write) with type int (*)(struct net_device *, int, int, u16 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 16119: Ignoring function call through function pointer *(efx->type->map_reset_reason): method = (*(efx->type->map_reset_reason))(type); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12324: Ignoring function call through function pointer *(efx->type->reconfigure_port): rc = (*(efx->type->reconfigure_port))(efx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 26662: Ignoring function call through function pointer *(efx->phy_op->probe): rc = (*(efx->phy_op->probe))(efx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from falcon_probe_port to falcon_probe_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 45765: Ignoring function call through function pointer *(tmp->type->init_phy): (*(tmp->type->init_phy))(efx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 43615-43616: Ignoring function call through function pointer *(efx->mdio.mdio_write): (*(efx->mdio.mdio_write))(efx->net_dev, efx->mdio.prtad, devad, (int)((u16 )addr), (int)((u16 )value)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 37300: Ignoring function call through function pointer *(efx->mdio.mdio_read): tmp = (*(efx->mdio.mdio_read))(efx->net_dev, efx->mdio.prtad, devad, (int)((u16 )addr)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 26743: Ignoring function call through function pointer *(efx->phy_op->remove): (*(efx->phy_op->remove))(efx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from falcon_remove_port to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 18532: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 18580: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 60525: Ignoring function call through function pointer *(vfdi_ops[req->op]): rc = (*(vfdi_ops[req->op]))(vf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from efx_sriov_vfdi to falcon_probe_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_sriov_vfdi to tenxpress_phy_init (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 14150: Ignoring function call through function pointer *(efx->type->stop_stats): (*(efx->type->stop_stats))(efx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from efx_stop_all to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from efx_stop_all to efx_sriov_vfdi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 28434: Ignoring function call through function pointer *(board->type->fini): (*(board->type->fini))(efx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from falcon_remove_nic to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_remove_nic to efx_sriov_vfdi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_remove_nic to falcon_remove_nic (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 27404: Ignoring function call through function pointer *(tmp___1->type->monitor): rc = (*(tmp___1->type->monitor))(efx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from falcon_monitor to falcon_probe_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_monitor to tenxpress_phy_init (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from falcon_monitor to efx_pm_suspend (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 26345: Ignoring function call through function pointer *(efx->phy_op->poll): (*(efx->phy_op->poll))(efx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 26345: Return type of function falcon_remove_port is void, but result is used as type bool : falcon_remove_port(efx); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from falcon_reconfigure_port to falcon_remove_port (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 26345: Return type of function efx_sriov_vfdi is void, but result is used as type bool : efx_sriov_vfdi(efx); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from falcon_reconfigure_port to efx_sriov_vfdi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 26345: Return type of function falcon_remove_nic is void, but result is used as type bool : falcon_remove_nic(efx); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from falcon_reconfigure_port to falcon_remove_nic (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 26345: Return type of function falcon_monitor is void, but result is used as type bool : falcon_monitor(efx); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from falcon_reconfigure_port to falcon_monitor (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Error: Refinement using predicate refinement failed.Try using cpa.value.symbolic.refiner.SymbolicValueAnalysisRefiner (SymbolicPrecisionRefinementStrategy.performRefinement, SEVERE)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 303308 (count: 75829, min: 0, max: 4, avg: 4.00)
Number of global variables:                          303308 (count: 75829, min: 0, max: 4, avg: 4.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  207771
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.873s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.614s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 363ms

PredicateCPA statistics
-----------------------
Number of abstractions:            207765 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  48546 (23%)
  Because of loop head:            2414 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       207765 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   6
  Times result was 'false':        0 (0%)
Number of coverage checks:         19933
  BDD entailment checks:           19933
Number of SMT sat checks:          6
  trivial:                         6
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          5
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   266893 (76%)

Time for post operator:                 52.679s
  Time for path formula creation:       52.032s
    Actual computation:                 45.826s
Time for strengthen operator:            0.343s
  Time for satisfiability checks:        0.000s
Time for prec operator:                 14.498s
  Time for abstraction:                  5.311s (Max:     0.033s, Count: 207765)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.187s
  Time for BDD entailment checks:        0.137s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 227710, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.230s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.735s
  Time for transition matches:                         0.752s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       316674 (count: 316674, min: 1, max: 1, avg: 1.00) [1 x 316674]

CPA algorithm statistics
------------------------
Number of iterations:            186195
Max size of waitlist:            510
Average size of waitlist:        362
Number of computed successors:   207771
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         19933
Number of times breaked:         6

Total time for CPA algorithm:        84.788s (Max:    44.919s)
  Time for choose from waitlist:      0.340s
  Time for precision adjustment:     17.295s
  Time for transfer relation:        63.839s
  Time for merge operator:            0.081s
  Time for stop operator:             0.806s
  Time for adding to reached set:     0.742s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                3265 (count: 6, min: 72, max: 935, avg: 544.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.896s
  Counterexample analysis:                6.682s (Max:     1.801s, Calls: 6)
    Refinement sat check:                 4.607s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.002s
  Building the counterexample trace:                   6.682s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.030s
  ARG update:                                          0.000s

Length of refined path (in blocks):                    1381 (count: 5, min: 2, max: 776, avg: 276.20)
Number of affected states:                             1359 (count: 5, min: 0, max: 771, avg: 271.80)
Length (states) of path with itp 'true':                 17 (count: 5, min: 1, max: 4, avg: 3.40)
Length (states) of path with itp non-trivial itp:      1359 (count: 5, min: 0, max: 771, avg: 271.80)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1355 (count: 5, min: 0, max: 770, avg: 271.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 75829
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 31307.33
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      92.398s
Time for refinements:                 7.610s
Average time for refinement:          1.268s
Max time for refinement:              2.127s

Code Coverage
-----------------------------
  Function coverage:      0.230
  Visited lines:          12953
  Total lines:            34906
  Line coverage:          0.371
  Visited conditions:     2176
  Total conditions:       14382
  Condition coverage:     0.151

CPAchecker general statistics
-----------------------------
Number of program locations:     32351
Number of CFA edges:             52494
Number of relevant variables:    7400
Number of functions:             1276
Number of loops:                 246
Size of reached set:             75829
  Number of reached locations:   4856 (15%)
    Avg states per location:     15
    Max states per location:     899 (at node N32895)
  Number of reached functions:   293 (23%)
  Number of partitions:          75829
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        462

Time for analysis setup:         14.188s
  Time for loading CPAs:          1.003s
  Time for loading parser:        0.581s
  Time for CFA construction:     12.486s
    Time for parsing file(s):     2.840s
    Time for AST to CFA:          4.188s
    Time for CFA sanity check:    0.395s
    Time for post-processing:     4.813s
      Time for var class.:        0.000s
Time for Analysis:               92.398s
CPU time for analysis:          105.980s
Total time for CPAchecker:      106.594s
Total CPU time for CPAchecker:  132.430s

Time for Garbage Collector:       2.042s (in 7 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3412MB (  3254 MiB) max;   1173MB (  1119 MiB) avg;   3484MB (  3323 MiB) peak
Used non-heap memory:             29MB (    27 MiB) max;     26MB (    25 MiB) avg;     29MB (    28 MiB) peak
Used in PS Old Gen pool:         205MB (   195 MiB) max;     92MB (    88 MiB) avg;    205MB (   195 MiB) peak
Allocated heap memory:          4726MB (  4507 MiB) max;   3572MB (  3407 MiB) avg
Allocated non-heap memory:        29MB (    28 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:  13903MB ( 13259 MiB) max;  13605MB ( 12975 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
