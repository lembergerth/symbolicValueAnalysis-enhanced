scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-kernel--rcutorture.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1044958807_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 9702: Ignoring function call through function pointer *(cur_ops->init): (*(cur_ops->init))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9514: Ignoring function call through function pointer *(cur_ops->cb_barrier): (*(cur_ops->cb_barrier))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7476: Ignoring function call through function pointer *(cur_ops->stats): tmp___29 = (*(cur_ops->stats))(page + ((unsigned long)cnt)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6336: Ignoring function call through function pointer *(cur_ops->readlock): idx = (*(cur_ops->readlock))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6338: Ignoring function call through function pointer *(cur_ops->completed): completed = (*(cur_ops->completed))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6404: Ignoring function call through function pointer *(cur_ops->read_delay): (*(cur_ops->read_delay))(&rand); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5506: Ignoring function call through function pointer *(cur_ops->readlock): idx = (*(cur_ops->readlock))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5508: Ignoring function call through function pointer *(cur_ops->completed): completed = (*(cur_ops->completed))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5574: Ignoring function call through function pointer *(cur_ops->read_delay): (*(cur_ops->read_delay))(&rand); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rcu_torture_timer to rcu_torture_timer (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4168: Ignoring function call through function pointer *(cur_ops->deferred_free): (*(cur_ops->deferred_free))(rp); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rcu_torture_cb to rcu_torture_timer (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from rcu_torture_cb to rcu_torture_cb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4214: Ignoring function call through function pointer *(cur_ops->sync): (*(cur_ops->sync))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5917: Ignoring function call through function pointer *(cur_ops->completed): tmp___5 = (*(cur_ops->completed))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6251: Ignoring function call through function pointer *(cur_ops->readunlock): (*(cur_ops->readunlock))(idx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5556: Ignoring function call through function pointer *(cur_ops->readunlock): (*(cur_ops->readunlock))(idx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rcu_torture_timer to rcu_torture_cb (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6743: Ignoring function call through function pointer *(cur_ops->completed): tmp___7 = (*(cur_ops->completed))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7077: Ignoring function call through function pointer *(cur_ops->readunlock): (*(cur_ops->readunlock))(idx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6386: Ignoring function call through function pointer *(cur_ops->readunlock): (*(cur_ops->readunlock))(idx); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5355: Ignoring function call through function pointer *(cur_ops->sync): (*(cur_ops->sync))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5351: Ignoring function call through function pointer *(cur_ops->sync): (*(cur_ops->sync))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5348: Ignoring function call through function pointer *(cur_ops->cb_barrier): (*(cur_ops->cb_barrier))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8694: Ignoring function call through function pointer *(cur_ops->call): (*(cur_ops->call))(&rcu, &rcu_torture_barrier_cbf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8755: Ignoring function call through function pointer *(cur_ops->cb_barrier): (*(cur_ops->cb_barrier))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5233: Ignoring function call through function pointer *(cur_ops->deferred_free): (*(cur_ops->deferred_free))(old_rp); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8898: Ignoring function call through function pointer *(cur_ops->cb_barrier): (*(cur_ops->cb_barrier))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5032: Ignoring function call through function pointer *(cur_ops->fqs): (*(cur_ops->fqs))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from rcu_torture_stats to rcu_torture_stats_print (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Error: Refinement using predicate refinement failed.Try using cpa.value.symbolic.refiner.SymbolicValueAnalysisRefiner (SymbolicPrecisionRefinementStrategy.performRefinement, SEVERE)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                  74650 (count: 12720, min: 0, max: 6, avg: 5.87)
Number of global variables:                           61941 (count: 12720, min: 0, max: 5, avg: 4.87)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                   56830
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.411s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.175s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 118ms

PredicateCPA statistics
-----------------------
Number of abstractions:            56823 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12718 (22%)
  Because of loop head:            639 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       56823 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   7
  Times result was 'false':        0 (0%)
Number of coverage checks:         5329
  BDD entailment checks:           5329
Number of SMT sat checks:          7
  trivial:                         7
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          7
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   71066 (74%)

Time for post operator:                 10.319s
  Time for path formula creation:       10.108s
    Actual computation:                  8.758s
Time for strengthen operator:            0.082s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  3.547s
  Time for abstraction:                  1.547s (Max:     0.161s, Count: 56823)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.077s
  Time for BDD entailment checks:        0.065s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 62167, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.075s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.547s
  Time for transition matches:                         0.212s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        85764 (count: 85764, min: 1, max: 1, avg: 1.00) [1 x 85764]

CPA algorithm statistics
------------------------
Number of iterations:            51351
Max size of waitlist:            66
Average size of waitlist:        38
Number of computed successors:   56830
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         5329
Number of times breaked:         7

Total time for CPA algorithm:        20.316s (Max:     7.551s)
  Time for choose from waitlist:      0.116s
  Time for precision adjustment:      4.673s
  Time for transfer relation:        14.278s
  Time for merge operator:            0.038s
  Time for stop operator:             0.296s
  Time for adding to reached set:     0.267s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                2198 (count: 7, min: 19, max: 421, avg: 314.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  23.981s
  Counterexample analysis:               23.224s (Max:     3.635s, Calls: 7)
    Refinement sat check:                20.121s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.003s
  Building the counterexample trace:                  23.224s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.019s
  ARG update:                                          0.000s

Length of refined path (in blocks):                     955 (count: 6, min: 15, max: 247, avg: 159.17)
Number of affected states:                              650 (count: 6, min: 1, max: 242, avg: 108.33)
Length (states) of path with itp 'true':                299 (count: 6, min: 1, max: 155, avg: 49.83)
Length (states) of path with itp non-trivial itp:       650 (count: 6, min: 1, max: 242, avg: 108.33)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             644 (count: 6, min: 0, max: 241, avg: 107.33)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 12720
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 7358.29
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      44.200s
Time for refinements:                23.884s
Average time for refinement:          3.412s
Max time for refinement:              3.971s

Code Coverage
-----------------------------
  Function coverage:      0.720
  Visited lines:          5590
  Total lines:            6987
  Line coverage:          0.800
  Visited conditions:     1073
  Total conditions:       1566
  Condition coverage:     0.685

CPAchecker general statistics
-----------------------------
Number of program locations:     3980
Number of CFA edges:             5812
Number of relevant variables:    791
Number of functions:             182
Number of loops:                 59
Size of reached set:             12720
  Number of reached locations:   2734 (69%)
    Avg states per location:     4
    Max states per location:     202 (at node N5328)
  Number of reached functions:   131 (72%)
  Number of partitions:          12523
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N4646 (before lines 10380-10382), Function rcu_torture_init called from node N4672, stack depth 2 [9450185], stack [main, rcu_torture_init], Init])
  Number of target states:       1
  Size of final wait list        33

Time for analysis setup:          4.165s
  Time for loading CPAs:          0.562s
  Time for loading parser:        0.540s
  Time for CFA construction:      2.991s
    Time for parsing file(s):     0.792s
    Time for AST to CFA:          1.003s
    Time for CFA sanity check:    0.132s
    Time for post-processing:     0.821s
      Time for var class.:        0.000s
Time for Analysis:               44.200s
CPU time for analysis:           56.660s
Total time for CPAchecker:       48.370s
Total CPU time for CPAchecker:   63.830s

Time for Garbage Collector:       0.565s (in 4 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                585MB (   558 MiB) max;    332MB (   316 MiB) avg;    595MB (   567 MiB) peak
Used non-heap memory:             26MB (    25 MiB) max;     23MB (    22 MiB) avg;     26MB (    25 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2553MB (  2435 MiB) max;   2064MB (  1968 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     26MB (    24 MiB) avg
Total process virtual memory:  14013MB ( 13364 MiB) max;  13839MB ( 13198 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
