scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--misc--sgi-xp--xpc.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-2130767953_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8661-8662: Function pointer *(ch->func) with type void (*)(enum xp_retval , short, int, void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9104: Function pointer *(ch->func) with type void (*)(enum xp_retval , short, int, void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7005: Function pointer *(xpc_arch_ops.partition_engaged) with type int (*)(short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6955: Function pointer *(xpc_arch_ops.partition_engaged) with type int (*)(short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8883: Function pointer *(ch->func) with type void (*)(enum xp_retval , short, int, void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 8992-8994: Function pointer *(xpc_arch_ops.send_payload) with type enum xp_retval  (*)(struct xpc_channel *, u32 , void *, u16 , u8 , void (*)(enum xp_retval , short, int, void *), void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9049-9051: Function pointer *(xpc_arch_ops.send_payload) with type enum xp_retval  (*)(struct xpc_channel *, u32 , void *, u16 , u8 , void (*)(enum xp_retval , short, int, void *), void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13507: Function pointer *func with type void (*)(enum xp_retval , short, int, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9990: Function pointer *(xpc_arch_ops.partition_engaged) with type int (*)(short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7734: Function pointer *(xpc_arch_ops.partition_engaged) with type int (*)(short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9782: Function pointer *xp_cpu_to_nasid with type int (*)(int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 6946: Ignoring function call through function pointer *(xpc_arch_ops.disallow_all_hbs): (*(xpc_arch_ops.disallow_all_hbs))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10153: Ignoring function call through function pointer *(xpc_arch_ops.request_partition_deactivation): (*(xpc_arch_ops.request_partition_deactivation))(part); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6760: Ignoring function call through function pointer *(xpc_arch_ops.any_partition_engaged): tmp___0 = (*(xpc_arch_ops.any_partition_engaged))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6678: Ignoring function call through function pointer *(xpc_arch_ops.teardown_partitions): (*(xpc_arch_ops.teardown_partitions))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

The void * pointer kzalloc::__retval__ to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 11446:	N4128 -{mq->gru_mq_desc = kzalloc(32UL, 208U);}-> N4134) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

line 11542: Ignoring call via function pointer xp_pa for which no suitable target was found in line: tmp___1 = (*xp_pa)(mq->address); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11542: Ignoring function call through function pointer *xp_pa: tmp___1 = (*xp_pa)(mq->address); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11544: Ignoring call via function pointer xp_expand_memprotect for which no suitable target was found in line: xp_ret = (*xp_expand_memprotect)(tmp___1, (unsigned long)mq_size); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11544: Ignoring function call through function pointer *xp_expand_memprotect: xp_ret = (*xp_expand_memprotect)(tmp___1, (unsigned long)mq_size); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12229: Ignoring call via function pointer xp_remote_memcpy for which no suitable target was found in line: ret = (*xp_remote_memcpy)(tmp, gru_mq_desc_gpa, 32UL); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12229: Ignoring function call through function pointer *xp_remote_memcpy: ret = (*xp_remote_memcpy)(tmp, gru_mq_desc_gpa, 32UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from xpc_send_activate_IRQ_uv to xpc_cache_remote_gru_mq_desc_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_send_activate_IRQ_part_uv to xpc_deactivate_partition (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13507: Ignoring call via function pointer xpc_notify_sender_uv::func for which no suitable target was found in line: (*func)(reason, __CPAchecker_TMP_2, __CPAchecker_TMP_3, msg_slot->key); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 13507: Ignoring function call through function pointer *func: (*func)(reason, __CPAchecker_TMP_2, __CPAchecker_TMP_3, msg_slot->key); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5014: Ignoring function call through function pointer *(xpc_arch_ops.increment_heartbeat): (*(xpc_arch_ops.increment_heartbeat))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from xpc_hb_beater to xpc_process_activate_IRQ_rcvd_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9990: Ignoring function call through function pointer *(xpc_arch_ops.partition_engaged): tmp = (*(xpc_arch_ops.partition_engaged))((int)partid); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10010: Ignoring function call through function pointer *(xpc_arch_ops.assume_partition_disengaged): (*(xpc_arch_ops.assume_partition_disengaged))((int)partid); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8808: Ignoring function call through function pointer *(xpc_arch_ops.send_chctl_closerequest): (*(xpc_arch_ops.send_chctl_closerequest))(ch, irq_flags); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from xpc_send_activate_IRQ_ch_uv to xpc_deactivate_partition (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_received_payload_uv to xpc_deactivate_partition (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6409: Ignoring function call through function pointer *(xpc_arch_ops.indicate_partition_engaged): (*(xpc_arch_ops.indicate_partition_engaged))(part); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from xpc_create_kthreads to xpc_timeout_partition_disengage (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6453: Ignoring call via function pointer xpc_create_kthreads::indicate_partition_disengaged for which no suitable target was found in line: (*indicate_partition_disengaged)(part); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6453: Ignoring function call through function pointer *indicate_partition_disengaged: (*indicate_partition_disengaged)(part); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from xpc_create_kthreads to xpc_disconnect_channel (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10035: Ignoring function call through function pointer *(xpc_arch_ops.cancel_partition_deactivation_request): (*(xpc_arch_ops.cancel_partition_deactivation_request))(part); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from xpc_partition_disengaged to xpc_timeout_partition_disengage (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_initiate_disconnect to xpc_disconnect_channel (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10117: Ignoring function call through function pointer *(xpc_arch_ops.request_partition_reactivation): (*(xpc_arch_ops.request_partition_reactivation))(part); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6983: Ignoring function call through function pointer *(xpc_arch_ops.any_partition_engaged): any_engaged = (*(xpc_arch_ops.any_partition_engaged))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7005: Ignoring function call through function pointer *(xpc_arch_ops.partition_engaged): tmp___0 = (*(xpc_arch_ops.partition_engaged))((int)partid); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6955: Ignoring function call through function pointer *(xpc_arch_ops.partition_engaged): tmp = (*(xpc_arch_ops.partition_engaged))((int)partid); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6959: Ignoring function call through function pointer *(xpc_arch_ops.request_partition_deactivation): (*(xpc_arch_ops.request_partition_deactivation))(part); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from xpc_deactivate_partition to xpc_request_partition_deactivation_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_indicate_partition_disengaged_uv to xpc_send_activate_IRQ_part_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_process_activate_IRQ_rcvd_uv to xpc_deactivate_partition (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_indicate_partition_engaged_uv to xpc_send_activate_IRQ_part_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_create_kthreads to xpc_request_partition_deactivation_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_partition_disengaged to xpc_request_partition_deactivation_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_request_partition_deactivation_uv to xpc_send_activate_IRQ_part_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_deactivate_partition to xpc_indicate_partition_disengaged_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_create_kthreads to xpc_indicate_partition_disengaged_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_partition_disengaged to xpc_indicate_partition_disengaged_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_deactivate_partition to xpc_hb_beater (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_create_kthreads to xpc_hb_beater (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_partition_disengaged to xpc_hb_beater (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_deactivate_partition to xpc_indicate_partition_engaged_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_create_kthreads to xpc_indicate_partition_engaged_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_partition_disengaged to xpc_indicate_partition_engaged_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_deactivate_partition to xpc_timeout_partition_disengage (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_partition_going_down to xpc_disconnect_channel (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6961: Ignoring function call through function pointer *(xpc_arch_ops.indicate_partition_disengaged): (*(xpc_arch_ops.indicate_partition_disengaged))(part); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11594: Ignoring call via function pointer xp_pa for which no suitable target was found in line: tmp = (*xp_pa)(mq->address); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11594: Ignoring function call through function pointer *xp_pa: tmp = (*xp_pa)(mq->address); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11596: Ignoring call via function pointer xp_restrict_memprotect for which no suitable target was found in line: tmp___0 = (*xp_restrict_memprotect)(tmp, (unsigned long)mq_size); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11596: Ignoring function call through function pointer *xp_restrict_memprotect: tmp___0 = (*xp_restrict_memprotect)(tmp, (unsigned long)mq_size); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from xpc_destroy_gru_mq_uv to xpc_save_remote_msgqueue_pa_uv (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from xpc_timeout_partition_disengage to xpc_partition_disengaged (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                6213036 (count: 2071014, min: 0, max: 3, avg: 3.00)
Number of global variables:                         6213036 (count: 2071014, min: 0, max: 3, avg: 3.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 2283672
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                8.087s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     7.118s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 5806ms

PredicateCPA statistics
-----------------------
Number of abstractions:            2283669 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  536832 (24%)
  Because of loop head:            43751 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       2283669 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   3
  Times result was 'false':        0 (0%)
Number of coverage checks:         211706
  BDD entailment checks:           211706
Number of SMT sat checks:          3
  trivial:                         3
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          4
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   3130721 (79%)

Time for post operator:                349.045s
  Time for path formula creation:      337.861s
    Actual computation:                302.048s
Time for strengthen operator:            5.716s
  Time for satisfiability checks:        0.000s
Time for prec operator:                177.218s
  Time for abstraction:                117.309s (Max:    30.480s, Count: 2283669)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 2.732s
  Time for BDD entailment checks:        1.642s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 2495383, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             6.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 37.423s
  Time for transition matches:                        14.678s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      3172394 (count: 3172394, min: 1, max: 1, avg: 1.00) [1 x 3172394]

CPA algorithm statistics
------------------------
Number of iterations:            2071784
Max size of waitlist:            86
Average size of waitlist:        58
Number of computed successors:   2283672
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         211706
Number of times breaked:         3

Total time for CPA algorithm:       766.949s (Max:   764.298s)
  Time for choose from waitlist:      5.128s
  Time for precision adjustment:    216.006s
  Time for transfer relation:       491.580s
  Time for merge operator:            0.669s
  Time for stop operator:            12.053s
  Time for adding to reached set:     9.896s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                 610 (count: 3, min: 119, max: 343, avg: 203.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.993s
  Counterexample analysis:                2.905s (Max:     1.234s, Calls: 3)
    Refinement sat check:                 2.325s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.002s
  Building the counterexample trace:                   2.905s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.013s
  ARG update:                                          0.000s

Length of refined path (in blocks):                     366 (count: 3, min: 13, max: 339, avg: 122.00)
Number of affected states:                              347 (count: 3, min: 6, max: 334, avg: 115.67)
Length (states) of path with itp 'true':                 16 (count: 3, min: 4, max: 6, avg: 5.33)
Length (states) of path with itp non-trivial itp:       347 (count: 3, min: 6, max: 334, avg: 115.67)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             344 (count: 3, min: 5, max: 333, avg: 114.67)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 533
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 318.67
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     769.959s
Time for refinements:                 3.010s
Average time for refinement:          1.003s
Max time for refinement:              1.287s

Code Coverage
-----------------------------
  Function coverage:      0.451
  Visited lines:          5665
  Total lines:            9892
  Line coverage:          0.573
  Visited conditions:     578
  Total conditions:       2074
  Condition coverage:     0.279

CPAchecker general statistics
-----------------------------
Number of program locations:     5353
Number of CFA edges:             8165
Number of relevant variables:    1393
Number of functions:             257
Number of loops:                 48
Size of reached set:             2071014
  Size of final wait list        51

Time for analysis setup:          5.968s
  Time for loading CPAs:          0.702s
  Time for loading parser:        0.611s
  Time for CFA construction:      4.564s
    Time for parsing file(s):     1.162s
    Time for AST to CFA:          1.634s
    Time for CFA sanity check:    0.196s
    Time for post-processing:     1.344s
      Time for var class.:        0.000s
Time for Analysis:              769.959s
CPU time for analysis:          909.700s
Total time for CPAchecker:      775.933s
Total CPU time for CPAchecker:  920.530s

Time for Garbage Collector:     127.122s (in 60 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5681MB (  5417 MiB) max;   3044MB (  2903 MiB) avg;   8026MB (  7654 MiB) peak
Used non-heap memory:             27MB (    26 MiB) max;     24MB (    23 MiB) avg;     27MB (    26 MiB) peak
Used in PS Old Gen pool:        4002MB (  3817 MiB) max;   1698MB (  1619 MiB) avg;   4002MB (  3817 MiB) peak
Allocated heap memory:          8379MB (  7991 MiB) max;   5258MB (  5015 MiB) avg
Allocated non-heap memory:        51MB (    48 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  13865MB ( 13223 MiB) max;  13729MB ( 13093 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
