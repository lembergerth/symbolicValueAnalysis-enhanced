scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--media--usb--pwc--pwc.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-1476187202_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Destroying the void * pointer  ldv_main_exported_1::tmp produces garbage! (in the following line(s):
 line 9478:	N1582 -{ldv_main_exported_1();}-> N1584) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_1::tmp___0 produces garbage! (in the following line(s):
 line 9478:	N1582 -{ldv_main_exported_1();}-> N1584) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_1::tmp___1 produces garbage! (in the following line(s):
 line 9478:	N1582 -{ldv_main_exported_1();}-> N1584) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_1::tmp___10 produces garbage! (in the following line(s):
 line 9478:	N1582 -{ldv_main_exported_1();}-> N1584) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_1::tmp___11 produces garbage! (in the following line(s):
 line 9478:	N1582 -{ldv_main_exported_1();}-> N1584) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_1::tmp___12 produces garbage! (in the following line(s):
 line 9478:	N1582 -{ldv_main_exported_1();}-> N1584) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_1::tmp___13 produces garbage! (in the following line(s):
 line 9478:	N1582 -{ldv_main_exported_1();}-> N1584) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_1::tmp___14 produces garbage! (in the following line(s):
 line 9478:	N1582 -{ldv_main_exported_1();}-> N1584) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_1::tmp___15 produces garbage! (in the following line(s):
 line 9478:	N1582 -{ldv_main_exported_1();}-> N1584) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_1::tmp___18 produces garbage! (in the following line(s):
 line 9478:	N1582 -{ldv_main_exported_1();}-> N1584) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_1::tmp___19 produces garbage! (in the following line(s):
 line 9478:	N1582 -{ldv_main_exported_1();}-> N1584) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_1::tmp___21 produces garbage! (in the following line(s):
 line 9478:	N1582 -{ldv_main_exported_1();}-> N1584) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_1::tmp___23 produces garbage! (in the following line(s):
 line 9478:	N1582 -{ldv_main_exported_1();}-> N1584) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_1::tmp___24 produces garbage! (in the following line(s):
 line 9478:	N1582 -{ldv_main_exported_1();}-> N1584) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_1::tmp___25 produces garbage! (in the following line(s):
 line 9478:	N1582 -{ldv_main_exported_1();}-> N1584) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_1::tmp___5 produces garbage! (in the following line(s):
 line 9478:	N1582 -{ldv_main_exported_1();}-> N1584) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_1::tmp___7 produces garbage! (in the following line(s):
 line 9478:	N1582 -{ldv_main_exported_1();}-> N1584) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_1::tmp___8 produces garbage! (in the following line(s):
 line 9478:	N1582 -{ldv_main_exported_1();}-> N1584) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_1::tmp___9 produces garbage! (in the following line(s):
 line 9478:	N1582 -{ldv_main_exported_1();}-> N1584) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Error: Refinement using predicate refinement failed.Try using cpa.value.symbolic.refiner.SymbolicValueAnalysisRefiner (SymbolicPrecisionRefinementStrategy.performRefinement, SEVERE)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                  17682 (count: 5896, min: 0, max: 3, avg: 3.00)
Number of global variables:                           17682 (count: 5896, min: 0, max: 3, avg: 3.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                   31131
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.282s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.163s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 1
Most constraints before refinement in state: 1
Constraints after refinement in state: 4
Constraints before refinement in state: 8
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 78ms

PredicateCPA statistics
-----------------------
Number of abstractions:            31126 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3795 (12%)
  Because of loop head:            1266 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       31126 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   5
  Times result was 'false':        0 (0%)
Number of coverage checks:         5220
  BDD entailment checks:           5220
Number of SMT sat checks:          5
  trivial:                         5
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          5
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   41334 (78%)

Time for post operator:                352.569s
  Time for path formula creation:      352.433s
    Actual computation:                351.926s
Time for strengthen operator:            0.051s
  Time for satisfiability checks:        0.000s
Time for prec operator:                 27.432s
  Time for abstraction:                 26.370s (Max:     0.329s, Count: 31126)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.059s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 36357, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.040s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.308s
Automaton transfers with branching:                0
Automaton transfer successors:                        56885 (count: 56885, min: 1, max: 1, avg: 1.00) [1 x 56885]

CPA algorithm statistics
------------------------
Number of iterations:            25829
Max size of waitlist:            44
Average size of waitlist:        20
Number of computed successors:   31131
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         5220
Number of times breaked:         5

Total time for CPA algorithm:       384.781s (Max:   133.526s)
  Time for choose from waitlist:      0.075s
  Time for precision adjustment:     28.302s
  Time for transfer relation:       355.437s
  Time for merge operator:            0.063s
  Time for stop operator:             0.252s
  Time for adding to reached set:     0.200s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                1701 (count: 5, min: 185, max: 487, avg: 340.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  23.391s
  Counterexample analysis:               22.824s (Max:     5.113s, Calls: 5)
    Refinement sat check:                19.958s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.002s
  Building the counterexample trace:                  22.824s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.005s
  ARG update:                                          0.000s

Length of refined path (in blocks):                     884 (count: 4, min: 137, max: 431, avg: 221.00)
Number of affected states:                               21 (count: 4, min: 2, max: 8, avg: 5.25)
Length (states) of path with itp 'true':                859 (count: 4, min: 132, max: 423, avg: 214.75)
Length (states) of path with itp non-trivial itp:        21 (count: 4, min: 2, max: 8, avg: 5.25)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              17 (count: 4, min: 1, max: 7, avg: 4.25)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 7740
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 5183.20
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     408.075s
Time for refinements:                23.292s
Average time for refinement:          4.658s
Max time for refinement:              5.265s

Code Coverage
-----------------------------
  Function coverage:      0.497
  Visited lines:          11126
  Total lines:            12972
  Line coverage:          0.858
  Visited conditions:     741
  Total conditions:       1252
  Condition coverage:     0.592

CPAchecker general statistics
-----------------------------
Number of program locations:     2943
Number of CFA edges:             4032
Number of relevant variables:    863
Number of functions:             147
Number of loops:                 41
Size of reached set:             5896
  Number of reached locations:   1601 (54%)
    Avg states per location:     3
    Max states per location:     81 (at node N152)
  Number of reached functions:   73 (50%)
  Number of partitions:          5807
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1508 (before line 9376), Function main called from node N1431, stack depth 1 [7f2ce92f], stack [main], Init])
  Number of target states:       1
  Size of final wait list        23

Time for analysis setup:          6.719s
  Time for loading CPAs:          0.774s
  Time for loading parser:        0.558s
  Time for CFA construction:      5.311s
    Time for parsing file(s):     1.506s
    Time for AST to CFA:          2.419s
    Time for CFA sanity check:    0.147s
    Time for post-processing:     0.977s
      Time for var class.:        0.000s
Time for Analysis:              408.075s
CPU time for analysis:          421.590s
Total time for CPAchecker:      414.800s
Total CPU time for CPAchecker:  434.220s

Time for Garbage Collector:       2.758s (in 38 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3417MB (  3259 MiB) max;   1258MB (  1200 MiB) avg;   3501MB (  3338 MiB) peak
Used non-heap memory:             26MB (    25 MiB) max;     25MB (    24 MiB) avg;     27MB (    25 MiB) peak
Used in PS Old Gen pool:          85MB (    81 MiB) max;     56MB (    53 MiB) avg;     85MB (    81 MiB) peak
Allocated heap memory:          4834MB (  4611 MiB) max;   3757MB (  3583 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:  14535MB ( 13862 MiB) max;  13952MB ( 13305 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
