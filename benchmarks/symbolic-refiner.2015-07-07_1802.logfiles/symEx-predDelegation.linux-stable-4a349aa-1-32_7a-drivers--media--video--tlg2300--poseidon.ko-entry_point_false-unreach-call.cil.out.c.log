scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-validator-v0.6/ALL.prp ../svcomp15/ldv-validator-v0.6/linux-stable-4a349aa-1-32_7a-drivers--media--video--tlg2300--poseidon.ko-entry_point_false-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1434274810_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp produces garbage! (in the following line(s):
 line 18554:	N6772 -{ldv_main_exported_4();}-> N6774) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___0 produces garbage! (in the following line(s):
 line 18554:	N6772 -{ldv_main_exported_4();}-> N6774) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___1 produces garbage! (in the following line(s):
 line 18554:	N6772 -{ldv_main_exported_4();}-> N6774) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___10 produces garbage! (in the following line(s):
 line 18554:	N6772 -{ldv_main_exported_4();}-> N6774) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___11 produces garbage! (in the following line(s):
 line 18554:	N6772 -{ldv_main_exported_4();}-> N6774) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___12 produces garbage! (in the following line(s):
 line 18554:	N6772 -{ldv_main_exported_4();}-> N6774) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___13 produces garbage! (in the following line(s):
 line 18554:	N6772 -{ldv_main_exported_4();}-> N6774) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___15 produces garbage! (in the following line(s):
 line 18554:	N6772 -{ldv_main_exported_4();}-> N6774) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___16 produces garbage! (in the following line(s):
 line 18554:	N6772 -{ldv_main_exported_4();}-> N6774) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___17 produces garbage! (in the following line(s):
 line 18554:	N6772 -{ldv_main_exported_4();}-> N6774) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___18 produces garbage! (in the following line(s):
 line 18554:	N6772 -{ldv_main_exported_4();}-> N6774) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___2 produces garbage! (in the following line(s):
 line 18554:	N6772 -{ldv_main_exported_4();}-> N6774) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___4 produces garbage! (in the following line(s):
 line 18554:	N6772 -{ldv_main_exported_4();}-> N6774) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___5 produces garbage! (in the following line(s):
 line 18554:	N6772 -{ldv_main_exported_4();}-> N6774) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Destroying the void * pointer  ldv_main_exported_4::tmp___8 produces garbage! (in the following line(s):
 line 18554:	N6772 -{ldv_main_exported_4();}-> N6774) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

line 17905: Ignoring function call through function pointer *(pd->pm_resume): tmp___1 = (*(pd->pm_resume))(pd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Destroying the void * pointer  ldv_main_exported_7::tmp___2 produces garbage! (in the following line(s):
 line 18383:	N6655 -{ldv_main_exported_7();}-> N6657) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

The void * pointer check_firmware::buf to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 17992:	N6448 -{ret = usb_control_msg(udev, tmp | 2147483776U, 130, 192, 0, 0, buf, 8, 5000);}-> N6449) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

Error: Refinement using predicate refinement failed.Try using cpa.value.symbolic.refiner.SymbolicValueAnalysisRefiner (SymbolicPrecisionRefinementStrategy.performRefinement, SEVERE)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 116970 (count: 11699, min: 0, max: 10, avg: 10.00)
Number of global variables:                          116970 (count: 11699, min: 0, max: 10, avg: 10.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                   37720
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.442s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.137s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 114ms

PredicateCPA statistics
-----------------------
Number of abstractions:            37708 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5521 (15%)
  Because of loop head:            859 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       37708 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   12
  Times result was 'false':        0 (0%)
Number of coverage checks:         4236
  BDD entailment checks:           4236
Number of SMT sat checks:          12
  trivial:                         12
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          13
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   52330 (80%)

Time for post operator:                 20.038s
  Time for path formula creation:       19.908s
    Actual computation:                 19.388s
Time for strengthen operator:            0.063s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  2.606s
  Time for abstraction:                  1.439s (Max:     0.124s, Count: 37708)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.054s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 41970, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.037s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.456s
Automaton transfers with branching:                0
Automaton transfer successors:                        84969 (count: 84969, min: 1, max: 1, avg: 1.00) [1 x 84969]

CPA algorithm statistics
------------------------
Number of iterations:            33298
Max size of waitlist:            43
Average size of waitlist:        16
Number of computed successors:   37720
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         4236
Number of times breaked:         12

Total time for CPA algorithm:        28.216s (Max:    11.179s)
  Time for choose from waitlist:      0.096s
  Time for precision adjustment:      3.553s
  Time for transfer relation:        23.703s
  Time for merge operator:            0.031s
  Time for stop operator:             0.262s
  Time for adding to reached set:     0.182s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                2740 (count: 12, min: 78, max: 559, avg: 228.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.862s
  Counterexample analysis:                4.272s (Max:     1.677s, Calls: 12)
    Refinement sat check:                 3.231s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.005s
  Building the counterexample trace:                   4.272s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.020s
  ARG update:                                          0.000s

Length of refined path (in blocks):                    1181 (count: 11, min: 51, max: 379, avg: 107.36)
Number of affected states:                              764 (count: 11, min: 8, max: 377, avg: 69.45)
Length (states) of path with itp 'true':                406 (count: 11, min: 1, max: 42, avg: 36.91)
Length (states) of path with itp non-trivial itp:       764 (count: 11, min: 8, max: 377, avg: 69.45)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 11, min: 0, max: 1, avg: 0.09)
Equal non-trivial interpolants along paths:             752 (count: 11, min: 7, max: 375, avg: 68.36)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 11699
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 2791.33
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      32.936s
Time for refinements:                 4.719s
Average time for refinement:          0.393s
Max time for refinement:              1.796s

Code Coverage
-----------------------------
  Function coverage:      0.456
  Visited lines:          9412
  Total lines:            11990
  Line coverage:          0.785
  Visited conditions:     741
  Total conditions:       1586
  Condition coverage:     0.467

CPAchecker general statistics
-----------------------------
Number of program locations:     4783
Number of CFA edges:             6671
Number of relevant variables:    1281
Number of functions:             342
Number of loops:                 33
Size of reached set:             11699
  Number of reached locations:   2310 (48%)
    Avg states per location:     5
    Max states per location:     120 (at node N94)
  Number of reached functions:   156 (46%)
  Number of partitions:          11482
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N6848 (before line 18677), Function main called from node N6588, stack depth 1 [4302eaff], stack [main], Init])
  Number of target states:       1
  Size of final wait list        12

Time for analysis setup:          6.102s
  Time for loading CPAs:          0.651s
  Time for loading parser:        0.637s
  Time for CFA construction:      4.728s
    Time for parsing file(s):     1.286s
    Time for AST to CFA:          1.867s
    Time for CFA sanity check:    0.244s
    Time for post-processing:     1.045s
      Time for var class.:        0.000s
Time for Analysis:               32.936s
CPU time for analysis:           43.200s
Total time for CPAchecker:       39.043s
Total CPU time for CPAchecker:   54.470s

Time for Garbage Collector:       0.566s (in 4 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               1431MB (  1365 MiB) max;    523MB (   499 MiB) avg;   1446MB (  1379 MiB) peak
Used non-heap memory:             26MB (    25 MiB) max;     23MB (    22 MiB) avg;     27MB (    25 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          3611MB (  3444 MiB) max;   2569MB (  2450 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:  13856MB ( 13214 MiB) max;  13602MB ( 12972 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
