scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--mmc--host--sdhci.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-346403608_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4861: Function pointer *(ops->map_sg) with type int (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4747-4748: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4993: Function pointer *(ops->sync_sg_for_cpu) with type void (*)(struct device *, struct scatterlist *, int, enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4949: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4906: Function pointer *(ops->unmap_sg) with type void (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4794: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 4906: Ignoring function call through function pointer *(ops->unmap_sg): (*(ops->unmap_sg))(dev, sg, nents, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4794: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4993: Ignoring function call through function pointer *(ops->sync_sg_for_cpu): (*(ops->sync_sg_for_cpu))(dev, sg, nelems, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5938: Ignoring function call through function pointer *(host->ops->platform_reset_enter): (*(host->ops->platform_reset_enter))(host, (int)mask); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6012: Ignoring function call through function pointer *(host->ops->platform_reset_exit): (*(host->ops->platform_reset_exit))(host, (int)mask); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6028: Ignoring function call through function pointer *(host->ops->enable_dma): (*(host->ops->enable_dma))(host); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8700: Ignoring function call through function pointer *(host->ops->get_ro): tmp___0 = (*(host->ops->get_ro))(host); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8700: Return type of function sdhci_get_ro is int, but result is used as type unsigned int: tmp___0 = sdhci_get_ro(host); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from sdhci_check_ro to sdhci_get_ro (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4861: Ignoring function call through function pointer *(ops->map_sg): ents = (*(ops->map_sg))(dev, sg, nents, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 4747-4748: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544UL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5021: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4949: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10039: Ignoring function call through function pointer *(host->ops->adma_workaround): (*(host->ops->adma_workaround))(host, intmask); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5227: Ignoring function call through function pointer *(host->ops->enable_sdio_irq): (*(host->ops->enable_sdio_irq))(host, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8787: Ignoring function call through function pointer *(host->ops->hw_reset): (*(host->ops->hw_reset))(host); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7962: Ignoring function call through function pointer *(host->ops->set_clock): (*(host->ops->set_clock))(host, clock); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from sdhci_hw_reset to sdhci_hw_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from sdhci_init to sdhci_set_ios (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8481: Ignoring function call through function pointer *(host->ops->platform_send_init_74_clocks): (*(host->ops->platform_send_init_74_clocks))(host, __CPAchecker_TMP_7); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8489: Ignoring function call through function pointer *(host->ops->platform_8bit_width): (*(host->ops->platform_8bit_width))(host, __CPAchecker_TMP_9); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8591: Ignoring function call through function pointer *(host->ops->set_uhs_signaling): (*(host->ops->set_uhs_signaling))(host, __CPAchecker_TMP_22); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 184329 (count: 61445, min: 0, max: 3, avg: 3.00)
Number of global variables:                          184329 (count: 61445, min: 0, max: 3, avg: 3.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  264237
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                1.073s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.589s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 368ms

PredicateCPA statistics
-----------------------
Number of abstractions:            264234 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  75960 (29%)
  Because of loop head:            1400 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       264234 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   3
  Times result was 'false':        0 (0%)
Number of coverage checks:         18464
  BDD entailment checks:           18464
Number of SMT sat checks:          3
  trivial:                         3
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          4
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   418019 (87%)

Time for post operator:                  9.368s
  Time for path formula creation:        8.773s
    Actual computation:                  7.585s
Time for strengthen operator:            0.355s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  6.853s
  Time for abstraction:                  2.644s (Max:     0.012s, Count: 264234)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.156s
  Time for BDD entailment checks:        0.119s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 282706, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.268s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.769s
  Time for transition matches:                         0.730s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       385229 (count: 385229, min: 1, max: 1, avg: 1.00) [1 x 385229]

CPA algorithm statistics
------------------------
Number of iterations:            245771
Max size of waitlist:            47
Average size of waitlist:        22
Number of computed successors:   264237
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         18464
Number of times breaked:         3

Total time for CPA algorithm:        34.552s (Max:    17.536s)
  Time for choose from waitlist:      0.369s
  Time for precision adjustment:     10.039s
  Time for transfer relation:        20.185s
  Time for merge operator:            0.083s
  Time for stop operator:             0.905s
  Time for adding to reached set:     0.904s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  99 (count: 3, min: 31, max: 35, avg: 33.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.314s
  Counterexample analysis:                0.024s (Max:     0.014s, Calls: 3)
    Refinement sat check:                 0.011s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.001s
  Building the counterexample trace:                   0.024s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.003s
  Precision update:                                    0.006s
  ARG update:                                          0.000s

Length of refined path (in blocks):                      87 (count: 3, min: 27, max: 31, avg: 29.00)
Number of affected states:                               72 (count: 3, min: 22, max: 26, avg: 24.00)
Length (states) of path with itp 'true':                 12 (count: 3, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:        72 (count: 3, min: 22, max: 26, avg: 24.00)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              69 (count: 3, min: 21, max: 25, avg: 23.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 61446
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 61444.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      36.094s
Time for refinements:                 1.542s
Average time for refinement:          0.514s
Max time for refinement:              0.910s

Code Coverage
-----------------------------
  Function coverage:      0.725
  Visited lines:          6524
  Total lines:            7353
  Line coverage:          0.887
  Visited conditions:     885
  Total conditions:       1240
  Condition coverage:     0.714

CPAchecker general statistics
-----------------------------
Number of program locations:     3462
Number of CFA edges:             5094
Number of relevant variables:    923
Number of functions:             160
Number of loops:                 25
Size of reached set:             61445
  Number of reached locations:   2552 (74%)
    Avg states per location:     24
    Max states per location:     1468 (at node N4683)
  Number of reached functions:   116 (73%)
  Number of partitions:          61445
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.794s
  Time for loading CPAs:          0.697s
  Time for loading parser:        0.543s
  Time for CFA construction:      3.482s
    Time for parsing file(s):     1.095s
    Time for AST to CFA:          1.096s
    Time for CFA sanity check:    0.163s
    Time for post-processing:     0.914s
      Time for var class.:        0.000s
Time for Analysis:               36.095s
CPU time for analysis:           49.140s
Total time for CPAchecker:       40.895s
Total CPU time for CPAchecker:   57.770s

Time for Garbage Collector:       0.856s (in 4 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               1808MB (  1724 MiB) max;    587MB (   560 MiB) avg;   1885MB (  1798 MiB) peak
Used non-heap memory:             26MB (    25 MiB) max;     24MB (    22 MiB) avg;     27MB (    25 MiB) peak
Used in PS Old Gen pool:          55MB (    53 MiB) max;     19MB (    18 MiB) avg;     55MB (    53 MiB) peak
Allocated heap memory:          3611MB (  3444 MiB) max;   2582MB (  2462 MiB) avg
Allocated non-heap memory:        28MB (    26 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:  13597MB ( 12967 MiB) max;  13595MB ( 12965 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
