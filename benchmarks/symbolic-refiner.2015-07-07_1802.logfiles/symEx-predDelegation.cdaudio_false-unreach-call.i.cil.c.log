scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -timelimit 900s -stats -spec ../svcomp15/ntdrivers/ALL.prp ../svcomp15/ntdrivers/cdaudio_false-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-635436122_tempdir
The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#2 to a deferred allocation escaped form tracking! Allocating array void[904]. (in the following line(s):
 line 7563:	N3907 -{irp.AssociatedIrp.SystemBuffer = malloc(904);}-> N3908) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#3 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#4 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#5 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#6 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#7 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#8 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#9 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#10 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#11 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#12 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#13 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#14 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#15 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#16 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#17 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#18 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#19 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#20 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#21 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#22 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#23 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#24 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#25 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#26 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#27 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#28 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#29 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#30 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#31 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#32 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#33 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#34 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#35 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#36 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#37 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#38 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#39 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#40 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#41 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#42 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#43 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#44 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#45 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#46 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#47 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#48 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#49 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#50 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#51 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#52 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#53 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#54 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#55 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#56 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7726:	N4049 -{tmp = malloc(i);}-> N4051) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 210394 (count: 10831, min: 0, max: 26, avg: 19.43)
Number of global variables:                          162435 (count: 10831, min: 0, max: 15, avg: 15.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  136170
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                1.194s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.440s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 4
Most constraints before refinement in state: 4
Constraints after refinement in state: 7310
Constraints before refinement in state: 13616
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 244ms

PredicateCPA statistics
-----------------------
Number of abstractions:            136142 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  11100 (8%)
  Because of loop head:            2344 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       136142 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   28
  Times result was 'false':        0 (0%)
Number of coverage checks:         16008
  BDD entailment checks:           16008
Number of SMT sat checks:          28
  trivial:                         28
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          53
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   239569 (93%)

Time for post operator:                  6.528s
  Time for path formula creation:        6.209s
    Actual computation:                  5.538s
Time for strengthen operator:            0.184s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  4.309s
  Time for abstraction:                  1.944s (Max:     0.133s, Count: 136142)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.130s
  Time for BDD entailment checks:        0.103s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 152232, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.126s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.939s
  Time for transition matches:                         0.383s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       222846 (count: 222846, min: 1, max: 1, avg: 1.00) [1 x 222846]

CPA algorithm statistics
------------------------
Number of iterations:            115776
Max size of waitlist:            726
Average size of waitlist:        57
Number of computed successors:   136170
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         16008
Number of times breaked:         28

Total time for CPA algorithm:        36.503s (Max:     6.367s)
  Time for choose from waitlist:      0.154s
  Time for precision adjustment:      6.619s
  Time for transfer relation:        23.286s
  Time for merge operator:            1.207s
  Time for stop operator:             3.575s
  Time for adding to reached set:     0.464s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                9114 (count: 28, min: 41, max: 3158, avg: 325.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 847.977s
  Counterexample analysis:              846.768s (Max:   821.832s, Calls: 28)
    Refinement sat check:               828.109s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.006s
  Building the counterexample trace:                 847.256s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.021s
  ARG update:                                          0.000s

Length of refined path (in blocks):                    5462 (count: 27, min: 15, max: 3115, avg: 202.30)
Number of affected states:                              749 (count: 27, min: 1, max: 110, avg: 27.74)
Length (states) of path with itp 'true':               4686 (count: 27, min: 1, max: 3004, avg: 173.56)
Length (states) of path with itp non-trivial itp:       749 (count: 27, min: 1, max: 110, avg: 27.74)
Length (states) of path with itp 'false':                27 (count: 27, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          81 (count: 27, min: 0, max: 8, avg: 3.00)
Equal non-trivial interpolants along paths:             641 (count: 27, min: 0, max: 106, avg: 23.74)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 10831
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 4292.50
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     884.092s
Time for refinements:               847.588s
Average time for refinement:         30.271s
Max time for refinement:            821.849s

Code Coverage
-----------------------------
  Function coverage:      0.345
  Visited lines:          4329
  Total lines:            6465
  Line coverage:          0.670
  Visited conditions:     429
  Total conditions:       930
  Condition coverage:     0.461

CPAchecker general statistics
-----------------------------
Number of program locations:     2239
Number of CFA edges:             2971
Number of relevant variables:    403
Number of functions:             87
Number of loops:                 22
Size of reached set:             10831
  Number of reached locations:   983 (44%)
    Avg states per location:     11
    Max states per location:     905 (at node N3923)
  Number of reached functions:   30 (34%)
  Number of partitions:          5241
    Avg size of partitions:      2
    Max size of partitions:      905 (with key [N3923 (before line 7570), Function main called from node N3893, stack depth 1 [936cd85], stack [main], Init])
  Number of target states:       1
  Size of final wait list        81

Time for analysis setup:          4.375s
  Time for loading CPAs:          0.535s
  Time for loading parser:        0.527s
  Time for CFA construction:      3.239s
    Time for parsing file(s):     0.811s
    Time for AST to CFA:          1.319s
    Time for CFA sanity check:    0.148s
    Time for post-processing:     0.679s
      Time for var class.:        0.000s
Time for Analysis:              884.092s
CPU time for analysis:          896.260s
Total time for CPAchecker:      888.472s
Total CPU time for CPAchecker:  904.060s

Time for Garbage Collector:       0.822s (in 6 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               1097MB (  1046 MiB) max;    177MB (   169 MiB) avg;   1117MB (  1065 MiB) peak
Used non-heap memory:             26MB (    25 MiB) max;     26MB (    25 MiB) avg;     27MB (    25 MiB) peak
Used in PS Old Gen pool:          11MB (    11 MiB) max;     10MB (    10 MiB) avg;     11MB (    11 MiB) peak
Allocated heap memory:          3561MB (  3396 MiB) max;   3470MB (  3309 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:  17738MB ( 16917 MiB) max;  16636MB ( 15865 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
