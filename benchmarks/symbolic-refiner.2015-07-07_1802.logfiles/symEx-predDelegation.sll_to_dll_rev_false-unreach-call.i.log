scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -timelimit 900s -stats -spec ../svcomp15/heap-manipulation/ALL.prp ../svcomp15/heap-manipulation/sll_to_dll_rev_false-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1852405710_tempdir
The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Error: Refinement using predicate refinement failed.Try using cpa.value.symbolic.refiner.SymbolicValueAnalysisRefiner (SymbolicPrecisionRefinementStrategy.performRefinement, SEVERE)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                    196 (count: 72, min: 0, max: 5, avg: 2.72)
Number of global variables:                               0 (count: 72, min: 0, max: 0, avg: 0.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                     148
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.005s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.005s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 1
Most constraints before refinement in state: 1
Constraints after refinement in state: 21
Constraints before refinement in state: 27
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 3ms

PredicateCPA statistics
-----------------------
Number of abstractions:            146 (95% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  32 (22%)
  Because of loop head:            12 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       146 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   2
  Times result was 'false':        0 (0%)
Number of coverage checks:         6
  BDD entailment checks:           6
Number of SMT sat checks:          2
  trivial:                         2
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          10
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   163 (68%)

Time for post operator:                  0.084s
  Time for path formula creation:        0.080s
    Actual computation:                  0.074s
Time for strengthen operator:            0.000s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  0.045s
  Time for abstraction:                  0.023s (Max:     0.001s, Count: 146)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 165, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.018s
Automaton transfers with branching:                0
Automaton transfer successors:                          728 (count: 734, min: 0, max: 1, avg: 0.99) [0 x 6, 1 x 728]

CPA algorithm statistics
------------------------
Number of iterations:            140
Max size of waitlist:            3
Average size of waitlist:        1
Number of computed successors:   148
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         6
Number of times breaked:         2

Total time for CPA algorithm:         0.262s (Max:     0.181s)
  Time for choose from waitlist:      0.000s
  Time for precision adjustment:      0.062s
  Time for transfer relation:         0.178s
  Time for merge operator:            0.001s
  Time for stop operator:             0.009s
  Time for adding to reached set:     0.004s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                 108 (count: 2, min: 54, max: 54, avg: 54.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.200s
  Counterexample analysis:                0.118s (Max:     0.064s, Calls: 2)
    Refinement sat check:                 0.068s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.118s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.004s
  ARG update:                                          0.000s

Length of refined path (in blocks):                      50 (count: 1, min: 50, max: 50, avg: 50.00)
Number of affected states:                               47 (count: 1, min: 47, max: 47, avg: 47.00)
Length (states) of path with itp 'true':                  2 (count: 1, min: 2, max: 2, avg: 2.00)
Length (states) of path with itp non-trivial itp:        47 (count: 1, min: 47, max: 47, avg: 47.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 1, min: 13, max: 13, avg: 13.00)
Equal non-trivial interpolants along paths:              33 (count: 1, min: 33, max: 33, avg: 33.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 72
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 72.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:       0.425s
Time for refinements:                 0.163s
Average time for refinement:          0.081s
Max time for refinement:              0.107s

Code Coverage
-----------------------------
  Function coverage:      0.600
  Visited lines:          291
  Total lines:            336
  Line coverage:          0.866
  Visited conditions:     10
  Total conditions:       36
  Condition coverage:     0.278

CPAchecker general statistics
-----------------------------
Number of program locations:     138
Number of CFA edges:             190
Number of relevant variables:    25
Number of functions:             10
Number of loops:                 9
Size of reached set:             72
  Number of reached locations:   48 (35%)
    Avg states per location:     1
    Max states per location:     3 (at node N5)
  Number of reached functions:   6 (60%)
  Number of partitions:          72
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        2

Time for analysis setup:          1.769s
  Time for loading CPAs:          0.445s
  Time for loading parser:        0.536s
  Time for CFA construction:      0.717s
    Time for parsing file(s):     0.369s
    Time for AST to CFA:          0.183s
    Time for CFA sanity check:    0.014s
    Time for post-processing:     0.093s
      Time for var class.:        0.000s
Time for Analysis:                0.425s
CPU time for analysis:            0.490s
Total time for CPAchecker:        2.199s
Total CPU time for CPAchecker:    3.330s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                157MB (   150 MiB) max;    103MB (    98 MiB) avg;    168MB (   160 MiB) peak
Used non-heap memory:             20MB (    19 MiB) max;     13MB (    13 MiB) avg;     20MB (    19 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13600MB ( 12970 MiB) max;  13585MB ( 12956 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
