scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--scsi--megaraid--megaraid_sas.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1696094708_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7852: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7899: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8269: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 12165: Ignoring function call through function pointer *(instance->instancet->check_reset): tmp = (*(instance->instancet->check_reset))(instance, instance->reg_set); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 22966-22967: Ignoring function call through function pointer *(instance->instancet->fire_cmd): (*(instance->instancet->fire_cmd))(instance, (dma_addr_t )(req_desc->ldv_37409.u.low), req_desc->ldv_37409.u.high, instance->reg_set); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 10155-10156: Ignoring function call through function pointer *(instance->instancet->fire_cmd): (*(instance->instancet->fire_cmd))(instance, cmd->frame_phys_addr, (cmd->ldv_38649.frame_count) - 1U, instance->reg_set); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10259: Ignoring function call through function pointer *(instance->instancet->build_and_issue_cmd): tmp___0 = (*(instance->instancet->build_and_issue_cmd))(instance, scmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10259: Return type of function megasas_queue_command is int, but result is used as type u32 : tmp___0 = megasas_queue_command(instance, scmd); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from megasas_queue_command_lck to megasas_queue_command (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7852: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17697: Ignoring function call through function pointer *(timer->function): (*(timer->function))(timer->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9249: Ignoring function call through function pointer *(instance->instancet->issue_dcmd): (*(instance->instancet->issue_dcmd))(instance, cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8486: Ignoring function call through function pointer *(instance->instancet->fire_cmd): (*(instance->instancet->fire_cmd))(instance, cmd->frame_phys_addr, 0U, instance->reg_set); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 23416-23417: Ignoring function call through function pointer *(instance->instancet->fire_cmd): (*(instance->instancet->fire_cmd))(instance, (dma_addr_t )(req_desc->ldv_37409.u.low), req_desc->ldv_37409.u.high, instance->reg_set); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7899: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9211: Ignoring function call through function pointer *(instance->instancet->issue_dcmd): (*(instance->instancet->issue_dcmd))(instance, cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9403: Ignoring function call through function pointer *(instance->instancet->issue_dcmd): (*(instance->instancet->issue_dcmd))(instance, cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14160: Ignoring function call through function pointer *(instance->instancet->issue_dcmd): (*(instance->instancet->issue_dcmd))(instance, cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12078: Ignoring function call through function pointer *(instance->instancet->disable_intr): (*(instance->instancet->disable_intr))(instance); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from process_fw_state_change_wq to process_fw_state_change_wq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21347: Ignoring function call through function pointer *(instance->instancet->issue_dcmd): (*(instance->instancet->issue_dcmd))(instance, cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11773: Ignoring function call through function pointer *(cmd->scmd->scsi_done): (*(cmd->scmd->scsi_done))(cmd->scmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from megasas_complete_cmd to process_fw_state_change_wq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_complete_cmd to megasas_complete_cmd_dpc (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15468: Ignoring function call through function pointer *(instance->instancet->disable_intr): (*(instance->instancet->disable_intr))(instance); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from megasas_detach_one to process_fw_state_change_wq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_detach_one to megasas_complete_cmd_dpc (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_detach_one to megasas_detach_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 15603: Ignoring function call through function pointer *(instance->instancet->disable_intr): (*(instance->instancet->disable_intr))(instance); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from megasas_shutdown to process_fw_state_change_wq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_shutdown to megasas_complete_cmd_dpc (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_shutdown to megasas_detach_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_shutdown to megasas_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23774: Ignoring function call through function pointer *(instance->instancet->disable_intr): (*(instance->instancet->disable_intr))(instance); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from megasas_reset_fusion to process_fw_state_change_wq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_reset_fusion to megasas_complete_cmd_dpc (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_reset_fusion to megasas_detach_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_reset_fusion to megasas_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_reset_fusion to megasas_fusion_ocr_wq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from complete_cmd_fusion to megasas_complete_cmd (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23076: Ignoring function call through function pointer *(cmd_fusion->scmd->scsi_done): (*(cmd_fusion->scmd->scsi_done))(cmd_fusion->scmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from complete_cmd_fusion to process_fw_state_change_wq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from complete_cmd_fusion to megasas_complete_cmd_dpc (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from complete_cmd_fusion to megasas_detach_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from complete_cmd_fusion to megasas_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from complete_cmd_fusion to megasas_fusion_ocr_wq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from complete_cmd_fusion to megasas_complete_cmd_dpc_fusion (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 23495: Ignoring function call through function pointer *(instance->instancet->read_fw_status_reg): tmp = (*(instance->instancet->read_fw_status_reg))(instance->reg_set); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13413: Ignoring function call through function pointer *(instance->instancet->read_fw_status_reg): tmp = (*(instance->instancet->read_fw_status_reg))(reg_set); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from megasas_init_adapter_mfi to megasas_init_adapter_mfi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_wait_for_outstanding to megasas_complete_cmd_dpc (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11214: Ignoring function call through function pointer *(instance->instancet->read_fw_status_reg): tmp___1 = (*(instance->instancet->read_fw_status_reg))(instance->reg_set); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from megasas_wait_for_outstanding to megasas_init_adapter_mfi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11214: Return type of function megasas_reset_bus_host is int, but result is used as type u32 : tmp___1 = megasas_reset_bus_host(instance->reg_set); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from megasas_wait_for_outstanding to megasas_reset_bus_host (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_reset_device to megasas_generic_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21457: Ignoring function call through function pointer *(instance->instancet->read_fw_status_reg): tmp = (*(instance->instancet->read_fw_status_reg))(reg_set); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from megasas_init_adapter_fusion to megasas_init_adapter_mfi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21457: Return type of function megasas_reset_bus_host is int, but result is used as type u32 : tmp = megasas_reset_bus_host(reg_set); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from megasas_init_adapter_fusion to megasas_reset_bus_host (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_init_adapter_fusion to megasas_init_adapter_fusion (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12295: Ignoring function call through function pointer *(instance->instancet->read_fw_status_reg): abs_state = (*(instance->instancet->read_fw_status_reg))(instance->reg_set); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from megasas_transition_to_ready to megasas_init_adapter_mfi (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12295: Return type of function megasas_reset_bus_host is int, but result is used as type u32 : abs_state = megasas_reset_bus_host(instance->reg_set); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from megasas_transition_to_ready to megasas_reset_bus_host (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_transition_to_ready to megasas_init_adapter_fusion (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12295: Return type of function megasas_resume is int, but result is used as type u32 : abs_state = megasas_resume(instance->reg_set); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from megasas_transition_to_ready to megasas_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12357: Ignoring function call through function pointer *(instance->instancet->disable_intr): (*(instance->instancet->disable_intr))(instance); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from megasas_transition_to_ready to process_fw_state_change_wq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_transition_to_ready to megasas_complete_cmd_dpc (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_transition_to_ready to megasas_detach_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_transition_to_ready to megasas_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_transition_to_ready to megasas_fusion_ocr_wq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12458: Ignoring function call through function pointer *(instance->instancet->read_fw_status_reg): curr_abs_state = (*(instance->instancet->read_fw_status_reg))(instance->reg_set); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12458: Return type of function megasas_reset_bus_host is int, but result is used as type u32 : curr_abs_state = megasas_reset_bus_host(instance->reg_set); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 12458: Return type of function megasas_resume is int, but result is used as type u32 : curr_abs_state = megasas_resume(instance->reg_set); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 13373: Ignoring function call through function pointer *(instance->instancet->disable_intr): (*(instance->instancet->disable_intr))(instance); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from megasas_issue_init_mfi to process_fw_state_change_wq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_issue_init_mfi to megasas_complete_cmd_dpc (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_issue_init_mfi to megasas_detach_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_issue_init_mfi to megasas_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_issue_init_mfi to megasas_fusion_ocr_wq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21031: Ignoring function call through function pointer *(instance->instancet->disable_intr): (*(instance->instancet->disable_intr))(instance); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from megasas_ioc_init_fusion to process_fw_state_change_wq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_ioc_init_fusion to megasas_complete_cmd_dpc (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_ioc_init_fusion to megasas_detach_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_ioc_init_fusion to megasas_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_ioc_init_fusion to megasas_fusion_ocr_wq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 21059-21060: Ignoring function call through function pointer *(instance->instancet->fire_cmd): (*(instance->instancet->fire_cmd))(instance, (dma_addr_t )(req_desc.ldv_37409.u.low), req_desc.ldv_37409.u.high, instance->reg_set); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15344: Ignoring function call through function pointer *(instance->instancet->enable_intr): (*(instance->instancet->enable_intr))(instance); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from megasas_resume to process_fw_state_change_wq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_resume to megasas_complete_cmd_dpc (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_resume to megasas_detach_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_resume to megasas_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_resume to megasas_fusion_ocr_wq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21457: Return type of function megasas_resume is int, but result is used as type u32 : tmp = megasas_resume(reg_set); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from megasas_init_adapter_fusion to megasas_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10574: Ignoring function call through function pointer *(instance->instancet->disable_intr): (*(instance->instancet->disable_intr))(instance); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from megasas_do_ocr to process_fw_state_change_wq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_do_ocr to megasas_complete_cmd_dpc (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_do_ocr to megasas_detach_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_do_ocr to megasas_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_do_ocr to megasas_fusion_ocr_wq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 11146-11147: Ignoring function call through function pointer *(instance->instancet->fire_cmd): (*(instance->instancet->fire_cmd))(instance, reset_cmd->frame_phys_addr, 0U, instance->reg_set); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11135: Ignoring function call through function pointer *(reset_cmd->scmd->scsi_done): (*(reset_cmd->scmd->scsi_done))(reset_cmd->scmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from megasas_wait_for_outstanding to process_fw_state_change_wq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_wait_for_outstanding to megasas_detach_one (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_wait_for_outstanding to megasas_shutdown (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_wait_for_outstanding to megasas_fusion_ocr_wq (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_reset_bus_host to megasas_reset_fusion (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from megasas_reset_bus_host to megasas_generic_reset (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11214: Return type of function megasas_reset_device is int, but result is used as type u32 : tmp___1 = megasas_reset_device(instance->reg_set); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from megasas_wait_for_outstanding to megasas_reset_device (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21457: Return type of function megasas_reset_device is int, but result is used as type u32 : tmp = megasas_reset_device(reg_set); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from megasas_init_adapter_fusion to megasas_reset_device (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12295: Return type of function megasas_reset_device is int, but result is used as type u32 : abs_state = megasas_reset_device(instance->reg_set); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from megasas_transition_to_ready to megasas_reset_device (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12458: Return type of function megasas_reset_device is int, but result is used as type u32 : curr_abs_state = megasas_reset_device(instance->reg_set); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from megasas_wait_for_outstanding to megasas_init_adapter_fusion (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11214: Return type of function megasas_resume is int, but result is used as type u32 : tmp___1 = megasas_resume(instance->reg_set); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from megasas_wait_for_outstanding to megasas_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                6150417 (count: 2050141, min: 0, max: 3, avg: 3.00)
Number of global variables:                         6150417 (count: 2050141, min: 0, max: 3, avg: 3.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 2290786
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                6.776s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     4.499s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 3433ms

PredicateCPA statistics
-----------------------
Number of abstractions:            2290783 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  627760 (27%)
  Because of loop head:            19772 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       2290783 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   3
  Times result was 'false':        0 (0%)
Number of coverage checks:         213083
  BDD entailment checks:           213083
Number of SMT sat checks:          3
  trivial:                         3
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          4
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   1947813 (56%)

Time for post operator:                413.306s
  Time for path formula creation:      408.603s
    Actual computation:                328.900s
Time for strengthen operator:            3.084s
  Time for satisfiability checks:        0.000s
Time for prec operator:                167.290s
  Time for abstraction:                 23.932s (Max:     1.138s, Count: 2290783)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 1.074s
  Time for BDD entailment checks:        0.680s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 2503874, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             2.212s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.247s
  Time for transition matches:                         6.124s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      3204170 (count: 3204170, min: 1, max: 1, avg: 1.00) [1 x 3204170]

CPA algorithm statistics
------------------------
Number of iterations:            2077421
Max size of waitlist:            186
Average size of waitlist:        155
Number of computed successors:   2290786
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         213083
Number of times breaked:         3

Total time for CPA algorithm:       719.032s (Max:   700.683s)
  Time for choose from waitlist:      2.424s
  Time for precision adjustment:    190.869s
  Time for transfer relation:       494.499s
  Time for merge operator:            0.595s
  Time for stop operator:             6.019s
  Time for adding to reached set:     9.941s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                1544 (count: 3, min: 491, max: 531, avg: 514.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.002s
  Counterexample analysis:                2.553s (Max:     0.906s, Calls: 3)
    Refinement sat check:                 1.846s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.001s
  Building the counterexample trace:                   2.553s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.003s
  ARG update:                                          0.000s

Length of refined path (in blocks):                    1225 (count: 3, min: 369, max: 486, avg: 408.33)
Number of affected states:                               52 (count: 3, min: 16, max: 19, avg: 17.33)
Length (states) of path with itp 'true':               1170 (count: 3, min: 352, max: 466, avg: 390.00)
Length (states) of path with itp non-trivial itp:        52 (count: 3, min: 16, max: 19, avg: 17.33)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              49 (count: 3, min: 15, max: 18, avg: 16.33)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 20734
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 9188.67
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     722.082s
Time for refinements:                 3.050s
Average time for refinement:          1.016s
Max time for refinement:              1.059s

Code Coverage
-----------------------------
  Function coverage:      0.636
  Visited lines:          13003
  Total lines:            17887
  Line coverage:          0.727
  Visited conditions:     1863
  Total conditions:       4562
  Condition coverage:     0.408

CPAchecker general statistics
-----------------------------
Number of program locations:     10095
Number of CFA edges:             15724
Number of relevant variables:    2502
Number of functions:             297
Number of loops:                 109
Size of reached set:             2050141
  Size of final wait list        126

Time for analysis setup:         10.067s
  Time for loading CPAs:          0.787s
  Time for loading parser:        0.541s
  Time for CFA construction:      8.665s
    Time for parsing file(s):     2.047s
    Time for AST to CFA:          3.539s
    Time for CFA sanity check:    0.527s
    Time for post-processing:     2.169s
      Time for var class.:        0.000s
Time for Analysis:              722.082s
CPU time for analysis:          880.930s
Total time for CPAchecker:      732.154s
Total CPU time for CPAchecker:  900.070s

Time for Garbage Collector:     144.257s (in 44 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5734MB (  5468 MiB) max;   3095MB (  2952 MiB) avg;   7984MB (  7614 MiB) peak
Used non-heap memory:             29MB (    27 MiB) max;     26MB (    25 MiB) avg;     29MB (    27 MiB) peak
Used in PS Old Gen pool:        4159MB (  3966 MiB) max;   1738MB (  1658 MiB) avg;   4159MB (  3966 MiB) peak
Allocated heap memory:          8821MB (  8413 MiB) max;   5393MB (  5143 MiB) avg
Allocated non-heap memory:        53MB (    50 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  13731MB ( 13095 MiB) max;  13662MB ( 13029 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
