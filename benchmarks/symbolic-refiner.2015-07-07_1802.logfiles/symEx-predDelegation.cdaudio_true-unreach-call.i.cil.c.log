scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -timelimit 900s -stats -spec ../svcomp15/ntdrivers/ALL.prp ../svcomp15/ntdrivers/cdaudio_true-unreach-call.i.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-162497670_tempdir
The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#2 to a deferred allocation escaped form tracking! Allocating array void[904]. (in the following line(s):
 line 7562:	N3907 -{irp.AssociatedIrp.SystemBuffer = malloc(904);}-> N3908) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#3 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#4 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#5 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#6 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#7 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#8 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#9 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#10 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#11 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#12 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#13 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#14 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#15 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#16 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#17 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#18 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#19 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#20 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#21 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#22 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#23 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#24 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#25 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#26 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#27 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#28 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#29 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#30 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#31 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

The void * pointer __VERIFIER_successful_alloc_*void#32 to a deferred allocation escaped form tracking! Allocating array void[4]. (in the following line(s):
 line 7721:	N4033 -{tmp = malloc(i);}-> N4035) (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerEscape, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                7186944 (count: 359319, min: 0, max: 26, avg: 20.00)
Number of global variables:                         5389755 (count: 359319, min: 0, max: 15, avg: 15.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  517835
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                5.325s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     1.846s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 4
Most constraints before refinement in state: 4
Constraints after refinement in state: 7360
Constraints before refinement in state: 29950
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 1085ms

PredicateCPA statistics
-----------------------
Number of abstractions:            517808 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  43033 (8%)
  Because of loop head:            8397 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       517808 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   27
  Times result was 'false':        0 (0%)
Number of coverage checks:         55070
  BDD entailment checks:           55070
Number of SMT sat checks:          27
  trivial:                         27
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          57
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   553688 (67%)

Time for post operator:                 30.092s
  Time for path formula creation:       28.828s
    Actual computation:                 24.923s
Time for strengthen operator:            0.801s
  Time for satisfiability checks:        0.000s
Time for prec operator:                 15.037s
  Time for abstraction:                  5.491s (Max:     0.013s, Count: 517808)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.369s
  Time for BDD entailment checks:        0.271s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 572963, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.502s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.339s
  Time for transition matches:                         1.766s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       906791 (count: 906791, min: 1, max: 1, avg: 1.00) [1 x 906791]

CPA algorithm statistics
------------------------
Number of iterations:            442198
Max size of waitlist:            16311
Average size of waitlist:        6330
Number of computed successors:   517835
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         55070
Number of times breaked:         27

Total time for CPA algorithm:       868.114s (Max:   838.112s)
  Time for choose from waitlist:      0.602s
  Time for precision adjustment:     25.159s
  Time for transfer relation:       136.656s
  Time for merge operator:          165.182s
  Time for stop operator:           534.198s
  Time for adding to reached set:     2.348s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                2700 (count: 27, min: 35, max: 163, avg: 100.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.030s
  Counterexample analysis:                1.230s (Max:     0.106s, Calls: 27)
    Refinement sat check:                 0.768s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.005s
  Building the counterexample trace:                   1.230s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.025s
  ARG update:                                          0.000s

Length of refined path (in blocks):                    2401 (count: 27, min: 25, max: 159, avg: 88.93)
Number of affected states:                              835 (count: 27, min: 1, max: 139, avg: 30.93)
Length (states) of path with itp 'true':               1539 (count: 27, min: 1, max: 139, avg: 57.00)
Length (states) of path with itp non-trivial itp:       835 (count: 27, min: 1, max: 139, avg: 30.93)
Length (states) of path with itp 'false':                27 (count: 27, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          90 (count: 27, min: 0, max: 8, avg: 3.33)
Equal non-trivial interpolants along paths:             718 (count: 27, min: 0, max: 133, avg: 26.59)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 9156
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 3832.37
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     870.220s
Time for refinements:                 2.106s
Average time for refinement:          0.078s
Max time for refinement:              0.151s

Code Coverage
-----------------------------
  Function coverage:      0.207
  Visited lines:          3327
  Total lines:            6461
  Line coverage:          0.515
  Visited conditions:     87
  Total conditions:       924
  Condition coverage:     0.094

CPAchecker general statistics
-----------------------------
Number of program locations:     2222
Number of CFA edges:             2951
Number of relevant variables:    401
Number of functions:             87
Number of loops:                 19
Size of reached set:             359319
  Number of reached locations:   276 (12%)
    Avg states per location:     1301
    Max states per location:     8158 (at node N4472)
  Number of reached functions:   18 (21%)
  Number of partitions:          253167
    Avg size of partitions:      1
    Max size of partitions:      8143 (with key [N274 (before lines 3221-3243), Function CdAudioStartDevice called from node N558, stack depth 3 [4cceb5f3], stack [main, CdAudioPnp, CdAudioStartDevice], Init])
  Number of target states:       0
  Size of final wait list        16312

Time for analysis setup:          4.699s
  Time for loading CPAs:          0.587s
  Time for loading parser:        0.643s
  Time for CFA construction:      3.392s
    Time for parsing file(s):     0.897s
    Time for AST to CFA:          1.408s
    Time for CFA sanity check:    0.216s
    Time for post-processing:     0.707s
      Time for var class.:        0.000s
Time for Analysis:              870.220s
CPU time for analysis:          891.770s
Total time for CPAchecker:      874.925s
Total CPU time for CPAchecker:  900.390s

Time for Garbage Collector:       7.809s (in 58 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3509MB (  3347 MiB) max;   1567MB (  1494 MiB) avg;   4197MB (  4002 MiB) peak
Used non-heap memory:             27MB (    26 MiB) max;     27MB (    25 MiB) avg;     27MB (    26 MiB) peak
Used in PS Old Gen pool:         846MB (   807 MiB) max;    498MB (   475 MiB) avg;    846MB (   807 MiB) peak
Allocated heap memory:          4758MB (  4538 MiB) max;   3493MB (  3331 MiB) avg
Allocated non-heap memory:        28MB (    27 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:  13602MB ( 12972 MiB) max;  13598MB ( 12968 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
