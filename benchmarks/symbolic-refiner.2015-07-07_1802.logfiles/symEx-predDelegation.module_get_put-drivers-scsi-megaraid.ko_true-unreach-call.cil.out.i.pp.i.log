scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.0/ALL.prp ../svcomp15/ldv-linux-3.0/module_get_put-drivers-scsi-megaraid.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-252157584_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6680: Function pointer *(ops->alloc_coherent) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6735: Function pointer *(ops->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6504-6505: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6554: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5603: Function pointer *(pv_cpu_ops.io_delay) with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 9353: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5603: Ignoring function call through function pointer *(pv_cpu_ops.io_delay): (*(pv_cpu_ops.io_delay))(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6735: Ignoring function call through function pointer *(ops->free_coherent): (*(ops->free_coherent))(dev, size, vaddr, bus); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6680: Ignoring function call through function pointer *(ops->alloc_coherent): memory = (*(ops->alloc_coherent))(dev, size, dma_handle, tmp___1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 6504-6505: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, (struct page *)(1152897315351035904UL + (tmp___2 >> 12)), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6554: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7725: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8072: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8031: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7852: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7805: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7711: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7679: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6077: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                  54705 (count: 54707, min: 0, max: 1, avg: 1.00)
Number of global variables:                           54705 (count: 54707, min: 0, max: 1, avg: 1.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  118718
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.444s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.571s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 263ms

PredicateCPA statistics
-----------------------
Number of abstractions:            118717 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26992 (23%)
  Because of loop head:            3944 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       118717 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   1
  Times result was 'false':        0 (0%)
Number of coverage checks:         9304
  BDD entailment checks:           9304
Number of SMT sat checks:          1
  trivial:                         1
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          2
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   178912 (83%)

Time for post operator:                 11.691s
  Time for path formula creation:       11.276s
    Actual computation:                 10.041s
Time for strengthen operator:            0.196s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  4.360s
  Time for abstraction:                  1.726s (Max:     0.012s, Count: 118717)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.111s
  Time for BDD entailment checks:        0.087s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 128025, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.166s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.015s
  Time for transition matches:                         0.434s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       175414 (count: 175414, min: 1, max: 1, avg: 1.00) [1 x 175414]

CPA algorithm statistics
------------------------
Number of iterations:            109414
Max size of waitlist:            45
Average size of waitlist:        25
Number of computed successors:   118718
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         9304
Number of times breaked:         1

Total time for CPA algorithm:        26.501s (Max:    20.026s)
  Time for choose from waitlist:      0.215s
  Time for precision adjustment:      6.266s
  Time for transfer relation:        17.609s
  Time for merge operator:            0.067s
  Time for stop operator:             0.531s
  Time for adding to reached set:     0.673s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  54 (count: 1, min: 54, max: 54, avg: 54.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.753s
  Counterexample analysis:                0.043s (Max:     0.043s, Calls: 1)
    Refinement sat check:                 0.031s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.043s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.002s
  Precision update:                                    0.006s
  ARG update:                                          0.000s

Length of refined path (in blocks):                      50 (count: 1, min: 50, max: 50, avg: 50.00)
Number of affected states:                               48 (count: 1, min: 48, max: 48, avg: 48.00)
Length (states) of path with itp 'true':                  1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:        48 (count: 1, min: 48, max: 48, avg: 48.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              47 (count: 1, min: 47, max: 47, avg: 47.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 54709
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 54709.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      27.329s
Time for refinements:                 0.827s
Average time for refinement:          0.827s
Max time for refinement:              0.827s

Code Coverage
-----------------------------
  Function coverage:      0.808
  Visited lines:          8030
  Total lines:            9158
  Line coverage:          0.877
  Visited conditions:     781
  Total conditions:       948
  Condition coverage:     0.824

CPAchecker general statistics
-----------------------------
Number of program locations:     3104
Number of CFA edges:             4166
Number of relevant variables:    981
Number of functions:             146
Number of loops:                 38
Size of reached set:             54707
  Number of reached locations:   2455 (79%)
    Avg states per location:     22
    Max states per location:     921 (at node N27)
  Number of reached functions:   118 (81%)
  Number of partitions:          54555
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N4594 (exit of function megaraid_probe_one in lines 14003-14688), Function megaraid_probe_one called from node N5241, stack depth 2 [200bda43], stack [main, megaraid_probe_one], Init])
  Number of target states:       0

Time for analysis setup:          6.141s
  Time for loading CPAs:          0.764s
  Time for loading parser:        0.669s
  Time for CFA construction:      4.628s
    Time for parsing file(s):     1.110s
    Time for AST to CFA:          2.308s
    Time for CFA sanity check:    0.147s
    Time for post-processing:     0.850s
      Time for var class.:        0.000s
Time for Analysis:               27.329s
CPU time for analysis:           40.470s
Total time for CPAchecker:       33.475s
Total CPU time for CPAchecker:   52.240s

Time for Garbage Collector:       0.715s (in 4 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                881MB (   840 MiB) max;    350MB (   333 MiB) avg;    933MB (   890 MiB) peak
Used non-heap memory:             27MB (    25 MiB) max;     23MB (    22 MiB) avg;     27MB (    26 MiB) peak
Used in PS Old Gen pool:          30MB (    29 MiB) max;      9MB (     9 MiB) avg;     30MB (    29 MiB) peak
Allocated heap memory:          2553MB (  2435 MiB) max;   2110MB (  2012 MiB) avg
Allocated non-heap memory:        28MB (    27 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:  13597MB ( 12967 MiB) max;  13594MB ( 12964 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
