scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.16-rc1/ALL.prp ../svcomp15/ldv-linux-3.16-rc1/43_2a_consumption_linux-3.16-rc1.tar.xz-43_2a-drivers--net--ethernet--qlogic--netxen--netxen_nic.ko-entry_point_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_714624149_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 25356: Function pointer *(ops->alloc) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 25403: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14889: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 14796-14797: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 25159-25160: Function pointer *(ops->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14931: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 25251: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14843: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 25206: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 16286: Ignoring function call through function pointer *(adapter->io_write): (*(adapter->io_write))(adapter, tx_ring->crb_cmd_producer, tx_ring->producer); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 18338: Ignoring function call through function pointer *(adapter->stop_port): (*(adapter->stop_port))(adapter); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9071: Ignoring function call through function pointer *(adapter->crb_read): tmp = (*(adapter->crb_read))(adapter, ((unsigned long)((sem + 14336) * 8)) + 101711872UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from netxen_issue_cmd to netxen_pcie_sem_lock (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 31984: Ignoring function call through function pointer *(adapter->crb_write): (*(adapter->crb_write))(adapter, 136323624UL, signature); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from netxen_nic_hw_write_wx_2M to netxen_pcie_sem_lock (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9119: Ignoring function call through function pointer *(adapter->crb_read): (*(adapter->crb_read))(adapter, ((unsigned long)((sem * 8) + 114692)) + 101711872UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9119: Return type of function netxen_nic_set_settings is int, but result is used as type u32 : netxen_nic_set_settings(adapter, ((unsigned long)((sem * 8) + 114692)) + 101711872UL); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from netxen_pcie_sem_unlock to netxen_nic_set_settings (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from nx_dev_request_reset to netxen_pcie_sem_lock (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 20821: Ignoring function call through function pointer *(adapter->crb_read): state = (*(adapter->crb_read))(adapter, 136323392UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 20821: Return type of function netxen_nic_set_settings is int, but result is used as type u32 : state = netxen_nic_set_settings(adapter, 136323392UL); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from nx_dev_request_reset to netxen_nic_set_settings (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 20821: Return type of function netxen_set_dump is int, but result is used as type u32 : state = netxen_set_dump(adapter, 136323392UL); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from nx_dev_request_reset to netxen_set_dump (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from netxen_nic_hw_read_wx_2M to netxen_pcie_sem_lock (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from netxen_nic_hw_read_wx_2M to netxen_pcie_sem_unlock (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9071: Return type of function netxen_nic_set_settings is int, but result is used as type u32 : tmp = netxen_nic_set_settings(adapter, ((unsigned long)((sem + 14336) * 8)) + 101711872UL); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from netxen_pcie_sem_lock to netxen_nic_set_settings (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9119: Return type of function netxen_set_dump is int, but result is used as type u32 : netxen_set_dump(adapter, ((unsigned long)((sem * 8) + 114692)) + 101711872UL); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Skipping recursive function call from netxen_pcie_sem_unlock to netxen_set_dump (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from netxen_pcie_sem_unlock to netxen_nic_hw_read_wx_2M (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 21830: Ignoring function call through function pointer *(adapter->pci_mem_read): tmp___0 = (*(adapter->pci_mem_read))(adapter, (u64 )offset, &data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11129: Ignoring function call through function pointer *(adapter->pci_set_window): ret = (*(adapter->pci_set_window))(adapter, off, &start); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from netxen_nic_pci_mem_access_direct to netxen_nic_pci_mem_read_128M (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16331: Ignoring function call through function pointer *(adapter->io_write): (*(adapter->io_write))(adapter, sds_ring->crb_intr_mask, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17131: Ignoring function call through function pointer *(adapter->macaddr_set): (*(adapter->macaddr_set))(adapter, (u8 *)(&(addr->sa_data))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 21945: Ignoring function call through function pointer *(adapter->crb_read): val = (*(adapter->crb_read))(adapter, 136323672UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9948: Ignoring function call through function pointer *(adapter->set_promisc): (*(adapter->set_promisc))(adapter, mode); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11964: Ignoring function call through function pointer *(adapter->crb_write): (*(adapter->crb_write))(adapter, 107479068UL, (u32 )new_mtu); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from netxen_nic_set_mtu_xgb to netxen_nic_hw_write_wx_2M (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11961: Ignoring function call through function pointer *(adapter->crb_write): (*(adapter->crb_write))(adapter, 107413532UL, (u32 )new_mtu); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 9133-9134: Ignoring function call through function pointer *(adapter->crb_write): (*(adapter->crb_write))(adapter, ((unsigned long)(port * 65536)) + 107413508UL, 5191U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from netxen_niu_xg_init_port to netxen_nic_hw_write_wx_2M (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 9136-9137: Ignoring function call through function pointer *(adapter->crb_write): (*(adapter->crb_write))(adapter, ((unsigned long)(port * 65536)) + 107413504UL, 5U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Error: line 9948: Unrecognized C code (Impossible structure assignment due to incompatible types: assignment of UnaliasedLocation{variable=netxen_p3_nic_set_multi::mode} with type unsigned int to UnaliasedLocation{variable=netxen_nic_suspend::state} with type struct pm_message): netxen_nic_suspend(adapter, mode); (line was originally pointer call(netxen_nic_suspend) (*(adapter->set_promisc))(adapter, mode);) (AssignmentHandler.makeDestructiveAssignment, SEVERE)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 157995 (count: 13371, min: 0, max: 25, avg: 11.82)
Number of global variables:                          133690 (count: 13371, min: 0, max: 10, avg: 10.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                   90423
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.868s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.373s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 3
Most constraints before refinement in state: 3
Constraints after refinement in state: 3676
Constraints before refinement in state: 4132
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 192ms

PredicateCPA statistics
-----------------------
Number of abstractions:            90408 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18385 (20%)
  Because of loop head:            977 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       90408 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   15
  Times result was 'false':        0 (0%)
Number of coverage checks:         8359
  BDD entailment checks:           8359
Number of SMT sat checks:          15
  trivial:                         15
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          38
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   145384 (88%)

Time for post operator:                 14.666s
  Time for path formula creation:       14.352s
    Actual computation:                 12.914s
Time for strengthen operator:            0.147s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  5.173s
  Time for abstraction:                  2.236s (Max:     0.182s, Count: 90408)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.137s
  Time for BDD entailment checks:        0.122s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 98821, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.150s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.074s
  Time for transition matches:                         0.401s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       155949 (count: 155949, min: 1, max: 1, avg: 1.00) [1 x 155949]

CPA algorithm statistics
------------------------
Number of iterations:            80556
Max size of waitlist:            180
Average size of waitlist:        36
Number of computed successors:   90423
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         8359
Number of times breaked:         15

Total time for CPA algorithm:        30.687s (Max:     5.071s)
  Time for choose from waitlist:      0.200s
  Time for precision adjustment:      7.008s
  Time for transfer relation:        21.525s
  Time for merge operator:            0.080s
  Time for stop operator:             0.511s
  Time for adding to reached set:     0.363s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):               10912 (count: 15, min: 383, max: 1121, avg: 727.47)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  37.370s
  Counterexample analysis:               36.798s (Max:     4.012s, Calls: 15)
    Refinement sat check:                25.171s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.009s
  Building the counterexample trace:                  36.800s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.020s
  ARG update:                                          0.000s

Length of refined path (in blocks):                    7396 (count: 15, min: 262, max: 1117, avg: 493.07)
Number of affected states:                              902 (count: 15, min: 2, max: 737, avg: 60.13)
Length (states) of path with itp 'true':               6479 (count: 15, min: 1, max: 1111, avg: 431.93)
Length (states) of path with itp non-trivial itp:       902 (count: 15, min: 2, max: 737, avg: 60.13)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          19 (count: 15, min: 0, max: 9, avg: 1.27)
Equal non-trivial interpolants along paths:             868 (count: 15, min: 0, max: 736, avg: 57.87)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 10969
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 4580.60
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      68.146s
Time for refinements:                37.459s
Average time for refinement:          2.497s
Max time for refinement:              4.064s

Code Coverage
-----------------------------
  Function coverage:      0.253
  Visited lines:          10930
  Total lines:            19704
  Line coverage:          0.555
  Visited conditions:     749
  Total conditions:       8514
  Condition coverage:     0.088

CPAchecker general statistics
-----------------------------
Number of program locations:     17180
Number of CFA edges:             28850
Number of relevant variables:    3188
Number of functions:             521
Number of loops:                 123
Size of reached set:             13371
  Number of reached locations:   1954 (11%)
    Avg states per location:     6
    Max states per location:     103 (at node N86)
  Number of reached functions:   132 (25%)
  Number of partitions:          12785
    Avg size of partitions:      1
    Max size of partitions:      16 (with key [N12896 (before line 30409), Function netxen_nic_set_ringparam called from node N13752, stack depth 3 [6898920c], stack [main, ldv_main_exported_1, netxen_nic_set_ringparam], Init])
  Number of target states:       0
  Size of final wait list        167

Time for analysis setup:         10.528s
  Time for loading CPAs:          0.878s
  Time for loading parser:        0.519s
  Time for CFA construction:      9.040s
    Time for parsing file(s):     2.659s
    Time for AST to CFA:          2.542s
    Time for CFA sanity check:    0.319s
    Time for post-processing:     3.271s
      Time for var class.:        0.000s
Time for Analysis:               68.146s
CPU time for analysis:           82.810s
Total time for CPAchecker:       78.680s
Total CPU time for CPAchecker:  102.490s

Time for Garbage Collector:       0.548s (in 4 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               1925MB (  1836 MiB) max;    714MB (   681 MiB) avg;   1925MB (  1836 MiB) peak
Used non-heap memory:             28MB (    27 MiB) max;     25MB (    24 MiB) avg;     28MB (    27 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          3611MB (  3444 MiB) max;   2889MB (  2755 MiB) avg
Allocated non-heap memory:        29MB (    28 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:  13995MB ( 13347 MiB) max;  13754MB ( 13117 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
