scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner -setprop cpa.value.symbolic.refinement.strategy=CONSTRAINTS_FIRST -setprop cpa.constraints.lessOrEqualType=SUBSET -setprop cegar.refiner=cpa.value.symbolic.refiner.delegation.SymbolicDelegatingRefiner -setprop cpa.value.refinement.pathSlicing=false -setprop cpa.value.refinement.prefixPreference=NONE -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--md--dm-snapshot.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-499384361_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 10752: Function pointer *(type->ctr) with type int (*)(struct dm_exception_store *, unsigned int, char **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8706: Function pointer *fn with type int (*)(struct dm_target *, struct dm_dev *, sector_t , sector_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8268: Function pointer *fn with type int (*)(struct dm_target *, struct dm_dev *, sector_t , sector_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8274: Function pointer *fn with type int (*)(struct dm_target *, struct dm_dev *, sector_t , sector_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Skipping recursive function call from snapshot_map to __find_pending_exception (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_exception_store_destroy to snapshot_dtr (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 12025: Ignoring call via function pointer insert_exceptions::callback for which no suitable target was found in line: r = (*callback)(callback_context, (chunk_t )(e.old_chunk), (chunk_t )(e.new_chunk)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from insert_exceptions to persistent_read_metadata (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8706: Ignoring call via function pointer origin_iterate_devices::fn for which no suitable target was found in line: tmp = (*fn)(ti, dev, 0UL, ti->len, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8268: Ignoring call via function pointer snapshot_iterate_devices::fn for which no suitable target was found in line: r = (*fn)(ti, snap->origin, 0UL, ti->len, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8274: Ignoring call via function pointer snapshot_iterate_devices::fn for which no suitable target was found in line: r = (*fn)(ti, snap->cow, 0UL, tmp, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from origin_write_extent to __origin_write (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from snapshot_merge_map to do_origin (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __find_pending_exception to origin_map (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8706: Function pointer origin_iterate_devices::fn points to dm_add_exception, but no corresponding call edge was created during preprocessing. Ignoring function pointer call: tmp = (*fn)(ti, dev, 0UL, ti->len, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8268: Function pointer snapshot_iterate_devices::fn points to dm_add_exception, but no corresponding call edge was created during preprocessing. Ignoring function pointer call: r = (*fn)(ti, snap->origin, 0UL, ti->len, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8274: Function pointer snapshot_iterate_devices::fn points to dm_add_exception, but no corresponding call edge was created during preprocessing. Ignoring function pointer call: r = (*fn)(ti, snap->cow, 0UL, tmp, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from snapshot_dtr to dm_exception_store_destroy (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __invalidate_snapshot to snapshot_merge_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from do_origin to __origin_write (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __invalidate_snapshot to snapshot_dtr (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __find_pending_exception to snapshot_map (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __origin_write to __find_pending_exception (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __origin_write to __invalidate_snapshot (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from snapshot_map to __invalidate_snapshot (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from origin_map to do_origin (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11015: Ignoring call via function pointer transient_commit_exception::callback for which no suitable target was found in line: (*callback)(callback_context, 1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from __find_pending_exception to snapshot_merge_map (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from dm_exception_store_destroy to snapshot_merge_resume (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                1827030 (count: 602987, min: 0, max: 8, avg: 3.03)
Number of global variables:                         1809318 (count: 602987, min: 0, max: 4, avg: 3.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  846353
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                2.041s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     1.389s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 1
Constraints after refinement in state: 0
Constraints before refinement in state: 2672
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 978ms

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.399s
  Time for transition matches:                         1.858s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1298135 (count: 1298135, min: 1, max: 1, avg: 1.00) [1 x 1298135]

CPA algorithm statistics
------------------------
Number of iterations:            777864
Max size of waitlist:            344
Average size of waitlist:        56
Number of computed successors:   846353
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         68305
Number of times breaked:         12

Total time for CPA algorithm:        46.735s (Max:    25.834s)
  Time for choose from waitlist:      0.722s
  Time for precision adjustment:      6.393s
  Time for transfer relation:        28.596s
  Time for stop operator:             5.028s
  Time for adding to reached set:     2.162s

SymbolicDelegatingRefiner statistics
------------------------------------
Explicit refinements: 12
Successful explicit refinements: 12
Symbolic refinements: 0
Successful symbolic refinements: 0
Overall explicit refinement time: 7562ms
Average explicit refinement time: 630ms
Overall symbolic refinement time: 0ms
Average symbolic refinement time: 0ms

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 68161
Max. size of reached set after ref.:  67822
Avg. size of reached set before ref.: 25779.25
Avg. size of reached set after ref.:  11190.75

Total time for CEGAR algorithm:      54.423s
Time for refinements:                 7.562s
Average time for refinement:          0.630s
Max time for refinement:              1.965s

Code Coverage
-----------------------------
  Function coverage:      0.767
  Visited lines:          7862
  Total lines:            8216
  Line coverage:          0.957
  Visited conditions:     1093
  Total conditions:       1208
  Condition coverage:     0.905

CPAchecker general statistics
-----------------------------
Number of program locations:     3624
Number of CFA edges:             5107
Number of relevant variables:    1135
Number of functions:             249
Number of loops:                 32
Size of reached set:             602987
  Number of reached locations:   3139 (87%)
    Avg states per location:     192
    Max states per location:     3512 (at node N283)
  Number of reached functions:   191 (77%)
  Number of partitions:          598478
    Avg size of partitions:      1
    Max size of partitions:      257 (with key [N461 (before line 5265), Function init_origin_hash called from node N2579, stack depth 3 [790a3700], stack [main, dm_snapshot_init, init_origin_hash], Init])
  Number of target states:       0

Time for analysis setup:          4.528s
  Time for loading CPAs:          0.498s
  Time for loading parser:        0.651s
  Time for CFA construction:      3.302s
    Time for parsing file(s):     0.889s
    Time for AST to CFA:          1.067s
    Time for CFA sanity check:    0.166s
    Time for post-processing:     0.949s
      Time for var class.:        0.000s
Time for Analysis:               54.423s
CPU time for analysis:           67.680s
Total time for CPAchecker:       58.955s
Total CPU time for CPAchecker:   75.660s

Time for Garbage Collector:       2.388s (in 7 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3351MB (  3196 MiB) max;   1067MB (  1017 MiB) avg;   3772MB (  3598 MiB) peak
Used non-heap memory:             24MB (    23 MiB) max;     23MB (    22 MiB) avg;     25MB (    24 MiB) peak
Used in PS Old Gen pool:         411MB (   392 MiB) max;     85MB (    81 MiB) avg;    411MB (   392 MiB) peak
Allocated heap memory:          4774MB (  4553 MiB) max;   3499MB (  3337 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:  13597MB ( 12967 MiB) max;  13595MB ( 12965 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
