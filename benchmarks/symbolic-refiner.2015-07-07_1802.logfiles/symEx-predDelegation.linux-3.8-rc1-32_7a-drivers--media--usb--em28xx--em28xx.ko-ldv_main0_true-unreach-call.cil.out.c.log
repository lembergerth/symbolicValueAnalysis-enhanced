scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/linux-3.8-rc1-32_7a-drivers--media--usb--em28xx--em28xx.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-556329133_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 12798: Function pointer *(dev->em28xx_read_reg_req_len) with type int (*)(struct em28xx *, u8 , u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12810: Function pointer *(dev->em28xx_read_reg_req) with type int (*)(struct em28xx *, u8 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12746: Function pointer *(dev->em28xx_write_regs_req) with type int (*)(struct em28xx *, u8 , u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12767: Function pointer *(dev->em28xx_read_reg_req) with type int (*)(struct em28xx *, u8 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12460: Function pointer *(dev->em28xx_write_regs) with type int (*)(struct em28xx *, u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 12520-12521: Function pointer *(dev->em28xx_read_reg_req_len) with type int (*)(struct em28xx *, u8 , u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 12382-12383: Function pointer *(dev->em28xx_write_regs) with type int (*)(struct em28xx *, u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12670: Function pointer *(dev->em28xx_read_reg_req_len) with type int (*)(struct em28xx *, u8 , u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 12590-12591: Function pointer *(dev->em28xx_write_regs_req) with type int (*)(struct em28xx *, u8 , u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18766: Function pointer *(dev->em28xx_read_reg_req_len) with type int (*)(struct em28xx *, u8 , u16 , char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 10261: Ignoring function call through function pointer *(__sd___0->ops->core->s_register): (*(__sd___0->ops->core->s_register))(__sd___0, reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10230: Ignoring function call through function pointer *(__sd->ops->core->s_register): (*(__sd->ops->core->s_register))(__sd, reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10114: Ignoring function call through function pointer *(__sd___0->ops->core->g_register): (*(__sd___0->ops->core->g_register))(__sd___0, reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10083: Ignoring function call through function pointer *(__sd->ops->core->g_register): (*(__sd->ops->core->g_register))(__sd, reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 18766: Ignoring function call through function pointer *(dev->em28xx_read_reg_req_len): ret = (*(dev->em28xx_read_reg_req_len))(dev, 0, 64, (char *)(&val), 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9948: Ignoring function call through function pointer *(__sd->ops->core->g_chip_ident): (*(__sd->ops->core->g_chip_ident))(__sd, chip); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9876: Ignoring function call through function pointer *(__sd___0->ops->tuner->g_frequency): (*(__sd___0->ops->tuner->g_frequency))(__sd___0, &new_freq); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9849: Ignoring function call through function pointer *(__sd->ops->tuner->s_frequency): (*(__sd->ops->tuner->s_frequency))(__sd, f); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10617: Ignoring function call through function pointer *(__sd->ops->tuner->s_tuner): (*(__sd->ops->tuner->s_tuner))(__sd, t); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10567: Ignoring function call through function pointer *(__sd->ops->tuner->g_tuner): (*(__sd->ops->tuner->g_tuner))(__sd, t); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10909: Ignoring function call through function pointer *(__sd->ops->core->s_power): (*(__sd->ops->core->s_power))(__sd, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 20498: Ignoring function call through function pointer *(__sd___1->ops->video->s_stream): (*(__sd___1->ops->video->s_stream))(__sd___1, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from em28xx_wake_i2c to em28xx_start_analog_streaming (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 20470-20471: Ignoring function call through function pointer *(__sd___0->ops->video->s_routing): (*(__sd___0->ops->video->s_routing))(__sd___0, (((struct em28xx_input *)(&((em28xx_boards[dev->model]).input))) + __CPAchecker_TMP_4)->vmux, 0U, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 20441: Ignoring function call through function pointer *(__sd->ops->core->reset): (*(__sd->ops->core->reset))(__sd, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8343: Ignoring function call through function pointer *(__sd->ops->tuner->s_frequency): (*(__sd->ops->tuner->s_frequency))(__sd, (const struct v4l2_frequency *)(&f)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from em28xx_start_analog_streaming to em28xx_wake_i2c (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10752: Ignoring function call through function pointer *(__sd->ops->tuner->s_radio): (*(__sd->ops->tuner->s_radio))(__sd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from em28xx_v4l2_open to em28xx_v4l2_open (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                 102277 (count: 39391, min: 0, max: 5, avg: 2.60)
Number of global variables:                           78778 (count: 39391, min: 0, max: 2, avg: 2.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                  121285
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.508s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.304s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 164ms

PredicateCPA statistics
-----------------------
Number of abstractions:            121281 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  17295 (14%)
  Because of loop head:            2070 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       121281 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   4
  Times result was 'false':        0 (0%)
Number of coverage checks:         17390
  BDD entailment checks:           17390
Number of SMT sat checks:          4
  trivial:                         4
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          7
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   160215 (76%)

Time for post operator:                 40.282s
  Time for path formula creation:       39.996s
    Actual computation:                 39.049s
Time for strengthen operator:            0.139s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  8.481s
  Time for abstraction:                  4.696s (Max:     0.190s, Count: 121281)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.147s
  Time for BDD entailment checks:        0.122s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 138683, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.093s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.680s
  Time for transition matches:                         0.285s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       162397 (count: 162397, min: 1, max: 1, avg: 1.00) [1 x 162397]

CPA algorithm statistics
------------------------
Number of iterations:            103723
Max size of waitlist:            69
Average size of waitlist:        53
Number of computed successors:   121285
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         17390
Number of times breaked:         4

Total time for CPA algorithm:        58.551s (Max:    38.919s)
  Time for choose from waitlist:      0.171s
  Time for precision adjustment:     10.054s
  Time for transfer relation:        46.209s
  Time for merge operator:            0.124s
  Time for stop operator:             0.625s
  Time for adding to reached set:     0.421s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                 417 (count: 4, min: 63, max: 134, avg: 104.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  48.449s
  Counterexample analysis:               43.141s (Max:    38.641s, Calls: 4)
    Refinement sat check:                42.234s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.001s
  Building the counterexample trace:                  43.141s
  Extracting precise counterexample:                   4.608s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.007s
  ARG update:                                          0.000s

Length of refined path (in blocks):                     244 (count: 3, min: 59, max: 97, avg: 81.33)
Number of affected states:                              150 (count: 3, min: 4, max: 92, avg: 50.00)
Length (states) of path with itp 'true':                 91 (count: 3, min: 4, max: 83, avg: 30.33)
Length (states) of path with itp non-trivial itp:       150 (count: 3, min: 4, max: 92, avg: 50.00)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 3, min: 0, max: 3, avg: 1.00)
Equal non-trivial interpolants along paths:             144 (count: 3, min: 0, max: 91, avg: 48.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 57605
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 25974.75
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     107.077s
Time for refinements:                48.526s
Average time for refinement:         12.131s
Max time for refinement:             43.273s

Code Coverage
-----------------------------
  Function coverage:      0.327
  Visited lines:          10081
  Total lines:            14758
  Line coverage:          0.683
  Visited conditions:     826
  Total conditions:       2372
  Condition coverage:     0.348

CPAchecker general statistics
-----------------------------
Number of program locations:     6003
Number of CFA edges:             8298
Number of relevant variables:    1651
Number of functions:             312
Number of loops:                 94
Size of reached set:             39391
  Number of reached locations:   1943 (32%)
    Avg states per location:     20
    Max states per location:     371 (at node N8307)
  Number of reached functions:   102 (33%)
  Number of partitions:          39387
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N8500 (exit of function ldv_mutex_lock_interruptible_lock_of_em28xx in lines 22847-22872), Function ldv_mutex_lock_interruptible_lock_of_em28xx called from node N3043, stack depth 4 [60e4b5a], stack [main, em28xx_v4l2_open, ldv_mutex_lock_interruptible_8, ldv_mutex_lock_interruptible_lock_of_em28xx], Init])
  Number of target states:       1
  Size of final wait list        43

Time for analysis setup:          7.644s
  Time for loading CPAs:          0.705s
  Time for loading parser:        0.678s
  Time for CFA construction:      6.145s
    Time for parsing file(s):     1.895s
    Time for AST to CFA:          2.276s
    Time for CFA sanity check:    0.238s
    Time for post-processing:     1.491s
      Time for var class.:        0.000s
Time for Analysis:              107.077s
CPU time for analysis:          124.100s
Total time for CPAchecker:      114.727s
Total CPU time for CPAchecker:  138.520s

Time for Garbage Collector:       1.776s (in 9 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               3445MB (  3286 MiB) max;   1012MB (   965 MiB) avg;   3596MB (  3429 MiB) peak
Used non-heap memory:             28MB (    27 MiB) max;     26MB (    25 MiB) avg;     29MB (    27 MiB) peak
Used in PS Old Gen pool:         204MB (   195 MiB) max;     44MB (    42 MiB) avg;    204MB (   195 MiB) peak
Allocated heap memory:          4799MB (  4577 MiB) max;   3626MB (  3458 MiB) avg
Allocated non-heap memory:        29MB (    28 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:  14603MB ( 13927 MiB) max;  13877MB ( 13234 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 22310) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
