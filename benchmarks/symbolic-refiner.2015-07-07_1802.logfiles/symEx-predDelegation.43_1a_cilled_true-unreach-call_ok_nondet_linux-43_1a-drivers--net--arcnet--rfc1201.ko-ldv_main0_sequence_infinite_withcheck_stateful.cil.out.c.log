scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.4-simple/ALL.prp ../svcomp15/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--net--arcnet--rfc1201.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-174866372_tempdir
line 8263: Function pointer *__cil_tmp46 with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8275: Function pointer *__cil_tmp51 with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8235: Function pointer *__cil_tmp36 with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7718: Function pointer *__cil_tmp502 with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6621: Function pointer *__cil_tmp127 with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6342: Function pointer *__cil_tmp44 with type void (*)(struct net_device *, int, int, void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 8235: Ignoring call via function pointer load_pkt::__cil_tmp36 for which no suitable target was found in line: (*__cil_tmp36)(dev, bufnum, __cil_tmp37, __cil_tmp38, 4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8235: Ignoring function call through function pointer *__cil_tmp36: (*__cil_tmp36)(dev, bufnum, __cil_tmp37, __cil_tmp38, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8263: Ignoring call via function pointer load_pkt::__cil_tmp46 for which no suitable target was found in line: (*__cil_tmp46)(dev, bufnum, 0, __cil_tmp47, 4); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8263: Ignoring function call through function pointer *__cil_tmp46: (*__cil_tmp46)(dev, bufnum, 0, __cil_tmp47, 4); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8275: Ignoring call via function pointer load_pkt::__cil_tmp51 for which no suitable target was found in line: (*__cil_tmp51)(dev, bufnum, ofs, __cil_tmp52, softlen); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 8275: Ignoring function call through function pointer *__cil_tmp51: (*__cil_tmp51)(dev, bufnum, ofs, __cil_tmp52, softlen); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6342: Ignoring call via function pointer rx::__cil_tmp44 for which no suitable target was found in line: (*__cil_tmp44)(dev, bufnum, __cil_tmp45, __cil_tmp46, 16); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6342: Ignoring function call through function pointer *__cil_tmp44: (*__cil_tmp44)(dev, bufnum, __cil_tmp45, __cil_tmp46, 16); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7718: Ignoring call via function pointer rx::__cil_tmp502 for which no suitable target was found in line: (*__cil_tmp502)(dev, bufnum, __cil_tmp503, __cil_tmp512, __cil_tmp513); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7718: Ignoring function call through function pointer *__cil_tmp502: (*__cil_tmp502)(dev, bufnum, __cil_tmp503, __cil_tmp512, __cil_tmp513); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6621: Ignoring call via function pointer rx::__cil_tmp127 for which no suitable target was found in line: (*__cil_tmp127)(dev, bufnum, __cil_tmp130, __cil_tmp135, __cil_tmp138); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6621: Ignoring function call through function pointer *__cil_tmp127: (*__cil_tmp127)(dev, bufnum, __cil_tmp130, __cil_tmp135, __cil_tmp138); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                    493 (count: 495, min: 0, max: 1, avg: 1.00)
Number of global variables:                             493 (count: 495, min: 0, max: 1, avg: 1.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                     850
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.085s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.082s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 7ms

PredicateCPA statistics
-----------------------
Number of abstractions:            849 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  82 (10%)
  Because of loop head:            3 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       849 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   1
  Times result was 'false':        0 (0%)
Number of coverage checks:         108
  BDD entailment checks:           108
Number of SMT sat checks:          1
  trivial:                         1
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          2
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   641 (52%)

Time for post operator:                  0.669s
  Time for path formula creation:        0.660s
    Actual computation:                  0.652s
Time for strengthen operator:            0.008s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  0.178s
  Time for abstraction:                  0.086s (Max:     0.010s, Count: 849)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 961, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.114s
Automaton transfers with branching:                0
Automaton transfer successors:                         6004 (count: 6004, min: 1, max: 1, avg: 1.00) [1 x 6004]

CPA algorithm statistics
------------------------
Number of iterations:            734
Max size of waitlist:            16
Average size of waitlist:        7
Number of computed successors:   850
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         108
Number of times breaked:         1

Total time for CPA algorithm:         1.625s (Max:     0.899s)
  Time for choose from waitlist:      0.016s
  Time for precision adjustment:      0.342s
  Time for transfer relation:         1.188s
  Time for merge operator:            0.000s
  Time for stop operator:             0.025s
  Time for adding to reached set:     0.023s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  59 (count: 1, min: 59, max: 59, avg: 59.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.244s
  Counterexample analysis:                0.212s (Max:     0.212s, Calls: 1)
    Refinement sat check:                 0.175s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.212s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.003s
  Precision update:                                    0.005s
  ARG update:                                          0.000s

Length of refined path (in blocks):                      54 (count: 1, min: 54, max: 54, avg: 54.00)
Number of affected states:                               52 (count: 1, min: 52, max: 52, avg: 52.00)
Length (states) of path with itp 'true':                  1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:        52 (count: 1, min: 52, max: 52, avg: 52.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              51 (count: 1, min: 51, max: 51, avg: 51.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 249
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 249.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:       1.877s
Time for refinements:                 0.252s
Average time for refinement:          0.252s
Max time for refinement:              0.252s

Code Coverage
-----------------------------
  Function coverage:      0.556
  Visited lines:          6362
  Total lines:            6407
  Line coverage:          0.993
  Visited conditions:     137
  Total conditions:       148
  Condition coverage:     0.926

CPAchecker general statistics
-----------------------------
Number of program locations:     483
Number of CFA edges:             590
Number of relevant variables:    894
Number of functions:             27
Number of loops:                 1
Size of reached set:             495
  Number of reached locations:   406 (84%)
    Avg states per location:     1
    Max states per location:     6 (at node N57)
  Number of reached functions:   15 (56%)
  Number of partitions:          495
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.435s
  Time for loading CPAs:          0.590s
  Time for loading parser:        0.564s
  Time for CFA construction:      2.191s
    Time for parsing file(s):     0.828s
    Time for AST to CFA:          0.682s
    Time for CFA sanity check:    0.075s
    Time for post-processing:     0.376s
      Time for var class.:        0.000s
Time for Analysis:                1.877s
CPU time for analysis:            3.060s
Total time for CPAchecker:        5.317s
Total CPU time for CPAchecker:    9.040s

Time for Garbage Collector:       0.000s (in 0 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                274MB (   261 MiB) max;    169MB (   161 MiB) avg;    274MB (   261 MiB) peak
Used non-heap memory:             21MB (    20 MiB) max;     16MB (    15 MiB) avg;     22MB (    21 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        24MB (    23 MiB) max;     24MB (    23 MiB) avg
Total process virtual memory:  13602MB ( 12972 MiB) max;  13586MB ( 12957 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
