scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--char--ipmi--ipmi_msghandler.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_1806043586_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5409: Function pointer *(w->new_smi) with type void (*)(int, struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11138: Function pointer *(intf->handlers->sender) with type void (*)(void *, struct ipmi_smi_msg *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9894: Function pointer *(handlers->sender) with type void (*)(void *, struct ipmi_smi_msg *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7617: Function pointer *(handlers->sender) with type void (*)(void *, struct ipmi_smi_msg *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6039: Function pointer *(intf->handlers->inc_usecount) with type int (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5307: Function pointer *(watcher->new_smi) with type void (*)(int, struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9712: Function pointer *(w->smi_gone) with type void (*)(int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6478: Function pointer *(intf->handlers->set_maintenance_mode) with type void (*)(void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12027: Function pointer *(intf->handlers->set_run_to_completion) with type void (*)(void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11752: Function pointer *(intf->handlers->set_run_to_completion) with type void (*)(void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 11538: Ignoring function call through function pointer *(msg->done): (*(msg->done))(msg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4934: Ignoring function call through function pointer *(msg->done): (*(msg->done))(msg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ipmi_free_smi_msg to intf_free (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11368: Ignoring function call through function pointer *(handlers->request_events): (*(handlers->request_events))(intf->send_info); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ipmi_request_event to intf_free (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_request_event to ipmi_timeout (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5650: Ignoring function call through function pointer *(user->handler->ipmi_recv_hndl): (*(user->handler->ipmi_recv_hndl))(msg, user->handler_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from send_channel_info_cmd to i_ipmi_request (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5637: Ignoring function call through function pointer *(intf->null_user_handler): (*(intf->null_user_handler))(intf, msg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from deliver_response to ipmi_free_recv_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_bmc_rsp to ipmi_free_recv_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_read_event_rsp to ipmi_free_recv_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9894: Ignoring function call through function pointer *(handlers->sender): (*(handlers->sender))(intf->send_info, msg, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10872: Ignoring function call through function pointer *(user->handler->ipmi_watchdog_pretimeout): (*(user->handler->ipmi_watchdog_pretimeout))(user->handler_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from handle_new_recv_msgs to intf_free (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_new_recv_msgs to ipmi_timeout (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_new_recv_msgs to smi_recv_tasklet (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_new_recv_msgs to ipmi_free_smi_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6478: Ignoring function call through function pointer *(intf->handlers->set_maintenance_mode): (*(intf->handlers->set_maintenance_mode))(intf->send_info, intf->maintenance_mode_enable); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from check_msg_timeout to ipmi_free_smi_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 11138: Ignoring function call through function pointer *(intf->handlers->sender): (*(intf->handlers->sender))(intf->send_info, smi_msg, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ipmi_request_event to smi_recv_tasklet (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from free_recv_msg_list to ipmi_free_recv_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from clean_up_interface_data to ipmi_free_recv_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_free_smi_msg to ipmi_timeout (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_free_smi_msg to smi_recv_tasklet (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from free_smi_msg_list to ipmi_free_smi_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7617: Ignoring function call through function pointer *(handlers->sender): (*(handlers->sender))(intf->send_info, smi_msg, priority); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from ipmi_free_recv_msg to intf_free (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_free_recv_msg to ipmi_timeout (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from ipmi_free_recv_msg to smi_recv_tasklet (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_bmc_rsp to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_read_event_rsp to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_oem_get_msg_cmd to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_lan_get_msg_cmd to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_lan_get_msg_rsp to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_ipmb_get_msg_cmd to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_ipmb_get_msg_rsp to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from handle_one_recv_msg to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from deliver_err_response to deliver_response (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 9215: Ignoring function call through function pointer *(intf->handlers->poll): (*(intf->handlers->poll))(intf->send_info); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from i_ipmi_request to ipmi_free_smi_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from i_ipmi_request to ipmi_free_recv_msg (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Skipping recursive function call from smi_recv_tasklet to handle_new_recv_msgs (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis stopped (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                9753912 (count: 1219241, min: 0, max: 8, avg: 8.00)
Number of global variables:                         9753912 (count: 1219241, min: 0, max: 8, avg: 8.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                 1390601
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                5.551s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     3.088s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 1939ms

PredicateCPA statistics
-----------------------
Number of abstractions:            1390593 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  273909 (20%)
  Because of loop head:            23003 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       1390593 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   8
  Times result was 'false':        0 (0%)
Number of coverage checks:         169817
  BDD entailment checks:           169817
Number of SMT sat checks:          8
  trivial:                         8
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          9
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   815190 (41%)

Time for post operator:                644.952s
  Time for path formula creation:      641.330s
    Actual computation:                618.510s
Time for strengthen operator:            2.088s
  Time for satisfiability checks:        0.000s
Time for prec operator:                 67.510s
  Time for abstraction:                 34.329s (Max:     0.828s, Count: 1390593)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 1.071s
  Time for BDD entailment checks:        0.666s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 1560428, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             1.602s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.725s
  Time for transition matches:                         4.443s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      2034737 (count: 2034737, min: 1, max: 1, avg: 1.00) [1 x 2034737]

CPA algorithm statistics
------------------------
Number of iterations:            1220700
Max size of waitlist:            80
Average size of waitlist:        52
Number of computed successors:   1390601
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         169817
Number of times breaked:         8

Total time for CPA algorithm:       799.080s (Max:   797.416s)
  Time for choose from waitlist:      1.641s
  Time for precision adjustment:     83.911s
  Time for transfer relation:       694.556s
  Time for merge operator:            0.454s
  Time for stop operator:             4.350s
  Time for adding to reached set:     4.467s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                 456 (count: 8, min: 50, max: 64, avg: 57.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.749s
  Counterexample analysis:                0.604s (Max:     0.100s, Calls: 8)
    Refinement sat check:                 0.506s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.003s
  Building the counterexample trace:                   0.605s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.017s
  ARG update:                                          0.000s

Length of refined path (in blocks):                     424 (count: 8, min: 46, max: 60, avg: 53.00)
Number of affected states:                              384 (count: 8, min: 41, max: 55, avg: 48.00)
Length (states) of path with itp 'true':                 32 (count: 8, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:       384 (count: 8, min: 41, max: 55, avg: 48.00)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             376 (count: 8, min: 40, max: 54, avg: 47.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 201
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 194.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:     799.849s
Time for refinements:                 0.769s
Average time for refinement:          0.096s
Max time for refinement:              0.118s

Code Coverage
-----------------------------
  Function coverage:      0.373
  Visited lines:          5688
  Total lines:            8099
  Line coverage:          0.702
  Visited conditions:     722
  Total conditions:       1380
  Condition coverage:     0.523

CPAchecker general statistics
-----------------------------
Number of program locations:     4158
Number of CFA edges:             5899
Number of relevant variables:    1177
Number of functions:             271
Number of loops:                 49
Size of reached set:             1219241
  Size of final wait list        53

Time for analysis setup:          5.372s
  Time for loading CPAs:          0.656s
  Time for loading parser:        0.669s
  Time for CFA construction:      3.954s
    Time for parsing file(s):     1.069s
    Time for AST to CFA:          1.472s
    Time for CFA sanity check:    0.170s
    Time for post-processing:     1.015s
      Time for var class.:        0.000s
Time for Analysis:              799.849s
CPU time for analysis:          890.310s
Total time for CPAchecker:      805.229s
Total CPU time for CPAchecker:  900.040s

Time for Garbage Collector:      77.725s (in 52 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               5164MB (  4925 MiB) max;   2777MB (  2648 MiB) avg;   6178MB (  5892 MiB) peak
Used non-heap memory:             27MB (    25 MiB) max;     25MB (    24 MiB) avg;     27MB (    26 MiB) peak
Used in PS Old Gen pool:        2535MB (  2418 MiB) max;   1221MB (  1164 MiB) avg;   2535MB (  2418 MiB) peak
Allocated heap memory:          6791MB (  6476 MiB) max;   4980MB (  4749 MiB) avg
Allocated non-heap memory:        51MB (    48 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:  14019MB ( 13369 MiB) max;  13785MB ( 13146 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
