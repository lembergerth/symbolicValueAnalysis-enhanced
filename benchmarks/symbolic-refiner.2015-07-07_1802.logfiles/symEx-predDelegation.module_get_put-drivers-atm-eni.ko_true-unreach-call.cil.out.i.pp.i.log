scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-linux-3.0/ALL.prp ../svcomp15/ldv-linux-3.0/module_get_put-drivers-atm-eni.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_-131144888_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6962: Function pointer *(ops__1->alloc_coherent) with type void * (*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7017: Function pointer *(ops__1->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6788-6789: Function pointer *(ops__1->map_page) with type dma_addr_t  (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6838: Function pointer *(ops__1->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

line 11594: Ignoring function call through function pointer *(dev->phy->interrupt): (*(dev->phy->interrupt))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6838: Ignoring function call through function pointer *(ops__1->unmap_page): (*(ops__1->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9143: Ignoring function call through function pointer *(vcc->push): (*(vcc->push))(vcc, skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8768: Ignoring function call through function pointer *(__CPAchecker_TMP_3->rx): tmp___3 = (*(__CPAchecker_TMP_3->rx))(vcc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 6788-6789: Ignoring function call through function pointer *(ops__1->map_page): addr = (*(ops__1->map_page))(dev, (struct page *)(1152897315351035904UL + (tmp___2 >> 12)), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8728: Ignoring function call through function pointer *(__CPAchecker_TMP_2->rx): tmp___0 = (*(__CPAchecker_TMP_2->rx))(vcc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10559: Ignoring function call through function pointer *(vcc->pop): (*(vcc->pop))(vcc, skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6962: Ignoring function call through function pointer *(ops__1->alloc_coherent): memory = (*(ops__1->alloc_coherent))(dev, size, dma_handle, tmp___1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12866: Ignoring function call through function pointer *(dev->phy->start): error = (*(dev->phy->start))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7017: Ignoring function call through function pointer *(ops__1->free_coherent): (*(ops__1->free_coherent))(dev, size, vaddr, bus); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13555: Ignoring function call through function pointer *(vcc->pop): (*(vcc->pop))(vcc, skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13536: Ignoring function call through function pointer *(vcc->pop): (*(vcc->pop))(vcc, skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13512: Ignoring function call through function pointer *(vcc->pop): (*(vcc->pop))(vcc, skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Skipping recursive function call from eni_ioctl to eni_ioctl (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7150: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                  33194 (count: 33196, min: 0, max: 1, avg: 1.00)
Number of global variables:                           33194 (count: 33196, min: 0, max: 1, avg: 1.00)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                   75018
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.335s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.239s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 0
Most constraints before refinement in state: 0
Constraints after refinement in state: 0
Constraints before refinement in state: 0
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 155ms

PredicateCPA statistics
-----------------------
Number of abstractions:            75017 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13082 (17%)
  Because of loop head:            2872 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       75017 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   1
  Times result was 'false':        0 (0%)
Number of coverage checks:         8626
  BDD entailment checks:           8626
Number of SMT sat checks:          1
  trivial:                         1
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          2
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   88461 (70%)

Time for post operator:                 13.796s
  Time for path formula creation:       13.563s
    Actual computation:                 12.655s
Time for strengthen operator:            0.120s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  3.468s
  Time for abstraction:                  1.673s (Max:     0.014s, Count: 75017)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.111s
  Time for BDD entailment checks:        0.088s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 83647, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.111s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.730s
  Time for transition matches:                         0.267s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       141318 (count: 141318, min: 1, max: 1, avg: 1.00) [1 x 141318]

CPA algorithm statistics
------------------------
Number of iterations:            66392
Max size of waitlist:            44
Average size of waitlist:        27
Number of computed successors:   75018
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         8626
Number of times breaked:         1

Total time for CPA algorithm:        24.855s (Max:    19.780s)
  Time for choose from waitlist:      0.115s
  Time for precision adjustment:      4.729s
  Time for transfer relation:        18.269s
  Time for merge operator:            0.080s
  Time for stop operator:             0.462s
  Time for adding to reached set:     0.343s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                  25 (count: 1, min: 25, max: 25, avg: 25.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.624s
  Counterexample analysis:                0.090s (Max:     0.090s, Calls: 1)
    Refinement sat check:                 0.076s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.000s
  Building the counterexample trace:                   0.090s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.001s
  Precision update:                                    0.003s
  ARG update:                                          0.000s

Length of refined path (in blocks):                      21 (count: 1, min: 21, max: 21, avg: 21.00)
Number of affected states:                               19 (count: 1, min: 19, max: 19, avg: 19.00)
Length (states) of path with itp 'true':                  1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:        19 (count: 1, min: 19, max: 19, avg: 19.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              18 (count: 1, min: 18, max: 18, avg: 18.00)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 33198
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 33198.00
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      25.559s
Time for refinements:                 0.704s
Average time for refinement:          0.704s
Max time for refinement:              0.704s

Code Coverage
-----------------------------
  Function coverage:      0.946
  Visited lines:          8857
  Total lines:            8879
  Line coverage:          0.998
  Visited conditions:     947
  Total conditions:       958
  Condition coverage:     0.989

CPAchecker general statistics
-----------------------------
Number of program locations:     2668
Number of CFA edges:             3687
Number of relevant variables:    863
Number of functions:             111
Number of loops:                 46
Size of reached set:             33196
  Number of reached locations:   2628 (99%)
    Avg states per location:     12
    Max states per location:     408 (at node N122)
  Number of reached functions:   105 (95%)
  Number of partitions:          33196
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.464s
  Time for loading CPAs:          0.762s
  Time for loading parser:        0.526s
  Time for CFA construction:      4.099s
    Time for parsing file(s):     1.195s
    Time for AST to CFA:          1.717s
    Time for CFA sanity check:    0.122s
    Time for post-processing:     0.742s
      Time for var class.:        0.000s
Time for Analysis:               25.559s
CPU time for analysis:           38.790s
Total time for CPAchecker:       31.028s
Total CPU time for CPAchecker:   48.900s

Time for Garbage Collector:       0.550s (in 3 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:               1116MB (  1064 MiB) max;    409MB (   390 MiB) avg;   1160MB (  1106 MiB) peak
Used non-heap memory:             27MB (    25 MiB) max;     23MB (    22 MiB) avg;     27MB (    26 MiB) peak
Used in PS Old Gen pool:          14MB (    14 MiB) max;      3MB (     3 MiB) avg;     14MB (    14 MiB) peak
Allocated heap memory:          2553MB (  2435 MiB) max;   2272MB (  2166 MiB) avg
Allocated non-heap memory:        28MB (    27 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:  13597MB ( 12967 MiB) max;  13594MB ( 12964 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
