scripts/cpa.sh -heap 10000M -noout -setprop log.consoleLevel=WARNING -skipRecursion -valueAnalysis-symbolic-refiner-pred -setprop cpa.value.symbolic.handlePointers=false -64 -timelimit 900s -stats -spec ../svcomp15/ldv-consumption/ALL.prp ../svcomp15/ldv-consumption/32_7a_cilled_false-unreach-call_linux-3.8-rc1-32_7a-fs--ecryptfs--ecryptfs.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 10000M.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/vcloud-vcloud-master/worker/tmp_2039720772_tempdir
Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 14113: Function pointer *(tmp->setkey) with type int (*)(struct crypto_tfm *, u8 *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14246: Function pointer *(tmp->update) with type int (*)(struct hash_desc *, struct scatterlist *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7845: Function pointer *(lower_dentry->d_inode->i_op->readlink) with type int (*)(struct dentry *, char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

The following configuration options were specified but are not used:
 counterexample.checker.config
 counterexample.checker 
 (CPAchecker.printConfigurationWarnings, WARNING)

Skipping recursive function call from ecryptfs_fasync to ecryptfs_fasync (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5644: Ignoring function call through function pointer *(lower_file->f_op->flush): tmp___0 = (*(lower_file->f_op->flush))(lower_file, td); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5543: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s: Setting flags for stat...\n", "ecryptfs_open") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Cannot get declaration of function __builtin_va_start, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9675: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end((__va_list_tag *)(&args)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

lines 16015-16016: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s: m_1 = [0x%.8x]; m_2 = [0x%.8x]; MAGIC_ECRYPTFS_MARKER = [0x%.8x]\n", "ecryptfs_validate_marker", m_1, m_2, 1015134197) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16018-16019: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s: (m_1 ^ MAGIC_ECRYPTFS_MARKER) = [0x%.8x]\n", "ecryptfs_validate_marker", m_1 ^ 1015134197U) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16698-16699: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\f%s: Error reading header metadata; rc = [%d]\n", "ecryptfs_read_headers_virt", rc) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 21556: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\v%s: Could not find a usable authentication token\n", "ecryptfs_parse_packet_set") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 21509: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s: Considering cadidate auth tok:\n", "ecryptfs_parse_packet_set") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 26877-26878: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s: Auth tok at mem loc [%p]:\n", "ecryptfs_dump_auth_tok", auth_tok) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 26882: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s:  * private key type\n", "ecryptfs_dump_auth_tok") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 26885: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s:  * passphrase type\n", "ecryptfs_dump_auth_tok") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 26891: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s:  * salt = [%s]\n", "ecryptfs_dump_auth_tok", (char *)(&salt)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 26895: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s:  * persistent\n", "ecryptfs_dump_auth_tok") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 26914: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s:  * signature = [%s]\n", "ecryptfs_dump_auth_tok", (char *)(&sig)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 26917-26918: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s:  * session_key.flags = [0x%x]\n", "ecryptfs_dump_auth_tok", auth_tok->session_key.flags) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 26922: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s:  * Userspace decrypt request set\n", "ecryptfs_dump_auth_tok") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 26929: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s:  * Userspace encrypt request set\n", "ecryptfs_dump_auth_tok") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 26936: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s:  * Contains decrypted key\n", "ecryptfs_dump_auth_tok") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 26938-26939: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s:  * session_key.decrypted_key_size = [0x%x]\n", "ecryptfs_dump_auth_tok", auth_tok->session_key.decrypted_key_size) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 26941: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s:  * Decrypted session key dump:\n", "ecryptfs_dump_auth_tok") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 26955: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s:  * Contains encrypted key\n", "ecryptfs_dump_auth_tok") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 26957-26958: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s:  * session_key.encrypted_key_size = [0x%x]\n", "ecryptfs_dump_auth_tok", auth_tok->session_key.encrypted_key_size) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 26960: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s:  * Encrypted session key dump:\n", "ecryptfs_dump_auth_tok") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 19322-19323: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\v%s: Minor version number mismatch. Expected [%d]; got [%d]\n", "ecryptfs_verify_version", 4, (int)minor) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 19310-19311: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\v%s: Major version number mismatch. Expected [%d]; got [%d]\n", "ecryptfs_verify_version", 0, (int)major) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 18637-18638: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\f%s: Unknown error code: [0x%.16lx]\n", "process_request_key_err", err_code) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 18630: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\f%s: Key revoked\n", "process_request_key_err") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 18623: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\f%s: Key expired\n", "process_request_key_err") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 18616: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\f%s: No key\n", "process_request_key_err") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 21215-21216: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s: Session key encryption key (size [%d]):\n", "decrypt_passphrase_encrypted_session_key", auth_tok->token.password.session_key_encryption_key_bytes) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 14113: Ignoring function call through function pointer *(tmp->setkey): tmp___1 = (*(tmp->setkey))(tmp___0, key, keylen); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 18531: Ignoring function call through function pointer *(tmp___0->decrypt): tmp___1 = (*(tmp___0->decrypt))(desc, dst, src, nbytes); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 21317-21318: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s: FEK of size [%zd]:\n", "decrypt_passphrase_encrypted_session_key", crypt_stat->key_size) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 18754-18755: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\f%s: Unsupported packet size: [%zd]\n", "ecryptfs_write_packet_length", size) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 18837-18838: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\v%s: Error generating tag 64 packet header; cannot generate packet length\n", "write_tag_64_packet") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 18810-18811: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\v%s: Error generating tag 64 packet header; cannot generate packet length\n", "write_tag_64_packet") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 18791: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\v%s: Unable to allocate memory\n", "write_tag_64_packet") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 21465-21466: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s: No packet at offset [%zd] of the file header; hex value of character is [0x%.2x]\n", "ecryptfs_parse_packet_set", i, (int)(*(src + i))) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 21458: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\f%s: Invalid packet set (Tag 11 not allowed by itself)\n", "ecryptfs_parse_packet_set") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 18716: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\v%s: Error parsing packet length\n", "ecryptfs_parse_packet_length") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 18709: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\v%s: Five-byte packet length not supported\n", "ecryptfs_parse_packet_length") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 21442: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\v%s: Error parsing tag 1 packet\n", "ecryptfs_parse_packet_set") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 16254-16255: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\f%s: Cipher code not recognized: [%d]\n", "ecryptfs_cipher_code_to_string", (int)cipher_code) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 15558-15560: Ignoring parameters passed as varargs to function __ecryptfs_printk: __ecryptfs_printk("\017%s: Initializing cipher [%s]; strlen = [%d]; key_size_bits = [%zd]\n", "ecryptfs_init_crypt_ctx", (unsigned char *)(&(crypt_stat->cipher)), (int)tmp, (crypt_stat->key_size) << 3) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Error: Refinement using predicate refinement failed.Try using cpa.value.symbolic.refiner.SymbolicValueAnalysisRefiner (SymbolicPrecisionRefinementStrategy.performRefinement, SEVERE)

ValueAnalysisCPA statistics
---------------------------
Number of variables:                                  11039 (count: 1208, min: 0, max: 11, avg: 9.14)
Number of global variables:                            9648 (count: 1208, min: 0, max: 8, avg: 7.99)

ValueAnalysisPrecisionAdjustment statistics
-------------------------------------------
Number of abstraction computations:                   22163
Total time for liveness abstraction:                   0.000s
Total time for abstraction computation:                0.319s
Total time for path thresholds:                        0.000s

ConstraintsStrengthenOperator statistics
----------------------------------------
Total time for strengthening by ConstraintsCPA:     0.128s
Replaced symbolic expressions: 0

ConstraintsPrecisionAdjustment statistics
-----------------------------------------
Most constraints after refinement in state: 1
Most constraints before refinement in state: 1
Constraints after refinement in state: 6
Constraints before refinement in state: 15
Average time for constraints adjustment: 0ms
Complete time for constraints adjustment: 75ms

PredicateCPA statistics
-----------------------
Number of abstractions:            22150 (100% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4293 (19%)
  Because of loop head:            220 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Times precision was empty:       22150 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   13
  Times result was 'false':        0 (0%)
Number of coverage checks:         1919
  BDD entailment checks:           1919
Number of SMT sat checks:          13
  trivial:                         13
  cached:                          0

Max ABE block size:                       1
Number of predicates discovered:          14
Number of abstraction locations:          0
Max number of predicates per location:    0
Avg number of predicates per location:    0

Number of path formula cache hits:   35587 (88%)

Time for post operator:                  3.319s
  Time for path formula creation:        3.193s
    Actual computation:                  2.752s
Time for strengthen operator:            0.047s
  Time for satisfiability checks:        0.000s
Time for prec operator:                  1.638s
  Time for abstraction:                  0.681s (Max:     0.037s, Count: 22150)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.000s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     0.000s

Number of BDD nodes:                               202
Size of BDD node table:                            466043
Size of BDD cache:                                 46619
Size of BDD node cleanup queue:                           0 (count: 24097, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.024s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.362s
Automaton transfers with branching:                0
Automaton transfer successors:                        51011 (count: 51011, min: 1, max: 1, avg: 1.00) [1 x 51011]

CPA algorithm statistics
------------------------
Number of iterations:            19586
Max size of waitlist:            61
Average size of waitlist:        46
Number of computed successors:   22163
Max successors for one state:    2
Number of times merged:          0
Number of times stopped:         1919
Number of times breaked:         13

Total time for CPA algorithm:         9.056s (Max:     1.250s)
  Time for choose from waitlist:      0.052s
  Time for precision adjustment:      2.376s
  Time for transfer relation:         5.863s
  Time for merge operator:            0.023s
  Time for stop operator:             0.174s
  Time for adding to reached set:     0.159s

Predicate-Abstraction Refiner statistics
----------------------------------------
Avg. length of target path (in blocks):                6022 (count: 13, min: 98, max: 677, avg: 463.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.727s
  Counterexample analysis:                8.726s (Max:     1.008s, Calls: 13)
    Refinement sat check:                 6.037s
    Interpolant computation:              0.000s
  Error path post-processing:                          0.000s
  Path-formulas extraction:                            0.006s
  Building the counterexample trace:                   8.726s
  Extracting precise counterexample:                   0.000s
  Extracting infeasible sliced prefixes:               0.000s
  Selecting infeasible sliced prefixes:                0.000s
  Predicate creation:                                  0.054s
  Precision update:                                    0.061s
  ARG update:                                          0.000s

Length of refined path (in blocks):                    4852 (count: 12, min: 94, max: 625, avg: 404.33)
Number of affected states:                             3165 (count: 12, min: 1, max: 620, avg: 263.75)
Length (states) of path with itp 'true':               1675 (count: 12, min: 4, max: 460, avg: 139.58)
Length (states) of path with itp non-trivial itp:      3165 (count: 12, min: 1, max: 620, avg: 263.75)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 12, min: 0, max: 1, avg: 0.08)
Equal non-trivial interpolants along paths:            3152 (count: 12, min: 0, max: 619, avg: 262.67)
Different precisions along paths:                         0 (count: 0, min: 0, max: 0, avg: 0.00)
Equal precisions along paths:                             0 (count: 0, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 2593
Max. size of reached set after ref.:  1
Avg. size of reached set before ref.: 1558.23
Avg. size of reached set after ref.:  1.00

Total time for CEGAR algorithm:      18.584s
Time for refinements:                 9.528s
Average time for refinement:          0.732s
Max time for refinement:              1.028s

Code Coverage
-----------------------------
  Function coverage:      0.122
  Visited lines:          5426
  Total lines:            14601
  Line coverage:          0.372
  Visited conditions:     259
  Total conditions:       2548
  Condition coverage:     0.102

CPAchecker general statistics
-----------------------------
Number of program locations:     9114
Number of CFA edges:             12972
Number of relevant variables:    2754
Number of functions:             672
Number of loops:                 63
Size of reached set:             1208
  Number of reached locations:   835 (9%)
    Avg states per location:     1
    Max states per location:     13 (at node N2485)
  Number of reached functions:   82 (12%)
  Number of partitions:          1203
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N5836 (exit of function ecryptfs_validate_marker in lines 15997-16023), Function ecryptfs_validate_marker called from node N6202, stack depth 7 [43117a45], stack [main, ecryptfs_flush, ecryptfs_open, read_or_initialize_metadata, ecryptfs_read_metadata, ecryptfs_read_headers_virt, ecryptfs_validate_marker], Init])
  Number of target states:       1
  Size of final wait list        61

Time for analysis setup:          8.619s
  Time for loading CPAs:          0.781s
  Time for loading parser:        0.516s
  Time for CFA construction:      7.248s
    Time for parsing file(s):     1.964s
    Time for AST to CFA:          2.557s
    Time for CFA sanity check:    0.655s
    Time for post-processing:     1.841s
      Time for var class.:        0.000s
Time for Analysis:               18.584s
CPU time for analysis:           25.980s
Total time for CPAchecker:       27.208s
Total CPU time for CPAchecker:   42.140s

Time for Garbage Collector:       0.296s (in 2 runs)
Garbage Collector(s) used:    PS MarkSweep, PS Scavenge
Used heap memory:                587MB (   559 MiB) max;    324MB (   309 MiB) avg;    592MB (   565 MiB) peak
Used non-heap memory:             26MB (    25 MiB) max;     22MB (    21 MiB) avg;     26MB (    25 MiB) peak
Used in PS Old Gen pool:           0MB (     0 MiB) max;      0MB (     0 MiB) avg;      0MB (     0 MiB) peak
Allocated heap memory:          2024MB (  1930 MiB) max;   2024MB (  1930 MiB) avg
Allocated non-heap memory:        27MB (    26 MiB) max;     26MB (    24 MiB) avg
Total process virtual memory:  13748MB ( 13111 MiB) max;  13621MB ( 12990 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
